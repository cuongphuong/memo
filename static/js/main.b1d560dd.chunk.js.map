{"version":3,"sources":["LayoutComponents/Layout.js","ViewComponents/Viewer.js","LayoutComponents/ViewPopup.js","Utils/RequestAPI.js","Utils/StringUtils.js","Utils/CacheManager.js","Utils/SettingsCache.js","API/Github/Request.js","Utils/ContentRender.js","ViewComponents/List.js","Actions/SearchReducer.js","Utils/SearchHistoryCache.js","LayoutComponents/QuickSearchTab.js","Utils/CategoryListCache.js","ViewComponents/CategoryList.js","Actions/ListTabReducer.js","LayoutComponents/ListTab.js","Utils/GithubCRUD.js","ViewComponents/CategoryInput.js","Utils/ContentWriterCache.js","LayoutComponents/WriterTab.js","LayoutComponents/SettingsTab.js","ViewComponents/StyleSettings.js","Actions/StyleReducer.js","LayoutComponents/GithubAuthenticate.js","App.js","reportWebVitals.js","Reducers/ListTabReducer.js","Reducers/SearchReducer.js","Reducers/StyleReducer.js","Reducers/index.js","store.js","index.js"],"names":["Layout","children","className","Header","style","useSelector","state","id","headerMenu","rederIcon","title","icon","faFeather","faTableList","faMagnifyingGlass","Item","onClick","selected","faGear","menuSelected","SiderBar","leftBackground","RightContent","MiddleContent","FullContent","Fooder","Viewer","props","React","useState","content","setContent","source","a","url","window","location","protocol","host","filePath","replaceAll","substr","length","encodeURI","link","navigator","clipboard","writeText","NotificationManager","info","useEffect","isPopupView","onClose","marginLeft","cursor","src","width","alt","margin","remarkPlugins","remarkGfm","rehypePlugins","rehypeHighlight","ViewPopup","stype","setStype","isSuccess","onDelete","display","onEdit","animationName","textAlign","height","RequestAPI","baseUrl","timeout","headers","makeRequestConfig","inp","configs","method","signal","data","body","sendRequest","fetch","then","response","ok","Error","status","contentType","get","indexOf","json","text","catch","err","trim","requestConfig","add_config","base_url","in_headers","exe","StringUtils","str","EMPTY","Base64","encode","decode","defaultStr","ret","startsWith","substring","endsWith","trimL","toLowerCase","replace","num","slice","CacheManager","key","expire","this","items","getAll","value","store","hasOwnProperty","localStorage","setItem","JSON","stringify","Date","getTime","stored","getItem","isExpired","parse","whenCached","age","clear","removeItem","cache","getSingleton","settingsCache","LocalCache","SettingsCache","getCacheTime","has","setCacheTimeMinute","cacheTime","add","getUrlRepository","getRequestTimeout","setUrlRepository","urlRepository","setRequestTimeout","requestTimeout","getAccessKey","setAccessKey","accessKey","getUserName","setUserName","userName","getEmail","setEmail","email","getCacheMinutes","millis","toFixed","setTheme","theme","getTheme","setAvatarUrl","getAvatarUrl","releaseCache","REPOSITORY_SOURCE","TIME_OUT","TOKEN_KEY","USE_NAME","E_MAIL","config","Accept","isNullOrEmpty","Authorization","request","author","name","searchFromGitHub","console","log","result","readContentByPath","path","getUser","username","save","message","updateContent","sha","getRef","ref","object","getTree","tree","postTree","base_tree","payload","commit","parent","parents","updateHead","head","ContentRender","apiResult","total_count","warning","error","pathFileList","Set","postObjectList","Promise","all","map","item","makeContentObject","contentObject","apiContentResult","base64Content","decodeContent","index","DEFAULT_DELIMITER","cfgAreaStr","contentAreaStr","makeConfigFromResult","m","regex","exec","lastIndex","mathItems","split","configKey","configValue","Array","isArray","categoryList","forEach","type","resultObject","itemList","hasContnent","removeMd","require","List","category","handleChooseItem","activeId","padding","color","fontSize","lineHeight","setActiveId","setMdContent","mdContent","setSearchResultList","searchResultList","searchCache","SearchHistoryCache","getTopKeyWord","allItem","Object","keys","sort","b","insertKey","keysSorted","del","removeMinItem","QuickSearchTab","refController","useRef","dispatch","useDispatch","searchData","isProcessing","setIsProcessing","inputValue","setInputValue","searchCacheList","setSearchCacheList","isDisplayPopup","setIsDisplayPopup","dataView","setDataView","inputObj","typingTimer","useParams","useCallback","handleSearchChange","evt","target","clearTimeout","current","AbortController","setTimeout","aborted","doneTyping","keyword","search","apiResultContentList","focus","cacheKeywordList","searchByPramater","history","replaceState","abort","backgroundColor","maxWidth","minHeight","onChange","placeholder","spellCheck","marginTop","onFailed","memo","categoryCache","CategoryListCache","setOrUpdateCache","trees","filter","p","isCached","getMainCategory","element","includes","getElementByPath","elementPath","isExistedInPath","list","pathList","makeOutputList","updateDataIntoPath","newDataList","correctPath","newTree","push","mode","CategoryList","Row","handleItemClick","renderList","setRenderList","sourcePath","setSourcePath","isLoadding","setIsLoadding","fetchFromAPI","getAllItemFromPath","dataList","categoryObj","property","makeRenderList","gotoPath","tmpList","fixPathList","pop","renderPathList","onClickSubFolder","Block","dirList","fileList","renderItem","setCategoryList","ListTab","listTabData","callback","latestCommit","getTreeList","mainCategoryList","loadding","fetchTreesList","categoryName","create","update","dataAPI","lastSha","move","branch","newPath","isDeleted","rootTree","commit_msg","CategoryInput","nameInput","pathDataList","pathRenderList","setPathRenderList","isFetching","setIsFetching","makeReturn","join","makeNewCategory","currentPath","subList","makeSubListFromAPI","lastItem","at","getAllCategoryList","subDataList","makePathStr","el","defaultTitle","categorys","defaultCategory","categoryPathList","marginBottom","borderLine","onKeyUp","which","keyCode","charCode","handleKeyInput","position","currentCtgList","top","zIndex","renderSubCategoryList","writerCache","ContentWriterCache","setTitle","getTitle","getContent","setPath","getPath","getCategory","setIsUpdate","isUpdate","WriterTab","mdParser","MarkdownIt","updateAction","inputPath","clearPath","isCreateed","originData","titleFix","truncateString","fileContent","commitMsg","base64Encode","hub","html_url","open","isUpdated","float","button","onImageUpload","file","reader","FileReader","onload","fileName","res","download_url","readAsDataURL","renderHTML","render","html","SettingsTab","urlRepositoryInput","cacheTimeDayInput","requestTimeoutInput","accessKeyInput","userNameInput","emailInput","avatarViewer","isView","setIsView","reload","tokenSet","defaultValue","faEye","faEyeSlash","confirm","faSave","faArrowAltCircleRight","href","faGithub","StyleSettings","changeStyle","action","GithubAuthenticate","setMessage","queryParams","URLSearchParams","code","formData","FormData","append","access_token","r","userInfomation","login","avatar_url","App","HomePage","menuList","selectedMenu","setSelectedMenu","viewContentObj","editPath","onSubmitSuccess","obj","setViewContentObj","onEditFile","defaultPost","actionSubmit","rederTabView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","blockCategoryObj","ListTabReducer","newCategoryList","newBlockCategoryObj","searchKeyWord","SearchReducer","orangeStyle","backgroundImage","background","border","borderLineHover","boxShadow","marginRight","input","outline","blueStyle","violetStyle","StyleReducer","rootReducer","combineReducers","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b1d560dd.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux';\nimport \"./Layout.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGear, faTableList, faFeather, faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Layout = ({ children }) => {\n    return (\n        <div className=\"pg_mm_grid-container\">\n            {children}\n        </div>\n    )\n}\n\nconst Header = ({ children }) => {\n    const style = useSelector(state => state.style);\n    return (\n        <div className=\"pg_mm_header\" id=\"pg_mm_header-menu\">\n            <ul style={style.headerMenu}>\n                {children}\n            </ul>\n        </div>\n    );\n}\n\nfunction rederIcon(title) {\n    if (title === \"Write\") {\n        return <FontAwesomeIcon icon={faFeather} />\n    }\n\n    if (title === \"List\") {\n        return <FontAwesomeIcon icon={faTableList} />\n    }\n\n    if (title === \"Search\") {\n        return <FontAwesomeIcon icon={faMagnifyingGlass} />\n    }\n}\n\nconst HeaderItem = ({ onClick, title, selected }) => {\n    const style = useSelector(state => state.style);\n\n    if (title === \"Settings\") {\n        return <p onClick={() => onClick(title)} className='pg_mm_settings_menu_item unselectable'><FontAwesomeIcon icon={faGear} /></p>\n    }\n\n    return (\n        <li>\n            <span\n                className=\"unselectable\"\n                style={selected === title ? style.menuSelected : {}}\n                onClick={() => onClick(title)}>\n                {rederIcon(title)}\n            </span>\n        </li>\n    );\n}\n\nHeader.Item = HeaderItem;\n\nconst SiderBar = ({ children }) => {\n    const style = useSelector(state => state.style);\n    return (\n        <div\n            style={style.leftBackground}\n            className=\"pg_mm_left pg_mm_scroll\">\n            {children}\n        </div>\n    );\n}\n\nconst RightContent = ({ children }) => {\n    return (\n        <div className=\"pg_mm_right pg_mm_scroll\">\n            {children}\n        </div>\n    );\n}\n\nconst MiddleContent = ({ children }) => {\n    return (\n        <div className=\"pg_mm_mid pg_mm_scroll\">\n            {children}\n        </div>\n    );\n}\n\n\nconst FullContent = ({ children }) => {\n    return (\n        <div className=\"pg_mm_content_full\">\n            {children}\n        </div>\n    );\n}\n\nconst Fooder = () => {\n\n}\n\nLayout.Header = Header;\nLayout.SiderBar = SiderBar;\nLayout.RightContent = RightContent;\nLayout.MiddleContent = MiddleContent;\nLayout.FullContent = FullContent;\nLayout.Fooder = Fooder;\nexport default Layout;\n","import React from 'react'\nimport { NotificationManager } from 'react-notifications';\n// import { deleteFile } from '../Utils/GithubCRUD';\n// import renderHTML from 'react-render-html';\nimport \"./Viewer.css\";\nimport \"./markdown.css\";\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport rehypeHighlight from 'rehype-highlight'\n\nexport default function Viewer(props) {\n\n    const [content, setContent] = React.useState(`Just a link: https://reactjs.com.`);\n    let { source } = props;\n\n    React.useEffect(() => {\n        setContent(source.content)\n    }, [props.isPopupView, source.content])\n\n    // function onEdit() {\n    //     props.onEdit(props.source.filePath);\n    // }\n\n    // async function onDelete() {\n    //     if (!window.confirm(\"Do you want to delete \" + props.source.filePath) === true) {\n    //         return;\n    //     }\n    //     try {\n    //         await deleteFile(props.source.filePath);\n    //         NotificationManager.info(\"Deleted.\");\n    //         props.onDelete(true);\n    //     } catch (err) {\n    //         props.onDelete(false);\n    //     }\n    // }\n\n    async function handleCopyLink() {\n        // Make link\n        let url = window.location.protocol + '//' + window.location.host;\n        let id = source.filePath.replaceAll(\"/\", \"+\");\n        id = id.substr(0, id.length - 3);\n        id = encodeURI(id);\n        let link = url + \"/memo/#/get/\" + id;\n\n        await navigator.clipboard.writeText(link);\n        NotificationManager.info(\"Copied: \" + link);\n    }\n\n    return (\n        <section className=\"section sec-html visible markdown-section pg_mm_container_view\">\n            {/* <span onClick={onEdit} className=\"pg_mm_view_edit_button\">Edit [/]</span>\n            <span onClick={onDelete} className=\"pg_mm_view_delete_button\">Delete [#]</span> */}\n            {\n                props.isPopupView ?\n                    <span onClick={() => { props.onClose() }} className=\"pg_mm_view_cls_button\"></span>\n                    :\n                    \"\"\n            }\n            <div className=\"section-container html-wrap\">\n                <div className=\"custom-html-style\">\n                    <h2 className='pg_mm_title'>\n                        {source.title}\n                        <img onClick={handleCopyLink}\n                            style={{ marginLeft: 10, cursor: 'pointer' }}\n                            src='/memo/icon/copy.png'\n                            width={20}\n                            alt='copy'\n                        />\n                    </h2>\n                    {source.title ? <hr style={{ margin: '10px 0' }} /> : ''}\n                    <div className='pg_mm_view_content'>\n                        <ReactMarkdown children={content} remarkPlugins={[remarkGfm]} rehypePlugins={[rehypeHighlight]} />\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n","import React from 'react';\nimport Viewer from '../ViewComponents/Viewer';\nimport \"./ViewPopup.css\";\n\nexport default function ViewPopup(props) {\n    const [stype, setStype] = React.useState(null);\n\n    React.useEffect(() => {\n        setStype({\n            display: props.display\n        });\n\n        return () => {\n        }\n    }, [props.display])\n\n    function onClosePopup() {\n        props.onClose();\n    }\n\n    function onEdit(filePath) {\n        props.onEdit(filePath);\n    }\n\n    async function onDelete(isSuccess) {\n        if (!isSuccess) {\n            props.onDelete(isSuccess);\n        }\n    }\n\n    return (\n        <div style={stype} className=\"pg_mm_view_popup\">\n            {props.source ?\n                <Viewer\n                    isPopupView\n                    source={props.source}\n                    onDelete={onDelete}\n                    onClose={onClosePopup}\n                    onEdit={onEdit}\n                />\n                : stype && !stype.animationName\n                    ?\n                    <img\n                        style={{ textAlign: 'center' }}\n                        className=\"pg_mm_loadding\"\n                        height=\"50px\"\n                        src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\n                        alt=\"loadding...\"\n                    /> : \"\"}\n        </div>\n    )\n}\n","export const RequestAPI = (function () {\n    let baseUrl = null;\n    let timeout = 10000;\n    let headers = {};\n\n    function makeRequestConfig(inp) {\n        if (!inp) return {};\n\n        let configs = {\n            headers: headers,\n            method: inp.method\n        }\n\n        if (inp.signal) {\n            configs = { ...configs, signal: inp.signal };\n        }\n\n        if (inp.data) {\n            configs = { ...configs, body: inp.data };\n        }\n        return configs;\n    }\n\n    async function sendRequest(url, configs) {\n        let json = await fetch(url, configs, timeout).then(function (response) {\n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n\n            const contentType = response.headers.get(\"content-type\");\n            if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n                return response.json();\n            }\n\n            return response.text();\n\n        }).catch(err => {\n            throw new Error(err);\n        });\n        return json;\n    }\n\n    function config(configs = { base_url: \"\", timeout: 10000, in_headers: {} }) {\n        baseUrl = configs.base_url;\n        timeout = configs.timeout;\n        headers = configs.in_headers;\n    }\n\n    async function request(inp) {\n        // Make config request\n        let url = baseUrl + inp.url.replaceAll(\"//\", \"/\");\n        url = url.trim();\n        url = encodeURI(url);\n        let requestConfig = makeRequestConfig(inp);\n\n        return await sendRequest(url, requestConfig);\n    }\n\n    return {\n        add_config: config,\n        exe: request\n    };\n})();","import { Base64 } from 'js-base64';\n\nexport class StringUtils {\n    static EMPTY = \"\";\n\n    /**\n     * Check whether a string is null or empty.\n     * @param str value\n     * @returns true : if string is null or empty\n     */\n    static isNullOrEmpty(str) {\n        if (!str || str === null || str === StringUtils.EMPTY) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Encoding str to Base64\n     * @param str value\n     * @returns Base64 str\n     */\n    static base64Encode(str) {\n        if (!str || str === null) {\n            return null;\n        } else {\n            return Base64.encode(str);\n        }\n    }\n\n    /**\n     * Decode Base64 to str\n     * @param Base64 str\n     * @returns Value decode\n     */\n    static base64decode(str) {\n        if (!str || str === null) {\n            return null;\n        } else {\n            return Base64.decode(str);\n        }\n    }\n\n\n\n    /**\n     * Removes \" \", \"　\", and \\t from the beginning of the 'str'. Returns 'defaultStr' if 'str' is null\n     * or trimmed string is \"\".\n     *\n     * @param str\n     * @param defaultStr\n     * @return trimmed string\n     */\n    static trimL(str, defaultStr) {\n\n        let ret = str;\n\n        if (!ret || ret === null) {\n            ret = \"\";\n        }\n        // remove ' ', '　', '\\t'\n        while (ret.startsWith(\" \") || ret.startsWith(\"　\") || ret.startsWith(\"\\t\") || ret.startsWith(\"\\n\")) {\n            ret = ret.substring(1);\n        }\n\n        if (ret === \"\") {\n            ret = defaultStr;\n        }\n        return ret;\n    }\n\n    /**\n     * Removes \" \", \"　\", and \\t from the end of the 'str'. Returns 'defaultStr' if 'str' is null or\n     * trimmed string is \"\".\n     *\n     * @param str\n     * @param defaultStr\n     * @return trimmed string\n     */\n    static trimR(str, defaultStr) {\n\n        let ret = str;\n\n        if (!ret || ret === null) {\n            ret = \"\";\n        }\n        // Delete \" \", \"　\", and \\t\n        while (ret.endsWith(\" \") || ret.endsWith(\"　\") || ret.endsWith(\"\\t\")) {\n            ret = ret.substring(0, ret.length() - 1);\n        }\n\n        if (ret === \"\") {\n            ret = defaultStr;\n        }\n        return ret;\n    }\n\n    /**\n     * Removes \" \", \"　\", and \\t from both ends of the 'str'. Returns 'defaultStr' if 'str' is null or\n     * trimmed string is \"\".\n     *\n     * @param str\n     * @param defaultStr\n     * @return trimmed string\n     */\n    static trim(str, defaultStr) {\n\n        let ret = str;\n        // Delete \" \", \"　\", and \\t\n        ret = StringUtils.trimL(ret, defaultStr);\n        //ret = StringUtils.trimR(ret, defaultStr);\n\n        return ret;\n    }\n\n    static nonAccentVietnamese(str) {\n        str = str.toLowerCase();\n        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\n        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\n        str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\n        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\n        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\n        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\n        str = str.replace(/đ/g, \"d\");\n        // Some system encode vietnamese combining accent as individual utf-8 characters\n        str = str.replace(/\\u0300|\\u0301|\\u0303|\\u0309|\\u0323/g, \"\"); // Huyền sắc hỏi ngã nặng\n        str = str.replace(/\\u02C6|\\u0306|\\u031B/g, \"\"); // Â, Ê, Ă, Ơ, Ư\n        str = str.replace(/\\s/g, \"-\");\n        return str;\n    }\n\n    static truncateString(str, num) {\n        if (str.length > num) {\n            return str.slice(0, num) + \"...\";\n        } else {\n            return str;\n        }\n    }\n}","class CacheManager {\n    constructor(key, expire = null) {\n        this.key = key;\n        this.expire = expire;\n        this.items = this.getAll();\n    }\n\n    add(key, value) {\n        if (key) {\n            this.items = { ...this.items, [key]: value }\n            // console.log('[CacheManager] add: ', key, this.items);\n        }\n        this.store();\n    }\n\n    del(key) {\n        if (key) {\n            delete this.items[key];\n        }\n        this.store();\n    }\n\n    has(key) {\n        return this.items.hasOwnProperty(key);\n    }\n\n    store() {\n        localStorage.setItem(this.key, JSON.stringify(this.items));\n        localStorage.setItem(this.key + ':ts', new Date().getTime());\n    }\n\n    get(key) {\n        let all = this.getAll();\n        return all[key];\n    }\n\n    getAll() {\n        let stored = localStorage.getItem(this.key);\n        return (this.isExpired() || !stored) ?\n            {} :\n            JSON.parse(stored);\n    }\n\n    isExpired() {\n        let whenCached = localStorage.getItem(this.key + ':ts')\n        let age = (new Date().getTime() - whenCached);\n\n        if (this.expire && age > this.expire) {\n            this.clear();\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    clear() {\n        localStorage.removeItem(this.key)\n        localStorage.removeItem(this.key + ':ts')\n    }\n}\n\n/**\n * Caches objects as singletons. Alternative, can ignore this.items and just load\n * always from localStorage.\n * @type {Object}\n */\n\nlet cache = {};\n/**\n * [getSingleton description]\n * @method getSingleton\n * @param  {string}     key           Key for localStorage\n * @param  {Number}     [expire=null] Expiration time in seconds\n * @param  {String}     [sep=',']     separator in case. Default: ,\n * @return {CacheManager}             A singleton of CacheCollection\n */\nfunction getSingleton(key, expire = null) {\n    if (!cache.hasOwnProperty(key)) {\n        cache[key] = new CacheManager(key, expire);\n    }\n    return cache[key];\n}\nexport { getSingleton, CacheManager };","import { getSingleton as LocalCache } from \"./CacheManager\";\n\nconst CACHE_KEY = \"pg_mm_settings\";\nconst settingsCache = LocalCache(CACHE_KEY);\n\nconst SettingsCache = (function () {\n\n    function getCacheTime() {\n        if (settingsCache.has(\"cacheTime\"))\n            return settingsCache.get(\"cacheTime\");\n        else\n            return 1200000;\n    }\n\n    function setCacheTimeMinute(cacheTime) {\n        settingsCache.add(\"cacheTime\", (cacheTime * 60000));\n    }\n\n    function getUrlRepository() {\n        if (settingsCache.has(\"urlRepository\"))\n            return settingsCache.get(\"urlRepository\");\n        else\n            return \"https://github.com/cuongphuong/memo_data\";\n    }\n\n    function setUrlRepository(urlRepository) {\n        settingsCache.add(\"urlRepository\", urlRepository);\n    }\n\n    function getRequestTimeout() {\n        if (settingsCache.has(\"requestTimeout\"))\n            return settingsCache.get(\"requestTimeout\");\n        else\n            return 5000;\n    }\n\n    function setRequestTimeout(requestTimeout) {\n        settingsCache.add(\"requestTimeout\", requestTimeout);\n    }\n\n    function getAccessKey() {\n        if (settingsCache.has(\"accessKey\"))\n            return settingsCache.get(\"accessKey\");\n        else\n            return null;\n    }\n\n    function setAccessKey(accessKey) {\n        settingsCache.add(\"accessKey\", accessKey);\n    }\n\n    function getUserName() {\n        if (settingsCache.has(\"userName\"))\n            return settingsCache.get(\"userName\");\n        else\n            return null;\n    }\n\n    function setUserName(userName) {\n        settingsCache.add(\"userName\", userName);\n    }\n\n    function getEmail() {\n        if (settingsCache.has(\"email\"))\n            return settingsCache.get(\"email\");\n        else\n            return null;\n    }\n\n    function setEmail(email) {\n        settingsCache.add(\"email\", email);\n    }\n\n    function getCacheMinutes() {\n        let millis = getCacheTime();\n        if (!millis) return 0;\n        return (millis / 60000).toFixed();\n    }\n\n    function setTheme(theme) {\n        settingsCache.add(\"theme\", theme);\n    }\n\n    function getTheme() {\n        if (settingsCache.has(\"theme\"))\n            return settingsCache.get(\"theme\");\n        else\n            return \"violet\";\n    }\n\n    function getAvatarUrl() {\n        if (settingsCache.has(\"avatar\"))\n            return settingsCache.get(\"avatar\");\n        else\n            return null;\n    }\n\n    function setAvatarUrl(url) {\n        settingsCache.add(\"avatar\", url);\n    }\n\n    function releaseCache() {\n        settingsCache.clear();\n    }\n\n    return {\n        getCacheTime: getCacheTime,\n        setCacheTimeMinute: setCacheTimeMinute,\n        getUrlRepository: getUrlRepository,\n        getRequestTimeout: getRequestTimeout,\n        setUrlRepository: setUrlRepository,\n        setRequestTimeout: setRequestTimeout,\n        getAccessKey: getAccessKey,\n        setAccessKey: setAccessKey,\n        getUserName: getUserName,\n        setUserName: setUserName,\n        getEmail: getEmail,\n        setEmail: setEmail,\n        getCacheMinutes: getCacheMinutes,\n        setTheme: setTheme,\n        getTheme: getTheme,\n        setAvatarUrl: setAvatarUrl,\n        getAvatarUrl: getAvatarUrl,\n        releaseCache: releaseCache\n    };\n})();\n\nexport default SettingsCache;","import { RequestAPI as request } from '../../Utils/RequestAPI';\nimport { StringUtils } from '../../Utils/StringUtils';\nimport SettingsCache from '../../Utils/SettingsCache';\n\nconst REPOSITORY_SOURCE = SettingsCache.getUrlRepository().replaceAll(\"https://github.com/\", \"\");\nconst TIME_OUT = SettingsCache.getRequestTimeout();\nconst TOKEN_KEY = SettingsCache.getAccessKey();\nconst USE_NAME = SettingsCache.getUserName();\nconst E_MAIL = SettingsCache.getEmail();\n\nlet config = {\n    base_url: \"https://api.github.com\",\n    timeout: TIME_OUT,\n    in_headers: {\n        Accept: \"application/vnd.github.v3+json\",\n    }\n};\n\nif (TOKEN_KEY && !StringUtils.isNullOrEmpty(TOKEN_KEY)) {\n    config = {\n        ...config,\n        in_headers: {\n            ...config.in_headers,\n            Authorization: \"Token \" + TOKEN_KEY\n        }\n    }\n}\n\n// Request config\nrequest.add_config(config);\n\nconst author = {\n    name: USE_NAME,\n    email: E_MAIL\n}\n\n// Export API\n/**\n * Search file match keyword result from Github repository\n * @param {String} key Keyword for search code\n * @returns Object Search file and infomation file\n */\nexport async function searchFromGitHub(key, signal) {\n    let result = await request.exe({\n        url: `/search/code?q=${key}+repo:${REPOSITORY_SOURCE}`,\n        method: \"GET\",\n        signal: signal\n    }).catch(err => {\n        console.log(err);\n        return [];\n    });\n\n    return result;\n};\n\n/**\n * Get all infomation from path resource\n * @param {String} path Path to resource\n * @returns Object\n */\nexport async function readContentByPath(path, signal) {\n    let result = await request.exe({\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${path}`,\n        method: \"GET\",\n        signal: signal\n    }).catch(err => {\n        throw err;\n    });\n\n    return result;\n};\n\n/**\n *  Get user information from token Github\n * @returns tree \n */\nexport async function getUserInfomation() {\n    var url = '/user';\n    let result = await request.exe({\n        url: url,\n        method: \"GET\",\n    }).catch(err => {\n        return null;\n    });\n\n    return result;\n};\n\n/**\n *  Get user information from Github\n * @param username\n * @returns tree \n */\nexport async function getUser(username) {\n    var url = username ? '/users/' + username : '/user';\n    let result = await request.exe({\n        url: url,\n        method: \"GET\",\n    }).catch(err => {\n        return null;\n    });\n\n    return result;\n};\n\n/**\n * Save a file into Git repository\n * @param {Object} data Content of file, encode Base64 \n * @param {String} filePath Path to file location\n * @returns \n */\nexport function save(data = {\n    message: 'Add file',\n    content: 'KEVtcHR5KQ==', // (Empty)\n}, filePath) {\n    return request.exe({\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${filePath}`,\n        method: \"PUT\",\n        data: JSON.stringify(data)\n    });\n}\n\n/**\n * Update content of file in Github\n * @param {Object} data Content of file, encode Base64 \n * @param {String} filePath Path to file location\n * @returns \n */\nexport function updateContent(data = {\n    message: 'Update content', // (Empty)\n    content: 'KEVtcHR5KQ==',\n    sha: ''\n}, filePath) {\n    return request.exe({\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${filePath}`,\n        method: \"PUT\",\n        data: JSON.stringify(data)\n    });\n}\n\n/**\n * Get a particular reference\n * @param {*} ref heads/branch\n * @returns sha\n */\nexport async function getRef(ref = \"heads/main\") {\n    // repos/cuongphuong/memo_data/git/refs/heads/main\n    let result = await request.exe({\n        url: `/repos/${REPOSITORY_SOURCE}/git/refs/${ref}`,\n        method: \"GET\"\n    });\n\n    return result.object.sha;\n};\n\n/**\n * Retrieve the tree a commit points to\n * @param {String} sha  ex: 76ba6ba67867c6069cbb9c377a0a2c909145c778?recursive=true\n * @returns tree \n */\nexport async function getTree(sha = \"\") {\n    // repos/cuongphuong/memo_data/git/trees/76ba6ba67867c6069cbb9c377a0a2c909145c778\n    let result = await request.exe({\n        url: `/repos/${REPOSITORY_SOURCE}/git/trees/${sha}`,\n        method: \"GET\"\n    });\n\n    return result.tree;\n};\n\n/**\n *  Post a new tree object having a file path pointer replaced with a new blob SHA getting a tree SHA back\n * @param {Array} tree  Tree\n * @returns tree \n */\nexport async function postTree(tree, base_tree) {\n    if (!tree) return;\n\n    let payload = { tree: tree };\n\n    if (base_tree) payload = {...payload, base_tree: base_tree }\n\n    let result = await request.exe({\n        url: `/repos/${REPOSITORY_SOURCE}/git/trees`,\n        method: \"POST\",\n        data: JSON.stringify(payload)\n    });\n    return result.sha;\n};\n\n/**\n * Create a new commit object with the current commit SHA as the parent and the new tree SHA, getting a commit SHA back\n * \n */\nexport async function commit(parent, tree, message) {\n    let userData = getUser(author.name);\n    if (!userData) return;\n    let data = {\n        message: message,\n        author: author,\n        parents: [\n            parent\n        ],\n        tree: tree\n    }\n\n    let result = await request.exe({\n        url: `/repos/${REPOSITORY_SOURCE}/git/commits`,\n        method: 'POST',\n        data: JSON.stringify(data)\n    }).catch(err => {\n        return null;\n    });\n    return result.sha;\n}\n\nexport async function updateHead(head, commit) {\n    let result = await request.exe({\n        url: `/repos/${REPOSITORY_SOURCE}/git/refs/heads/` + head,\n        method: 'PATCH',\n        data: JSON.stringify({\n            sha: commit\n        })\n    }).catch(err => {\n        return null;\n    });\n    return result;\n}\n\nexport async function deleteAppAuthorization(client_id) {\n    let result = await request.exe({\n        url: `/applications/${client_id}/grant`,\n        method: 'DELETE'\n    }).catch(err => {\n        throw err;\n    });\n    return result;\n}\n\nexport async function markdown(str, signal) {\n    let result = await request.exe({\n        url: \"/markdown\",\n        method: 'POST',\n        signal: signal,\n        data: JSON.stringify({\n            \"text\": str\n        })\n    }).catch(err => {\n        throw err;\n    });\n\n    return result;\n}","import { searchFromGitHub, readContentByPath } from \"../API/Github/Request\";\nimport { StringUtils } from \"./StringUtils\";\nimport { Base64 } from \"js-base64\";\nimport { NotificationManager } from 'react-notifications';\nexport class ContentRender {\n    // Delimiter between config and content\n    static DEFAULT_DELIMITER = \"---\";\n\n    /**\n     * Get content list from keyword search\n     * @param {String} str Keyword for search\n     * @returns List of content search\n     */\n    static async search(str, signal) {\n        if (StringUtils.isNullOrEmpty(str)) {\n            console.log(\"Search keyword is empty\");\n            return;\n        }\n\n        let apiResult\n        try {\n            apiResult = await searchFromGitHub(str, signal);\n            let totalCount = apiResult.total_count;\n\n            if (!totalCount) {\n                console.log(`No file mapping result key [${str}]`);\n                NotificationManager.info(`No file mapping result key [${str}]`);\n                return;\n            }\n        } catch (error) {\n            NotificationManager.console.warning(\"Not response data from API.\");\n            console.error(\"Not response data from API.\");\n            return;\n        }\n\n        let items = apiResult.items;\n        let pathFileList = new Set();\n        let postObjectList = [];\n\n        await Promise.all(items.map(async (item) => {\n            if (pathFileList.has(item.path)) {\n                return;\n            }\n\n            pathFileList.add(item.path);\n            let contentObject = await ContentRender.makeContentObject(item.path);\n            if (contentObject !== null) {\n                postObjectList = [...postObjectList, contentObject];\n            }\n        }));\n\n        return postObjectList;\n    }\n\n    /**\n     * Call to github content for get content file from file path\n     * @param {String} filePath Path to file on Github\n     * @returns Content object from JSON content\n     */\n    static async makeContentObject(filePath, signal) {\n        // Is invalid path\n        if (!filePath) {\n            return;\n        }\n\n        filePath = filePath.trim();\n        let apiContentResult = await readContentByPath(filePath, signal);\n        let contentObject = {};\n        if (apiContentResult && !StringUtils.isNullOrEmpty(apiContentResult.content)) {\n            let base64Content = apiContentResult.content;\n            let decodeContent = Base64.decode(base64Content);\n\n            // Get index of str delimiter config and content\n            let index = decodeContent.indexOf(ContentRender.DEFAULT_DELIMITER, 1);\n            if (index === -1) {\n                console.log(`Content file ${filePath} is invalid.`)\n                return null;\n            }\n            let cfgAreaStr = decodeContent.substring(0, index + ContentRender.DEFAULT_DELIMITER.length);\n            let contentAreaStr = decodeContent.substring(index + ContentRender.DEFAULT_DELIMITER.length);\n\n            let configs = ContentRender.makeConfigFromResult(cfgAreaStr);\n            let content = StringUtils.trim(contentAreaStr);\n            contentObject = { ...configs, content };\n            contentObject = { ...contentObject, filePath: filePath };\n\n            return contentObject;\n        } else {\n            console.log(\"Can't load data for \" + filePath);\n        }\n        return null;\n    }\n\n\n    /**\n     * Make config object from content file result from API\n     * @param {Strng} str Config area from API result to objectt\n     * @returns Object configs\n     */\n    static makeConfigFromResult(str) {\n        const regex = /^[a-zA-Z]+:(.*)$/gm;\n        let m;\n\n        let configs = {};\n        while ((m = regex.exec(str)) !== null) {\n            if (m.index === regex.lastIndex) {\n                regex.lastIndex++;\n            }\n\n            let mathItems = m[0].split(\":\");\n            let configKey = StringUtils.trim(mathItems[0]);\n            let configValue = StringUtils.trim(mathItems[1]);\n\n            configs = { ...configs, [configKey]: configValue };\n        }\n        return configs;\n    }\n\n    /**\n     * Get on category level 1 on Github repository\n     * @param {String} path path to resource\n     * @returns Array All categorys on level 1\n     */\n    static async getAllCategoryList(path, signal) {\n        let result = await readContentByPath(path, signal);\n        if (!result || !Array.isArray(result) || result.length === 0) {\n            return [];\n        }\n\n        let categoryList = [];\n        result.forEach(item => {\n            if (item.type === \"dir\" && !StringUtils.isNullOrEmpty(item.name)) {\n                categoryList = [...categoryList, item.name];\n            }\n        });\n\n        return categoryList;\n    }\n\n    /**\n     * Get file, dir from path resource in Git repository\n     * @param {String} path Path to resource for get data\n     * @returns Object File and Dir from resource\n     */\n    static async getAllItemFromPath(path) {\n        let result = await readContentByPath(path);\n\n        if (!result || !Array.isArray(result) || result.length === 0) {\n            return [];\n        }\n\n        let resultObject = {\n            itemList: []\n        };\n\n        result.forEach(item => {\n            if (item.type === \"dir\" && !StringUtils.isNullOrEmpty(item.name)) {\n                resultObject = { ...resultObject, [item.name]: { hasContnent: false } }\n            }\n\n            if (item.type === \"file\" && !StringUtils.isNullOrEmpty(item.name)) {\n                resultObject = {\n                    ...resultObject, itemList: [...resultObject.itemList, {\n                        name: item.name,\n                        path: item.path\n                    }]\n                }\n            }\n        });\n        return resultObject;\n    }\n}","import React from 'react'\n// import { useSelector } from 'react-redux';\nconst removeMd = require('remove-markdown');\n\nfunction List({ children }) {\n    return (\n        <div className=\"pg_mm_list\">\n            {children}\n        </div>\n    )\n}\n\nfunction ListItem({ source = {\n    title: \"n/a\",\n    content: \"n/a\",\n    id: \"n/a\",\n    category: \"n/a\"\n}, handleChooseItem, activeId }) {\n    // const style = useSelector(state => state.style);\n\n    function handleClick() {\n        handleChooseItem(source);\n    }\n\n    function isActive() {\n        if (activeId === source.id) {\n            return true;\n        }\n        return false;\n    }\n\n    // function truncPathListItem(strPath) {\n    //     // let tmpPathList = strPath.split(\"/\");\n    //     // tmpPathList = tmpPathList.filter(p => !StringUtils.isNullOrEmpty(p));\n    //     // return tmpPathList.pop();\n    //     return strPath;\n    // }\n\n    return (\n        <div\n            // style={isActive() ? style.borderLineHover : {}}\n            style={{ padding: 10, margin: 5 }}\n            className={isActive() ? \"pg_mm_list_item pg_mm_list_item_active\" : \"pg_mm_list_item\"}\n            onClick={handleClick}\n        >\n            <h3 style={{ color: \"hsl(210,8%,25%)\", fontSize: 17 }} className=\"pg_mm_trunc\">{source.title}</h3>\n            <p className=\"pg_mm_trunc\" style={{ fontSize: 16, lineHeight: 1.5 }}>{removeMd(source.content).replace(/(?:\\r\\n|\\r|\\n)/g, ' ')}</p>\n            {/* <div className=\"pg_mm_list_item_info\">\n                <span\n                    style={style.category}\n                    className=\"pg_mm_trunc\">{truncPathListItem(source.category)}\n                </span>\n            </div> */}\n        </div>\n    )\n}\n\nList.Item = ListItem;\nexport default List;","export const setActiveId = (activeId) => {\n    return {\n        type: \"SearchReducer/setActiveId\",\n        payload: activeId\n    }\n}\n\nexport const setMdContent = (mdContent) => {\n    return {\n        type: \"SearchReducer/setMdContent\",\n        payload: mdContent\n    }\n}\n\nexport const setSearchResultList = (searchResultList) => {\n    return {\n        type: \"SearchReducer/setSearchResultList\",\n        payload: searchResultList\n    }\n}","import { getSingleton as LocalCache } from \"./CacheManager\";\n\nconst SEARCH_CACHE_KEY = \"pg_mm_search\";\nconst searchCache = LocalCache(SEARCH_CACHE_KEY, null);\n\nconst SearchHistoryCache = (function () {\n    function getTopKeyWord() {\n        let allItem = searchCache.getAll();\n        let keysSorted = Object.keys(allItem).sort(function (a, b) {\n            return allItem[b] - allItem[a]\n        });\n        return keysSorted;\n    }\n\n    function insertKey(key) {\n        let allItem = searchCache.getAll();\n        if (Object.keys(allItem).length >= 10) {\n            removeMinItem(allItem);\n        }\n\n        if (searchCache.has(key)) {\n            let value = searchCache.get(key);\n            searchCache.add(key, ++value);\n        } else {\n            searchCache.add(key, 1);\n        }\n    }\n\n    function removeMinItem(allItem) {\n        let keysSorted = Object.keys(allItem).sort(function (a, b) {\n            return allItem[a] - allItem[b]\n        });\n        console.log(keysSorted[0]);\n        searchCache.del(keysSorted[0]);\n    }\n\n    return {\n        getTopKeyWord: getTopKeyWord,\n        insertKey: insertKey\n    };\n})();\n\nexport default SearchHistoryCache;","import React, { useState, useRef, useEffect } from 'react';\nimport Layout from './Layout';\nimport ViewPopup from './ViewPopup';\nimport { ContentRender } from '../Utils/ContentRender';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport List from '../ViewComponents/List';\nimport { setActiveId, setMdContent, setSearchResultList } from '../Actions/SearchReducer';\nimport SearchHistoryCache from '../Utils/SearchHistoryCache';\nimport { StringUtils } from '../Utils/StringUtils';\nimport { useParams } from 'react-router-dom';\nimport { useCallback } from 'react';\nimport \"./QuickSearchTab.css\";\n\n\nfunction QuickSearchTab(props) {\n    // use for control sync process\n    const refController = React.useRef(null);\n    // const style = useSelector(state => state.style);\n\n    // Logic state\n    const dispatch = useDispatch();\n    const searchResultList = useSelector(state => state.searchData.searchResultList);\n    // const mdContent = useSelector(state => state.searchData.mdContent);\n    const activeId = useSelector(state => state.searchData.activeId);\n\n    // UI state\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [searchCacheList, setSearchCacheList] = useState([]);\n    const [isDisplayPopup, setIsDisplayPopup] = React.useState(\"none\");\n    const [dataView, setDataView] = React.useState(null);\n    const inputObj = useRef(null);\n    const typingTimer = useRef(null); // timer identifier \n    let doneTypingInterval = 600;  // time in ms (600ms)\n\n    let { id } = useParams();\n\n    const handleChooseItem = useCallback((source) => {\n        dispatch(setActiveId(source.id));\n        dispatch(setMdContent(source));\n        handleItemClick(source.filePath)\n    }, [dispatch])\n\n    useEffect(() => {\n        async function searchByPramater() {\n\n            /** Check url search */\n            if (StringUtils.isNullOrEmpty(id)) {\n                inputObj.current.focus();\n                return;\n            }\n\n            setIsProcessing(true);\n            let path = id;\n            path = path.replaceAll(\"+\", \"/\");\n            if (!path.endsWith(\".md\")) {\n                path = path + \".md\";\n            }\n\n            let contentObject = null;\n            try {\n                refController.current = new AbortController();\n                let signal = refController.current.signal;\n                contentObject = await ContentRender.makeContentObject(path, signal);\n            } catch (err) {\n                console.log(err);\n                setIsProcessing(false);\n            }\n\n            if (!contentObject) {\n                return;\n            }\n\n            setIsProcessing(false);\n            handleChooseItem(contentObject)\n\n            let tmpList = [];\n            dispatch(setSearchResultList([...tmpList, contentObject]));\n            dispatch(setActiveId(contentObject.id));\n            dispatch(setMdContent(contentObject));\n        }\n\n        refController.current = new AbortController();\n        // Load cache\n        let cacheKeywordList = SearchHistoryCache.getTopKeyWord();\n        setSearchCacheList(cacheKeywordList);\n\n        searchByPramater();\n\n        return () => {\n            setIsDisplayPopup(\"none\");\n            window.history.replaceState(\"\", \"\", \"/memo\");\n            refController.current.abort();\n        }\n\n    }, [dispatch, id, handleChooseItem])\n\n    function handleSearchChange(evt) {\n        setInputValue(evt.target.value)\n        clearTimeout(typingTimer.current);\n        //\n        refController.current = new AbortController();\n        let signal = refController.current.signal;\n        typingTimer.current = setTimeout(function () {\n            if (signal.aborted) {\n                return;\n            }\n            dispatch(setSearchResultList([]));\n            doneTyping(evt.target.value)\n        }, doneTypingInterval);\n    }\n\n    async function doneTyping(keyword) {\n        refController.current = new AbortController();\n        let signal = refController.current.signal;\n        // fetch API\n        setIsProcessing(true);\n        let apiResultContentList = await ContentRender.search(keyword, signal);\n        if (apiResultContentList && apiResultContentList.length > 0) {\n            SearchHistoryCache.insertKey(keyword);\n            dispatch(setSearchResultList(apiResultContentList));\n\n            // if (apiResultContentList.length > 0) {\n            //     handleChooseItem(apiResultContentList[0]);\n            // }\n        }\n        setIsProcessing(false);\n    }\n\n    // function onEdit(filePath) {\n    //     props.onEdit(filePath);\n    // }\n\n    // function onDelete(isSuccess) {\n    //     if (!isSuccess) {\n    //         alert(\"403 :((\");\n    //         return;\n    //     }\n\n    //     let newSearchList = searchResultList.filter(p => p.id !== mdContent.id);\n    //     dispatch(setMdContent(null));\n    //     dispatch(setSearchResultList(newSearchList));\n    // }\n\n    function renderSearchList() {\n        return (\n            <>\n                {\n                    isProcessing ?\n                        <div className=\"pg_mm_search_loadding\" style={{ textAlign: \"center\" }}>\n                            <img height=\"100px\"\n                                src=\"/memo/icon/blue_loading.gif\"\n                                alt=\"loadding...\"\n                            />\n                        </div>\n                        :\n                        searchResultList.length > 0 ?\n                            <List>\n                                {searchResultList.map((item, index) => <List.Item activeId={activeId}\n                                    handleChooseItem={handleChooseItem}\n                                    key={index}\n                                    source={item}\n                                />)}\n                            </List>\n                            :\n                            // <img className='unselectable' width=\"100%\" style={{ opacity: 0.9 }}\n                            //     src=\"/memo/icon/empty.png\"\n                            //     alt=\"empty\"\n                            // />\n                          ''\n                }\n            </>\n        )\n    }\n\n    function handleItemClick(path) {\n        setIsDisplayPopup(\"block\");\n        ContentRender.makeContentObject(path).then(data => {\n            setDataView(data);\n        });\n    }\n\n    function handleClosePopups() {\n        setTimeout(function () {\n            setIsDisplayPopup(\"none\");\n        }, 100)\n        setDataView(null);\n    }\n\n    return (\n        <div className=\"pg_mm_amination\" style={{ backgroundColor: \"#fff\" }}>\n            <Layout.MiddleContent >\n\n                <div style={{ maxWidth: 900, margin: \"0 auto\", padding: \"10px 5px\", backgroundColor: \"rgba(246, 246, 246, 1)\", minHeight: \"calc(100vh - 80px)\" }}>\n                    {/* <input\n                        list=\"cacheList\"\n                        style={{ ...style.borderLine, marginBottom: 5 }}\n                        ref={inputObj}\n                        onChange={(evt) => { handleSearchChange(evt) }}\n                        type=\"text\"\n                        className=\"pg_mm_search_input\"\n                        placeholder=\"Type for search...\"\n                    /> */}\n\n                    <div className='input-wrapper'>\n                        <input\n                            ref={inputObj}\n                            onChange={(evt) => { handleSearchChange(evt) }}\n                            placeholder=\"Search something...\"\n                            value={inputValue}\n                            spellCheck={false}\n                        />\n                        <span className='input-highlight'>\n                            {inputValue.replace(/ /g, \"\\u00a0\")}\n                        </span>\n                    </div>\n\n\n\n                    {/* <img onClick={() => inputObj.current.value = \"\"}\n                    style={{ marginTop: 15, marginLeft: 10 }}\n                    src='/memo/icon/clear.png'\n                    width={25}\n                    alt='copy'\n                    className='pg_mm_fixed_clearinput'/> */}\n                    <datalist id=\"cacheList\">\n                        {searchCacheList.map((item, index) => <option key={index} value={item} />)}\n                    </datalist>\n                    <div style={{ marginTop: '5px' }}></div>\n\n\n                    {/* // Display search result */}\n                    {renderSearchList()}\n                </div>\n\n                {/* Popup view */}\n                <div className=\"pg_mm_view_popup_block\">\n                    <ViewPopup\n                        onDelete={(isSuccess) => isSuccess ? setIsDisplayPopup(\"none\") : props.onFailed(\"Settings\")}\n                        onEdit={(filePath) => props.onEdit(filePath)}\n                        onClose={handleClosePopups}\n                        source={dataView}\n                        display={isDisplayPopup}\n                    />\n                </div>\n\n            </Layout.MiddleContent >\n        </div>\n    )\n}\n\nexport default React.memo(QuickSearchTab);","import { getSingleton as LocalCache } from \"./CacheManager\";\nimport SettingsCache from \"./SettingsCache\";\nimport { StringUtils } from \"./StringUtils\";\n\nconst CATEGORY_CACHE_KEY = \"pg_mm_category_cache\";\nlet categoryCache = LocalCache(CATEGORY_CACHE_KEY, SettingsCache.getCacheTime());\nconsole.log(\"Category Cache Time: \", SettingsCache.getCacheTime());\n\nconst CategoryListCache = (function () {\n\n    /**\n     * Check category is cached\n     * @returns true if has item in cache\n     */\n    function isCached() {\n        let trees = categoryCache.get(\"tree\");\n        return trees && trees.length > 0;\n    }\n\n    /**\n     * Store trees from Github API into cache\n     * @param {Arrays} trees Using fetch tree Github API\n     */\n    function setOrUpdateCache(trees) {\n        if (trees) {\n            trees = trees.filter(p => !p.path.startsWith(\"Images/\") && p.path !== \"Images\");\n        }\n\n        categoryCache.add(\"tree\", trees);\n    }\n\n    /**\n     * Make main category list (root) from trees list\n     * @returns {Arrays} mainCategoryList \n     */\n    function getMainCategory() {\n        let trees = categoryCache.get(\"tree\");\n        if (!trees) return [];\n\n        let mainCategoryList = trees.filter(p => isMainCategory(p));\n        return mainCategoryList.map(p => p.path);\n    }\n\n    /**\n   * Make category list from input path in trees list\n   * @returns {Arrays} categoryList \n   */\n    function getElementByPath(path) {\n        let trees = categoryCache.get(\"tree\");\n        if (!trees) return [];\n\n        let categoryList = trees.filter(p => isExistedInPath(p, path));\n        return makeOutputList(categoryList);\n    }\n\n    // Private method\n    function isMainCategory(element) {\n        return !element.path.includes(\"/\") && element.type === \"tree\";\n    }\n\n    function isExistedInPath(element, path) {\n        let elementPath = element.path;\n\n        if (!elementPath.startsWith(path)) {\n            return false;\n        }\n\n        elementPath = elementPath.replace(path, \"\");\n        if (elementPath.startsWith(\"/\")) {\n            elementPath = elementPath.substring(1, elementPath.length);\n        }\n\n        if (StringUtils.isNullOrEmpty(elementPath) || elementPath.includes(\"/\")) {\n            return false;\n        }\n        return true;\n    }\n\n    function makeOutputList(list) {\n        let categoryList = [];\n\n        list.forEach(element => {\n            let pathList = element.path.split(\"/\");\n\n            let item = {\n                name: pathList[pathList.length - 1], // last item\n                path: element.path,\n                type: element.type === \"tree\" ? \"dir\" : \"file\"\n            }\n            categoryList = [...categoryList, item];\n        });\n\n        categoryList = categoryList.sort((a, b) => a.type.length - b.type.length);\n        return categoryList;\n    }\n\n    function updateDataIntoPath(path, newDataList) {\n        let correctPath = path + \"/\";\n        let trees = categoryCache.get(\"tree\");\n        if (!trees) trees = [];\n\n        let newTree = trees.filter(p => !p.path.startsWith(correctPath));\n        newDataList.forEach(element => {\n            newTree.push({\n                mode: \"\",\n                path: element.path,\n                sha: \"\",\n                type: element.type === \"dir\" ? \"tree\" : \"blob\",\n                url: \"\"\n            });\n        });\n\n        setOrUpdateCache(newTree);\n    }\n\n    return {\n        isCached: isCached,\n        setOrUpdateCache: setOrUpdateCache,\n        getMainCategory: getMainCategory,\n        getElementByPath: getElementByPath,\n        updateDataIntoPath: updateDataIntoPath\n    };\n})();\n\nexport default CategoryListCache;","import React from 'react';\nimport \"./CategoryList.css\";\n// import * as request from \"../API/Github/Request\";\nimport CategoryListCache from '../Utils/CategoryListCache';\nimport { ContentRender } from '../Utils/ContentRender';\n\n/**\n * CategoryListn */\nfunction CategoryList({ children }) {\n\n    return (\n        <div className=\"pg_mm_category_list_main\">\n            <div className=\"section\" id=\"J1\" >\n                {children}\n            </div>\n        </div>\n    )\n}\n\n/**\n * Blockn */\nfunction Block(props) {\n    const [renderList, setRenderList] = React.useState([]);\n\n    React.useEffect(() => {\n        let categoryList = CategoryListCache.getElementByPath(props.name);\n        setRenderList(categoryList);\n\n        return () => {\n        }\n    }, [props.name])\n\n    function renderItem() {\n        let dirList = renderList.filter(p => p.type === \"dir\");\n        let fileList = renderList.filter(p => p.type === \"file\");\n\n        return (\n            <>\n                {dirList.map((item, index) => <Row\n                    handleItemClick={props.handleItemClick}\n                    key={index}\n                    source={item}\n                />)}\n\n                {\n                    fileList.length > 0 ?\n                        <dl className=\"link-list\">\n                            {fileList.map((item, index) => <Item\n                                key={index}\n                                name={item.name}\n                                type={item.type}\n                                path={item.path}\n                                handleItemClick={props.handleItemClick}\n                            />)}\n                        </dl>\n                        :\n                        \"\"\n                }\n            </>\n        );\n    }\n\n    return (\n        <>\n            <div className=\"section-inner\">\n                <h3 className=\"hd\">{props.name}</h3>\n                {renderItem()}\n            </div>\n            <div className=\"clear_float\"></div>\n        </>\n    )\n}\n\n/**\n * Rown */\nfunction Row({ source = { name: \"\", path: \"\", type: \"\" }, handleItemClick }) {\n    // use for control sync process\n    const refController = React.useRef(null);\n    //\n    const [renderList, setRenderList] = React.useState([]);\n    const [sourcePath, setSourcePath] = React.useState(source.path);\n    const [isLoadding, setIsLoadding] = React.useState(true);\n    const pathList = React.useRef([source.path]);\n\n    React.useEffect(() => {\n        refController.current = new AbortController();\n        let categoryList = CategoryListCache.getElementByPath(source.path);\n        setRenderList(categoryList);\n        setIsLoadding(false);\n\n        return () => {\n            refController.current.abort();\n        }\n    }, [source.path]);\n\n    function fetchFromAPI(path) {\n        // fetch API\n        refController.current = new AbortController();\n        let signal = refController.current.signal;\n\n        setIsLoadding(true);\n        ContentRender.getAllItemFromPath(path).then(data => {\n            if (signal.aborted) return;\n\n            console.log(\"updated\");\n            let dataList = makeRenderList(data, path);\n            setSourcePath(path);\n            setRenderList(dataList);\n            setIsLoadding(false);\n\n            CategoryListCache.updateDataIntoPath(path, dataList)\n        }).catch(err => {\n            console.log(\"Fail to fetch data.\", err);\n            // check unmount component\n            if (signal.aborted) return;\n            setRenderList([]);\n            setIsLoadding(false);\n        });\n    }\n\n    function gotoPath(path) {\n        let index = pathList.current.indexOf(path);\n        let tmpList = pathList.current.filter(p => pathList.current.indexOf(p) <= index);\n        pathList.current = tmpList;\n        setIsLoadding(true);\n        // load from cache\n        let categoryList = CategoryListCache.getElementByPath(path);\n\n        // request is reload or cache is empty\n        if (path === sourcePath || categoryList.length === 0) {\n            fetchFromAPI(path);\n            return;\n        }\n        setRenderList(categoryList);\n        setSourcePath(path);\n        setIsLoadding(false);\n    }\n\n    function onClickSubFolder(name) {\n        pathList.current = [...pathList.current, sourcePath + \"/\" + name];\n        gotoPath(sourcePath + \"/\" + name)\n    }\n\n    function renderPathList() {\n        let fixPathList = pathList.current.map(path => truncPathListItem(path));\n        return (\n            <>\n                {fixPathList.map((item, index) => <span className=\"pg_mm_path_item\"\n                    key={index}\n                    onClick={() => gotoPath(pathList.current[index])}>\n                    {item}\n                </span>)}\n            </>\n        )\n    }\n\n    function renderItem() {\n        if (isLoadding) {\n            return (<img\n                height=\"20px\"\n                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\n                alt=\"loadding...\"\n            />);\n        }\n\n        return renderList.map((item, index) => <Item\n            key={index}\n            name={item.name}\n            type={item.type}\n            path={item.path}\n            handleItemClick={handleItemClick}\n            onClickSubFolder={(name) => onClickSubFolder(name)}\n        />);\n    }\n\n    return (\n        <div className=\"link-list\">\n            <div\n                className=\"link-hd\"\n                onClick={() => gotoPath(pathList.current[pathList.current.length - 1])}>{renderPathList()}\n            </div>\n            <div className=\"link-bd\">\n                {renderItem()}\n            </div>\n        </div>\n    )\n}\n\n\n/**\n * Itemn */\nfunction Item(props) {\n    if (props.type === \"file\") {\n        let title = props.name.replace(\".md\", \"\");\n        return (\n            <p\n                onClick={() => props.handleItemClick(props.path)}\n                title={title} >\n                {title}\n            </p>);\n    }\n\n    if (props.type === \"dir\") {\n        return (<span className='pg_mm_folder_display'\n            onClick={() => props.onClickSubFolder(props.name)}\n            title=\"\" >\n            {props.name}\n        </span>);\n    }\n}\n\n\nfunction makeRenderList(categoryObj, sourcePath) {\n    let renderList = [];\n    for (const property in categoryObj) {\n        if (typeof categoryObj[property] === \"object\" && property !== \"itemList\") {\n            renderList = [...renderList, {\n                name: property,\n                path: `${sourcePath}/${property}`,\n                type: \"dir\"\n            }]\n        }\n    }\n\n    if (categoryObj.itemList) {\n        categoryObj.itemList.forEach(item => {\n            item = { ...item, type: \"file\" }\n            renderList = [...renderList, item];\n        });\n    }\n    return renderList;\n}\n\nfunction truncPathListItem(strPath) {\n    let tmpPathList = strPath.split(\"/\");\n    return tmpPathList.pop();\n}\n\nCategoryList.Block = Block;\nexport default CategoryList;","export const setCategoryList = (categoryList) => {\n    return {\n        type: \"SET_CATEGORY_LIST\",\n        payload: categoryList\n    }\n}\n\nexport const setBlockCategoryObject = (categoryObject) => {\n    return {\n        type: \"SET_BLOCK_CATEGORY_OBJECT\",\n        payload: categoryObject\n    }\n}","import React from 'react';\nimport Layout from './Layout';\nimport CategoryList from '../ViewComponents/CategoryList';\nimport ViewPopup from './ViewPopup';\nimport { ContentRender } from '../Utils/ContentRender';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { setCategoryList } from '../Actions/ListTabReducer';\nimport CategoryListCache from '../Utils/CategoryListCache';\nimport * as request from '../API/Github/Request';\nimport SettingsCache from '../Utils/SettingsCache';\n\nexport default function ListTab(props) {\n    const dispatch = useDispatch();\n    //\n    const categoryList = useSelector(state => state.listTabData.categoryList);\n    const [isDisplayPopup, setIsDisplayPopup] = React.useState(\"none\");\n    const [dataView, setDataView] = React.useState(null);\n    const [isLoadding, setIsLoadding] = React.useState(false);\n\n    async function fetchTreesList(callback = function () { }) {\n        try {\n            let latestCommit = await request.getRef(\"heads/main\");\n            let trees = await request.getTree(latestCommit + '?recursive=true');\n            callback(trees);\n        } catch (err) {\n            // Redirect to Setting screen.\n            props.onFailed(\"Settings\");\n        };\n    }\n\n    React.useEffect(() => {\n        async function getTreeList(callback = function () { }) {\n            try {\n                let latestCommit = await request.getRef(\"heads/main\");\n                let trees = await request.getTree(latestCommit + '?recursive=true');\n                callback(trees);\n            } catch (err) {\n                // Redirect to Setting screen.\n                props.onFailed(\"Settings\");\n            };\n        }\n\n        // Checking cache\n        if (!CategoryListCache.isCached()) {\n            setIsLoadding(true);\n            getTreeList(function (trees) {\n                // Re-update cache\n                CategoryListCache.setOrUpdateCache(trees);\n                dispatch(setCategoryList(CategoryListCache.getMainCategory()));\n                setIsLoadding(false);\n            });\n        }\n\n        let mainCategoryList = CategoryListCache.getMainCategory();\n        dispatch(setCategoryList(mainCategoryList));\n        return () => {\n            setDataView(null);\n        }\n    }, [dispatch, props]);\n\n    function handleItemClick(path) {\n        setIsDisplayPopup(\"block\");\n        ContentRender.makeContentObject(path).then(data => {\n            setDataView(data);\n        });\n    }\n\n    function handleClosePopups() {\n        setTimeout(function () {\n            setIsDisplayPopup(\"none\");\n        }, 100)\n        setDataView(null);\n    }\n\n    function handleReloadDataCache() {\n        CategoryListCache.setOrUpdateCache(null);\n        setIsLoadding(true);\n        dispatch(setCategoryList([]));\n        fetchTreesList(function (trees) {\n            // Re-update cache\n            setTimeout(function () {\n                CategoryListCache.setOrUpdateCache(trees);\n                dispatch(setCategoryList(CategoryListCache.getMainCategory()));\n                setIsLoadding(false);\n            }, 500);\n        });\n    }\n\n    function loadding() {\n        if (isLoadding) {\n            return (\n                <img className='pg_mm_list_loadding unselectable' width=\"50px\"\n                    src=\"/memo/icon/blue_loading.gif\"\n                    alt=\"empty\"\n                />\n            )\n        }\n    }\n\n    return (\n        <div className=\"pg_mm_amination\">\n            {loadding()}\n            <Layout.MiddleContent >\n\n                {/* Category header */}\n                <span\n                    onClick={handleReloadDataCache}\n                    className='pg_mm_reload_button'>\n                    Reload (Caching {SettingsCache.getCacheMinutes()} minutes)\n                </span>\n\n                {/* Category content view */}\n                <CategoryList>\n                    {\n                        categoryList.map((categoryName, index) => <CategoryList.Block\n                            handleItemClick={handleItemClick}\n                            key={index}\n                            name={categoryName}\n                        />)\n                    }\n                </CategoryList>\n\n                {/* Popup view */}\n                <div className=\"pg_mm_view_popup_block\">\n                    <ViewPopup\n                        onDelete={(isSuccess) => isSuccess ? setIsDisplayPopup(\"none\") : props.onFailed(\"Settings\")}\n                        onEdit={(filePath) => props.onEdit(filePath)}\n                        onClose={handleClosePopups}\n                        source={dataView}\n                        display={isDisplayPopup}\n                    />\n                </div>\n\n            </Layout.MiddleContent >\n        </div>\n    )\n}\n","import * as request from \"../API/Github/Request\";\nimport { StringUtils } from \"./StringUtils\";\n\n/**\n * Get all infomation from path resource\n * @param {String} path Path to resource\n * @returns Object\n */\nexport function readContent(path) {\n    return request.readContentByPath(path);\n}\n\n/**\n * Save a file into Git repository\n * @param {Object} data Content of file, encode Base64\n * @param {String} filePath Path to file location\n * @returns\n */\nexport function create(data = {\n    message: 'Add file',\n    content: 'KEVtcHR5KQ==', // (Empty)\n}, filePath) {\n    return request.save(data, filePath);\n}\n\n/**\n * Update content of file in Github\n * @param {Object} data Content of file, encode Base64\n * @param {String} filePath Path to file location\n * @returns\n */\nexport async function update(data = {\n    message: 'Add file',\n    content: 'KEVtcHR5KQ==', // (Empty)\n}, filePath) {\n\n    // Get last SHA version on Github\n    let dataAPI = await request.readContentByPath(filePath);\n    if (dataAPI === null) return;\n    let lastSha = dataAPI.sha;\n    data.sha = lastSha;\n    return request.updateContent(data, filePath);\n}\n\n/**\n * Delete a file \n * @param {String} filePath path to file will delete\n */\nexport function deleteFile(filePath) {\n    return move(\"main\", filePath);\n}\n\n/**\n * Move || remove a file to a new location\n * @param {String} branch master \n * @param {String} path \n * @param {String} newPath not existed then remove path\n * @returns true if move successfully\n */\nexport async function move(branch = \"main\", path, newPath) {\n    // Get last SHA of main branch\n    let latestCommit = await request.getRef(\"heads/main\");\n    // Get tree by last SHA\n    let tree = await request.getTree(latestCommit + '?recursive=true');\n    // Update tree\n    tree.forEach(function (ref) {\n        if ((!newPath || StringUtils.isNullOrEmpty(newPath)) && ref.path === path) {\n            ref.isDeleted = true;\n        } else {\n            if (ref.path === path) ref.path = newPath;\n        }\n\n        if (ref.type === \"tree\") {\n            ref.isDeleted = true;\n        }\n    });\n\n    tree = tree.filter(p => !p.isDeleted);\n    // Post update tree to API\n    let rootTree = await request.postTree(tree);\n    // Create a commit\n    let commit_msg = (!newPath || StringUtils.isNullOrEmpty(newPath))\n        ? \"Remove \" + path\n        : \"Move \" + path + \" to \" + newPath;\n    let commit = await request.commit(latestCommit, rootTree, commit_msg);\n    // Update HEAD to new commit\n    let result = await request.updateHead(branch, commit);\n    return result != null;\n}","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ContentRender } from \"../Utils/ContentRender\";\n\nexport default function CategoryInput(props) {\n    // use for control sync process\n    const refController = React.useRef(null);\n    const style = useSelector(state => state.style);\n    //\n    const nameInput = React.useRef(\"\");\n    const pathDataList = React.useRef([]);\n    const [categoryList, setCategoryList] = React.useState([]);\n    const [pathRenderList, setPathRenderList] = React.useState([]);\n    const [isFetching, setIsFetching] = React.useState(false);\n    const makeReturn = () => {\n        let category = \"\";\n        if (pathDataList.current && pathDataList.current.length > 0) {\n            category = pathDataList.current.map((item) => item.name).join(\"\");\n        }\n        return { category: category, title: nameInput.current.value }\n    }\n\n    React.useEffect(() => {\n        function makePathStr(list) {\n            if (list.length === 0) return \"\";\n\n            let path = \"\";\n            list.forEach(el => {\n                path += el.name;\n            });\n            return path;\n        }\n        // Set default title\n        nameInput.current.value = props.defaultTitle;\n        // Set default category\n        let categorys = props.defaultCategory.split(\"/\");\n        categorys = categorys.filter(p => p !== \"\");\n        let categoryPathList = [];\n        categorys.forEach(element => {\n            element = { name: element + \"/\" };\n            element = { ...element, path: makePathStr(categoryPathList) + element.name }\n            element = { ...element, subList: [] }\n            categoryPathList.push(element);\n        });\n        pathDataList.current = categoryPathList;\n        setPathRenderList(categoryPathList);\n\n        // Make category list\n        refController.current = new AbortController();\n        let signal = refController.current.signal;\n        ContentRender.getAllCategoryList(\"\", signal).then((data) => {\n            // check unmount component\n            if (signal.aborted) return;\n            setCategoryList([...data]);\n        }).catch(err => {\n            console.log(err);\n        });\n\n        return () => {\n            refController.current.abort();\n        };\n    }, [props]);\n\n    async function makeNewCategory(name, callback = function () { }) {\n        if (name !== \"/\" && name.endsWith(\"/\")) {\n            // Fetch sublist\n            let currentPath = pathRenderList.map((item) => item.name).join(\"\");\n            let newPath = {\n                name: name,\n                path: currentPath + name,\n                subList: [],\n            };\n            pathDataList.current = [...pathDataList.current, newPath];\n            setPathRenderList(pathDataList.current);\n            callback(true);\n\n\n            // Update sub list from API\n            setIsFetching(true);\n            refController.current = new AbortController();\n            let signal = refController.current.signal;\n            let tmpList = await makeSubListFromAPI(signal);\n            // Component is unmount\n            if (signal.aborted) return;\n            pathDataList.current = tmpList;\n            setPathRenderList(tmpList);\n            setIsFetching(false);\n        } else {\n            callback();\n        }\n    }\n\n    async function makeSubListFromAPI(signal) {\n        let lastItem = pathDataList.current.at(-1);\n        // fetch API\n        let subDataList = await ContentRender.getAllCategoryList(lastItem.path, signal);\n        // Remove last item in list\n        let tmpList = [...pathDataList.current];\n        tmpList.pop();\n        //\n        lastItem = { ...lastItem, subList: subDataList }\n        tmpList.push(lastItem);\n        return tmpList\n    }\n\n    function handleKeyInput(evt) {\n        let key = evt.which || evt.keyCode || evt.charCode;\n        if (/*key === 8 || */ key === 46 && pathDataList.current.length > 0) {\n            // let lastItem = pathDataList.current.at(-1);\n            // evt.target.value = lastItem.name.substring(0, lastItem.name.length - 1);\n            let tmpList = [...pathDataList.current];\n            tmpList.pop();\n            pathDataList.current = tmpList;\n            setPathRenderList(pathDataList.current);\n        } else {\n            makeNewCategory(evt.target.value, function (success = false) {\n                if (success) evt.target.value = \"\";\n                props.onChange(makeReturn());\n            });\n        }\n\n        evt.target.focus();\n    }\n\n    function setNameInputValue(val) {\n        makeNewCategory(val + \"/\", function () {\n            props.onChange(makeReturn());\n        });\n        // nameInput.current.value = \"\";\n        nameInput.current.focus();\n    }\n\n    function renderSubCategoryList() {\n        let currentCtgList = [];\n        let lastItem = pathRenderList.at(-1);\n        if (pathRenderList.length > 0) {\n            currentCtgList = [...lastItem.subList];\n        } else {\n            currentCtgList = categoryList;\n        }\n\n        if (isFetching) {\n            return (\n                <div style={{ position: \"absolute\", top: 6, zIndex: -1, color: \"#cdcdcd\" }}>\n                    <img height=\"20px\"\n                        src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\n                        alt=\"loadding...\"\n                    />\n                </div>\n            )\n        }\n\n        if (currentCtgList.length === 0) {\n            let name = \"root/\";\n            if (lastItem && lastItem.name) {\n                name = \".../\" + lastItem.name;\n            }\n\n            return (\n                <div style={{ position: \"absolute\", top: 6, zIndex: -1, color: \"#cdcdcd\" }}>No category from {name}</div>\n            )\n        }\n\n        return currentCtgList.map((item, index) => (\n            <span\n                onClick={() => setNameInputValue(item)}\n                className=\"pg_mm_sublist_item\"\n                key={index}\n            >\n                {item}\n            </span>\n        ));\n    }\n\n    // console.log(\"Re-render CategoryInput.\");\n    return (\n        <div style={{ marginBottom: 50, height: 30 }}>\n            <div className=\"pg_mm_path_parent\">\n                <span className=\"pg_mm_selected_path_item\">/</span>\n                {/* Render path */}\n                {pathRenderList.map((item, index) => (\n                    <span className=\"pg_mm_selected_path_item\" key={index}>\n                        {item.name}\n                    </span>\n                ))}\n                {/* Input path */}\n                <input\n                    style={style.borderLine}\n                    placeholder=\"Press [DEL] to back to previous folder.\"\n                    ref={nameInput}\n                    className=\"pg_mm_name_input\"\n                    onKeyUp={(evt) => handleKeyInput(evt)}\n                />\n            </div>\n            <div className=\"sub_list_redered\" style={{ marginTop: 5, position: \"relative\" }}>\n                {renderSubCategoryList()}\n            </div>\n        </div>\n    );\n}\n","import { getSingleton as LocalCache } from \"./CacheManager\";\n\nconst CACHE_KEY = \"pg_mm_content_writer\";\nconst writerCache = LocalCache(CACHE_KEY);\n\nconst ContentWriterCache = (function () {\n\n    function setTitle(title) {\n        writerCache.add(\"title\", title);\n    }\n\n    function getTitle() {\n        let title = writerCache.get(\"title\");\n        if (!title) return \"\";\n        return title;\n    }\n\n    function setContent(content) {\n        writerCache.add(\"content\", content);\n    }\n\n    function getContent() {\n        let content = writerCache.get(\"content\");\n        if (!content) return \"\";\n        return content;\n    }\n\n    function releaseCache() {\n        writerCache.add(\"title\", \"\");\n        writerCache.add(\"content\", \"\");\n        writerCache.add(\"path\", \"\");\n        writerCache.add(\"isUpdate\", false);\n    }\n\n    function setPath(path) {\n        writerCache.add(\"path\", path);\n    }\n\n    function getPath() {\n        let path = writerCache.get(\"path\");\n        if (!path) return \"\";\n        return path;\n    }\n\n    function getCategory() {\n        let path = writerCache.get(\"path\");\n        if (!path) return \"\";\n\n        if (!path.includes(\"/\")) return \"\";\n\n        return path.replace(/\\/[^/]+.md/gm, \"\");\n    }\n\n    function setIsUpdate(isUpdate) {\n        writerCache.add(\"isUpdate\", isUpdate);\n    }\n\n    function isUpdate() {\n        let isUpdate = writerCache.get(\"isUpdate\");\n        if (!isUpdate) return false;\n        return isUpdate;\n    }\n\n    return {\n        setTitle: setTitle,\n        getTitle: getTitle,\n        setContent: setContent,\n        getContent: getContent,\n        releaseCache: releaseCache,\n        setPath: setPath,\n        getPath: getPath,\n        getCategory: getCategory,\n        setIsUpdate: setIsUpdate,\n        isUpdate: isUpdate\n    };\n})();\n\nexport default ContentWriterCache;","import React, { useState, useRef } from 'react';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport Layout from './Layout';\nimport * as hub from '../Utils/GithubCRUD';\nimport { StringUtils } from '../Utils/StringUtils';\nimport { NotificationManager } from 'react-notifications';\nimport CategoryInput from '../ViewComponents/CategoryInput';\nimport { getSingleton as LocalCache } from '../Utils/CacheManager';\n// import style manually\nimport 'react-markdown-editor-lite/lib/index.css';\nimport { ContentRender } from '../Utils/ContentRender';\nimport { useSelector } from 'react-redux';\nimport ContentWriterCache from '../Utils/ContentWriterCache';\n// var fs = require('fs');\n\nexport default function WriterTab(props) {\n    // Use for control sync process\n    const refController = React.useRef(null);\n    // Use for store data\n    const mdParser = new MarkdownIt();\n    const [content, setContent] = useState(\"\");\n    const [isProcessing, setIsProcessing] = useState(false);\n    const title = useRef(\"\");\n    const category = useRef(\"\");\n\n    // Use for update file\n    const { updateAction } = props;\n    const { inputPath, clearPath } = updateAction;\n    const isCreateed = useRef(!inputPath);\n\n    const originData = useRef({\n        title: null,\n        category: null,\n        content: null\n    });\n\n    const style = useSelector(state => state.style);\n\n    React.useEffect(() => {\n        // Check settings\n        const CACHE_KEY = \"pg_mm_settings\";\n        const cache = LocalCache(CACHE_KEY);\n        const TOKEN_KEY = cache.has(\"accessKey\") ? cache.get(\"accessKey\") : \"\";\n\n        if (StringUtils.isNullOrEmpty(TOKEN_KEY)) {\n            props.onFailed(\"Settings\");\n            return;\n        }\n\n        if (inputPath === ContentWriterCache.isUpdate() || isCreateed.current) {\n            title.current = ContentWriterCache.getTitle();\n            category.current = ContentWriterCache.getCategory();\n            setContent(ContentWriterCache.getContent());\n\n            isCreateed.current = !ContentWriterCache.isUpdate();\n            return;\n        }\n\n        // For update data\n        clearPath();\n        ContentWriterCache.setIsUpdate(true);\n        ContentWriterCache.setPath(inputPath);\n\n        // fetch API\n        refController.current = new AbortController();\n        let signal = refController.current.signal;\n        ContentRender.makeContentObject(inputPath, signal).then(data => {\n            if (!data) return;\n            title.current = data.title;\n            category.current = data.category;\n            originData.current = {\n                title: data.title,\n                category: data.category,\n                originData: data.content\n            }\n            setContent(data.content);\n        });\n\n        return () => {\n            refController.current.abort();\n        }\n    }, [clearPath, inputPath, props])\n\n    function handleImageUpload(file, callback) {\n        const reader = new FileReader()\n        reader.onload = () => {\n            let fileName = new Date().getTime() + \"_\" + file.name;\n            let data = {\n                message: `Upload file ${fileName}`,\n                content: reader.result.substr(reader.result.indexOf(',') + 1)\n            }\n\n            hub.create(data, `Images/${fileName}`).then(res => {\n                if (res && res.content && res.content.download_url) {\n                    callback(res.content.download_url)\n                }\n            });\n        }\n        reader.readAsDataURL(file)\n    }\n\n    /**\n     * After click button submit collect data from form and call API\n     */\n    async function handleSubmit() {\n        if (StringUtils.trim(title.current, \"\") === \"\") {\n            NotificationManager.error(\"Please input title!!!\");\n            return;\n        }\n\n        if (StringUtils.trim(category.current, \"\") === \"\") {\n            NotificationManager.error(\"Please select category!!!\");\n            return;\n        }\n\n        if (StringUtils.trim(content, \"\") === \"\" || StringUtils.trim(content, \"\").length < 50) {\n            NotificationManager.error(\"Please input content than 50 charactor!!!\");\n            return;\n        }\n\n        // correct data\n        // make data from form data for API body\n        let id = new Date().getTime();\n        let titleFix = /*StringUtils.nonAccentVietnamese(title.current);*/title.current;\n        let filePath = `${category.current}/${StringUtils.truncateString(titleFix, 25)}.md`;\n        filePath = filePath.replaceAll(\"//\", \"/\");\n\n        // content of file md\n        let fileContent = \"\";\n        fileContent += `---\\n`;\n        fileContent += `id: ${id}\\n`;\n        fileContent += `title: ${title.current}\\n`;\n        fileContent += `category: ${category.current}\\n`;\n        fileContent += `---\\n\\n`;\n        fileContent += content;\n\n        let commitMsg = isCreateed.current\n            ? \"Create file \" + category.current + \"/\" + StringUtils.truncateString(titleFix, 25)\n            : \"Update file \" + inputPath;\n\n        let data = {\n            message: commitMsg,\n            content: StringUtils.base64Encode(fileContent)\n        }\n\n        store(data, filePath);\n    }\n\n    async function store(data, filePath) {\n        setIsProcessing(true);\n        if (isCreateed.current) {\n\n            let response\n            try {\n                response = await hub.create(data, filePath);\n            } catch (err) {\n                setIsProcessing(false);\n                NotificationManager.error(err + \"\");\n            }\n\n            if (response && response.commit) {\n                NotificationManager.info(response.commit.html_url, \"Commited\", 5000, function () {\n                    window.open(response.commit.html_url, '_blank').focus();\n                }, false);\n                setIsProcessing(false);\n                // release cache\n                ContentWriterCache.releaseCache();\n            }\n        } else {\n            if (title.current !== originData.current.title\n                || category.current !== originData.current.category) {\n\n                try {\n                    await hub.move(\"main\", inputPath, filePath);\n                } catch (err) {\n                    setIsProcessing(false);\n                    NotificationManager.error(err + \"\");\n                }\n            }\n\n            if (content !== originData.current.content) {\n                let isUpdated = true;\n                await hub.update(data, filePath).catch(err => {\n                    NotificationManager.error(err + \"\");\n                    isUpdated = false;\n                });\n\n                if (isUpdated) {\n                    NotificationManager.info(\"Updated\");\n                    // release cache\n                    ContentWriterCache.releaseCache();\n                }\n                setIsProcessing(false);\n            }\n        }\n    }\n\n    function handleChangeCategory(source = { category: \"\", title: \"\" }) {\n        title.current = source.title;\n        category.current = source.category;\n\n        //cache\n        ContentWriterCache.setContent(content);\n        ContentWriterCache.setTitle(source.title);\n        if (!StringUtils.isNullOrEmpty(source.title)) {\n            ContentWriterCache.setPath(source.category + source.title + \".md\");\n        } else {\n            ContentWriterCache.setPath(source.category);\n        }\n    }\n\n    function handleChangeConetnt({ html, text }) {\n        setContent(text)\n\n        //cache\n        ContentWriterCache.setContent(text);\n        ContentWriterCache.setTitle(title.current);\n    }\n\n    function handleClearForm() {\n        ContentWriterCache.releaseCache();\n        setContent(\"Loadding...\");\n\n        setTimeout(function () {\n            title.current = \"\";\n            category.current = \"\";\n            isCreateed.current = true;\n            setContent(\"\");\n        }, 500)\n    }\n\n    return (\n        <div className=\"pg_mm_amination\">\n            <Layout.MiddleContent>\n                <>\n                    <div style={{ width: \"85%\", height: 90, float: 'left' }}>\n                        <CategoryInput\n                            defaultTitle={title.current}\n                            defaultCategory={category.current}\n                            onChange={handleChangeCategory}\n                        />\n                    </div>\n                    {/* Save button  */}\n                    <button\n                        style={{ ...style.button, width: '9%', height: '40px', float: 'right', marginLeft: 2 }}\n                        className='pg_mm_write_button'\n                        onClick={handleSubmit}>\n                        {isCreateed.current ? \"Create\" : \"Update\"}\n                    </button>\n\n                    {\n                        !StringUtils.isNullOrEmpty(content)\n                            ?\n                            <button\n                                style={{ ...style.button, width: '5%', height: '40px', float: 'right', backgroundColor: '#dcdcdc' }}\n                                className='pg_mm_write_button'\n                                onClick={handleClearForm}>\n                                Cancel\n                            </button>\n                            : \"\"\n                    }\n                </>\n                <div style={{ marginTop: '5px' }}></div>\n                <MdEditor\n                    value={content}\n                    onImageUpload={handleImageUpload}\n                    style={{ height: 'calc(100vh - 160px', width: '100%' }}\n                    renderHTML={text => mdParser.render(text)}\n                    onChange={handleChangeConetnt}\n                />\n\n                {\n                    isProcessing ?\n                        <div className=\"pg_mm_loadding\">\n                            <img height=\"45px\"\n                                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\n                                alt=\"loadding...\"\n                            />\n                        </div>\n                        :\n                        ''\n                }\n\n            </Layout.MiddleContent>\n        </div>\n    )\n}\n","import React from 'react';\nimport Layout from './Layout';\nimport { NotificationManager } from 'react-notifications';\nimport './SettingsTab.css';\nimport { useSelector } from 'react-redux';\nimport SettingsCache from '../Utils/SettingsCache';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\"\nimport { faArrowAltCircleRight, faSave, faEyeSlash, faEye } from \"@fortawesome/free-solid-svg-icons\"\n\nexport default function SettingsTab() {\n    const urlRepositoryInput = React.useRef(null);\n    const cacheTimeDayInput = React.useRef(null);\n    const requestTimeoutInput = React.useRef(null);\n    const accessKeyInput = React.useRef(null);\n    const userNameInput = React.useRef(null);\n    const emailInput = React.useRef(null);\n    const avatarViewer = React.useRef(null);\n\n    const style = useSelector(state => state.style);\n    const app_id = \"95da9e48d369117d17bb\";\n    const [isView, setIsView] = React.useState(false);\n\n    React.useEffect(() => {\n        urlRepositoryInput.current.value = SettingsCache.getUrlRepository();\n        cacheTimeDayInput.current.value = SettingsCache.getCacheMinutes();\n        requestTimeoutInput.current.value = SettingsCache.getRequestTimeout();\n        if (SettingsCache.getAccessKey()) {\n            let tokenSet = SettingsCache.getAccessKey();\n            accessKeyInput.current.value = tokenSet;\n        }\n\n        userNameInput.current.value = SettingsCache.getUserName();\n        emailInput.current.value = SettingsCache.getEmail();\n        if (SettingsCache.getAvatarUrl())\n            avatarViewer.current.src = SettingsCache.getAvatarUrl();\n        return () => { }\n    }, [])\n\n\n    function handleSave() {\n        if (!window.confirm(\"Do you want to save?\") === true) {\n            return;\n        }\n\n        SettingsCache.setUrlRepository(urlRepositoryInput.current.value);\n        SettingsCache.setCacheTimeMinute(cacheTimeDayInput.current.value);\n        SettingsCache.setRequestTimeout(requestTimeoutInput.current.value);\n        SettingsCache.setAccessKey(accessKeyInput.current.value);\n        SettingsCache.setUserName(userNameInput.current.value);\n        SettingsCache.setEmail(emailInput.current.value);\n\n        NotificationManager.info(\"Success, reload after 2s.\");\n        setTimeout(function () {\n            window.location.reload();\n        }, 2000);\n    }\n\n    function handleAuthen() {\n        window.location.href = \"https://github.com/login/oauth/authorize?client_id=\" + app_id\n            + \"&scope=public_repo\";\n    }\n\n    async function logout() {\n        try {\n            // deleteAppAuthorization(app_id);\n            SettingsCache.releaseCache();\n            NotificationManager.info(\"Success\");\n            setTimeout(function () {\n                window.location.reload();\n            }, 1000);\n        } catch (err) {\n            NotificationManager.err(\"err\");\n        }\n    }\n\n    return (\n        <div className=\"pg_mm_amination\">\n            <Layout.MiddleContent >\n                <h3 className='pg_mm_settings_area'>Data settings</h3>\n                <input\n                    ref={urlRepositoryInput}\n                    className='pg_mm_settings_input'\n                    placeholder='URL to repository...'\n                    defaultValue=\"https://github.com/cuongphuong/memo_data\"\n                />\n\n                <br />\n                <input\n                    type=\"number\"\n                    ref={cacheTimeDayInput}\n                    className='pg_mm_settings_input'\n                    placeholder='Cache time (ms)...'\n                    defaultValue=\"10\"\n                />\n\n                <br />\n                <input\n                    type=\"number\"\n                    ref={requestTimeoutInput}\n                    className='pg_mm_settings_input'\n                    placeholder='Request timeout (ms)...'\n                    defaultValue=\"5000\"\n                />\n\n                <h3 className='pg_mm_settings_area'>Github account setting</h3>\n\n                <input\n                    type={isView ? \"text\" : \"password\"}\n                    ref={accessKeyInput}\n                    className='pg_mm_settings_input'\n                    placeholder='Access key (if private repository)...'\n                />\n                <span className='pg_mm_show_accesskey'>\n                    {\n                        !isView ?\n                            <FontAwesomeIcon icon={faEyeSlash} onClick={() => setIsView(true)} />\n                            :\n                            <FontAwesomeIcon icon={faEye} onClick={() => setIsView(false)} />\n                    }\n                </span>\n\n                <br />\n                <input\n                    ref={userNameInput}\n                    className='pg_mm_settings_input'\n                    placeholder='Username github...'\n                />\n\n                <br />\n                <input\n                    ref={emailInput}\n                    className='pg_mm_settings_input'\n                    placeholder='Email...'\n                />\n\n                {/*  Avatar */}\n                {SettingsCache.getAvatarUrl() ? <> <br /><img style={style.button} width={50} ref={avatarViewer} alt=\"avatar\"></img></> : \"\"}\n                <br />\n                <button\n                    style={style.button}\n                    onClick={handleSave}\n                    className='pg_mm_settings_submit'>\n                    <FontAwesomeIcon icon={faSave} />\n                    <span>  Save</span>\n                </button>\n\n                {SettingsCache.getAccessKey() ?\n                    <button\n                        style={style.button}\n                        onClick={(logout)}\n                        className='pg_mm_settings_submit'>\n                        <FontAwesomeIcon icon={faArrowAltCircleRight} />\n                        <span>  Logout</span>\n                    </button>\n                    :\n                    <button\n                        style={style.button}\n                        onClick={(handleAuthen)}\n                        className='pg_mm_settings_submit'>\n                        <FontAwesomeIcon icon={faGithub} />\n                        <span>  GitHub identity</span>\n                    </button>\n                }\n                <font color=\"#ddd\">(©2022 CuongPV10 - v1.0.1)</font>\n            </Layout.MiddleContent>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as ReducerAction from '../Actions/StyleReducer';\nimport \"./StyleSettings.css\";\nimport SettingsCache from '../Utils/SettingsCache';\n\nexport default function StyleSettings() {\n    const dispatch = useDispatch();\n\n    function changeStyle(color) {\n        let action = null;\n        switch (color) {\n            case \"tomato\":\n                action = ReducerAction.changeToTomatoStyle();\n                SettingsCache.setTheme(\"tomato\");\n                dispatch(action);\n                break;\n            case \"blue\":\n                action = ReducerAction.changeToBlueStyle();\n                SettingsCache.setTheme(\"blue\");\n                dispatch(action);\n                break;\n            case \"violet\":\n                action = ReducerAction.changeToVioletStyle();\n                SettingsCache.setTheme(\"violet\");\n                dispatch(action);\n                break;\n            default:\n                break;\n        }\n    }\n\n    return (\n        <div className='pg_mm_style_settings unselectable'>\n            <span onClick={() => changeStyle(\"tomato\")}></span>\n            <span onClick={() => changeStyle(\"blue\")}></span>\n            <span onClick={() => changeStyle(\"violet\")}></span>\n        </div>\n    )\n}\n","export const changeToTomatoStyle = () => {\n    return {\n        type: \"CHANGE_TO_TOMATO_STYLE\"\n    }\n}\n\nexport const changeToBlueStyle = () => {\n    return {\n        type: \"CHANGE_TO_BLUE_STYLE\"\n    }\n}\n\nexport const changeToVioletStyle = () => {\n    return {\n        type: \"CHANGE_TO_VIOLET_STYLE\"\n    }\n}","import React from 'react';\nimport { useEffect } from 'react';\nimport SettingsCache from '../Utils/SettingsCache';\nimport { StringUtils } from '../Utils/StringUtils';\n\nexport default function GithubAuthenticate() {\n    const DEFAULT_AUTH_SERVICE = 'https://bdsdb.000webhostapp.com/auth.php/';\n    const [message, setMessage] = React.useState(\"Waiting for check infomation...\")\n\n    useEffect(() => {\n        const queryParams = new URLSearchParams(window.location.search);\n        /** Ủy quyền login */\n        let code = queryParams.get('code');\n\n        if (!StringUtils.isNullOrEmpty(code)) {\n            let formData = new FormData();\n            formData.append('code', code);\n\n            fetch(DEFAULT_AUTH_SERVICE, {\n                method: \"POST\",\n                headers: { \"Accept\": \"application/json\" },\n                body: formData\n            }).then(res => res.json())\n                .then(async (data) => {\n                    SettingsCache.setAccessKey(data.access_token);\n                    setMessage(\"Get success token, wait for back to home page...\");\n\n                    // Get infomation\n                    fetch(\"https://api.github.com/user\", {\n                        headers: {\n                            Accept: \"application/vnd.github.v3+json\",\n                            Authorization: `Token ${data.access_token}`\n                        }\n                    }).then(r => r.json())\n                        .then(userInfomation => {\n                            if (userInfomation) {\n                                let userName = userInfomation.login;\n                                let email = userInfomation.email;\n                                let avatar_url = userInfomation.avatar_url;\n\n                                SettingsCache.setUserName(userName);\n                                SettingsCache.setEmail(email);\n                                SettingsCache.setAvatarUrl(avatar_url);\n                            }\n\n                            window.location.href = \"/memo\";\n                        })\n                }).catch(err => {\n                    console.log(err);\n                    setMessage(\"Ohh oh :(((\");\n                });\n        } else {\n            setMessage(queryParams.get('error_description'));\n            setTimeout(() => {\n                window.location.href = \"/memo\";\n            }, 1000);\n        }\n        return () => {\n        }\n    }, [])\n\n    return (\n        <div>{message}</div>\n    )\n}\n","import React from 'react'\nimport Layout from './LayoutComponents/Layout';\nimport QuickSearchTab from './LayoutComponents/QuickSearchTab';\nimport ListTab from './LayoutComponents/ListTab';\nimport WriterTab from './LayoutComponents/WriterTab';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport SettingsTab from './LayoutComponents/SettingsTab';\nimport StyleSettings from './ViewComponents/StyleSettings';\nimport SettingsCache from './Utils/SettingsCache';\nimport { useDispatch } from 'react-redux';\nimport * as ReducerAction from './Actions/StyleReducer';\nimport { StringUtils } from './Utils/StringUtils';\nimport { Routes, Route, useParams } from 'react-router-dom'\nimport GithubAuthenticate from './LayoutComponents/GithubAuthenticate';\n\n\nexport default function App() {\n    return (\n        <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/auth\" element={<GithubAuthenticate />} />\n            <Route path=\"/write\" element={<WriterTab />} />\n            <Route path=\"/setting\" element={<SettingsTab />} />\n            <Route path=\"/get/:id\" element={<HomePage />} />\n        </Routes>\n    )\n}\n\nfunction HomePage() {\n    // const menuList = [\"Search\", \"List\", \"Write\"];\n    const menuList = [\"Search\", \"List\"];\n    // state\n    const [selectedMenu, setSelectedMenu] = React.useState(menuList[1]);\n    const viewContentObj = React.useRef(null);\n    const editPath = React.useRef(null);\n    const setViewContentObj = (obj) => { viewContentObj.current = obj; }\n    const dispatch = useDispatch();\n    let { id } = useParams();\n\n    React.useEffect(() => {\n        /** Set type */\n        changeStyle(SettingsCache.getTheme());\n\n        /** Check url search */\n        if (!StringUtils.isNullOrEmpty(id)) {\n            setSelectedMenu(\"Search\");\n        }\n\n        /*--------------- Define function inside useEffect -------------------*/\n        function changeStyle(color) {\n            let action = null;\n            switch (color) {\n                case \"tomato\":\n                    action = ReducerAction.changeToTomatoStyle();\n                    SettingsCache.setTheme(\"tomato\");\n                    dispatch(action);\n                    break;\n                case \"blue\":\n                    action = ReducerAction.changeToBlueStyle();\n                    SettingsCache.setTheme(\"blue\");\n                    dispatch(action);\n                    break;\n                case \"violet\":\n                    action = ReducerAction.changeToVioletStyle();\n                    SettingsCache.setTheme(\"violet\");\n                    dispatch(action);\n                    break;\n                default:\n                    break;\n            }\n        }\n        /*--------------- /Define function inside useEffect -------------------*/\n\n\n    }, [dispatch, id]);\n\n    function onSubmitSuccess(obj) {\n        setViewContentObj(obj);\n        // Back to search component\n        setSelectedMenu(menuList[0]);\n    }\n\n    function onEditFile(filePath) {\n        editPath.current = filePath;\n        setSelectedMenu(menuList[2]);\n    }\n\n    const updateAction = {\n        inputPath: editPath.current,\n        clearPath: function () {\n            editPath.current = null;\n        }\n    }\n\n    function rederTabView() {\n        switch (selectedMenu) {\n            case \"Search\":\n                return <QuickSearchTab\n                    onEdit={onEditFile}\n                    defaultPost={viewContentObj.current}\n                />;\n            case \"List\":\n                return <ListTab\n                    onEdit={onEditFile}\n                    onFailed={setSelectedMenu}\n                />;\n            case \"Write\":\n                return <WriterTab\n                    updateAction={updateAction}\n                    actionSubmit={onSubmitSuccess}\n                    onFailed={setSelectedMenu}\n                />\n            case \"Settings\":\n                return <SettingsTab />;\n            default:\n                return <QuickSearchTab />;\n        }\n    }\n\n    return (\n        <Layout>\n            <Layout.Header>\n                {/* <Layout.Header.Item\n                    key=\"Settings\"\n                    selected={selectedMenu}\n                    onClick={(title) => setSelectedMenu(title)}\n                    title=\"Settings\"\n                /> */}\n\n                {menuList.map(item => item !== \"Setting\" ? (\n                    <Layout.Header.Item\n                        key={item}\n                        selected={selectedMenu}\n                        onClick={(title) => setSelectedMenu(title)}\n                        title={item}\n                    />\n                ) : \"\")}\n            </Layout.Header>\n\n            <Layout.FullContent>\n                {rederTabView()}\n            </Layout.FullContent>\n            <NotificationContainer />\n            <StyleSettings />\n        </Layout>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initState = {\n    // ListTab.js\n    categoryList: [],\n    // CategoryList.Block.js\n    blockCategoryObj: {}\n}\n\nconst ListTabReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'SET_CATEGORY_LIST': {\n            let newCategoryList = [...action.payload];\n            return { ...state, categoryList: newCategoryList };\n        }\n        case 'SET_BLOCK_CATEGORY_OBJECT': {\n            let newBlockCategoryObj = { ...action.payload };\n            return { ...state, blockCategoryObj: newBlockCategoryObj };\n        }\n        default:\n            return state;\n    }\n};\nexport default ListTabReducer;","let initState = {\n    mdContent: null, // Content for show on view\n    searchResultList: [], // Search result API\n    activeId: null, // ActiveId\n    searchKeyWord: \"\"\n}\n\nconst SearchReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"SearchReducer/setActiveId\": {\n            return { ...state, activeId: action.payload };\n        }\n        case \"SearchReducer/setMdContent\": {\n            return { ...state, mdContent: action.payload };\n        }\n        case \"SearchReducer/setSearchResultList\": {\n            let searchResultList = [...action.payload];\n            return { ...state, searchResultList: searchResultList };\n        }\n        default:\n            return state;\n    }\n};\nexport default SearchReducer;","const orangeStyle = {\n    headerMenu: {\n        backgroundColor: \"#eec0c6\",\n        backgroundImage: \"linear-gradient(315deg, #eec0c6 0%, #e58c8a 74%)\"\n    },\n    category: { \"background\": \"linear-gradient(102deg, rgba(2,0,36,1) 0%, rgba(102,228,210,1) 0%, rgba(255,157,135,0.8434971400669643) 0%, rgba(244,123,58,0.35890330253195024) 100%, rgba(244,124,60,0.5157660476299895) 100%, rgba(80,193,184,1) 100%)\" },\n    menuSelected: {\n        background: \"#ffd6d6\",\n        color: \"#333 !important\"\n    },\n    leftBackground: {\n        backgroundColor: \"#fdfdf9\"\n    },\n    borderLine: {\n        border: \"solid tomato 1px\"\n    },\n    borderLineHover: {\n        border: \"solid 1px rgb(252, 139, 119)\",\n        boxShadow: \"1px 1px 5px 1px rgb(252, 139, 119)\"\n    },\n    button: {\n        backgroundColor: \"#e58c8a\",\n        color: \"#fff\",\n        marginRight: 5\n    },\n    input: {\n        outline: \"none\",\n        border: \"solid tomato 1px\"\n    }\n}\n\nconst blueStyle = {\n    headerMenu: {\n        background: \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(102,228,210,1) 0%, rgba(80,193,184,1) 98%)\"\n    },\n    category: { \"background\": \"linear-gradient(102deg, rgba(2,0,36,1) 0%, rgba(84,203,204,0.8519005014115021) 0%, rgba(90,204,195,0.4149257114955357) 100%, rgba(244,123,58,0.35890330253195024) 100%, rgba(244,124,60,0.5157660476299895) 100%, rgba(71,217,196,1) 100%)\" },\n    menuSelected: {\n        background: \"#b0f4e9\",\n        color: \"#333 !important\"\n    },\n    leftBackground: {\n        backgroundColor: \"#f5fafa\"\n    },\n    borderLine: {\n        border: \"solid #84d9cc 1px\"\n    },\n    borderLineHover: {\n        border: \"solid 1px #68d4c4\",\n        boxShadow: \"1px 1px 5px 1px #68d4c4\"\n    },\n    button: {\n        backgroundColor: \"#3dab9b\",\n        color: \"#fff\",\n        marginRight: 5\n    },\n    input: {\n        outline: \"none\",\n        border: \"solid tomato 1px\"\n    }\n}\n\nconst violetStyle = {\n    headerMenu: { \"background\": \"radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%)\" },\n    category: { \"background\": \"radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(235,174,203,0.5493794930081408) 0%, rgba(148,187,233,0.4989593249409139) 100%)\" },\n    menuSelected: {\n        background: \"#ebaecb\",\n        color: \"#333 !important\"\n    },\n    leftBackground: {\n        backgroundColor: \"#e5f2f0\"\n    },\n    borderLine: {\n        border: \"solid #ebaecb 1px\"\n    },\n    borderLineHover: {\n        border: \"solid 1px #ebaecb\",\n        boxShadow: \"1px 1px 5px 1px #ebaecb\"\n    },\n    button: {\n        backgroundColor: \"#ebaecb\",\n        color: \"#fff\",\n        marginRight: 5\n    },\n    input: {\n        outline: \"none\",\n        border: \"solid tomato 1px\"\n    }\n}\n\nconst StyleReducer = (state = violetStyle, action) => {\n    switch (action.type) {\n        case 'CHANGE_TO_TOMATO_STYLE': {\n            return orangeStyle;\n        }\n        case 'CHANGE_TO_BLUE_STYLE': {\n            return blueStyle;\n        }\n        case 'CHANGE_TO_VIOLET_STYLE': {\n            return violetStyle;\n        }\n        default:\n            return state;\n    }\n};\nexport default StyleReducer;","import { combineReducers } from \"redux\";\nimport ListTabReducer from \"./ListTabReducer\";\nimport SearchReducer from \"./SearchReducer\";\nimport StyleReducer from \"./StyleReducer\";\n\nconst rootReducer = combineReducers({\n    style: StyleReducer,\n    listTabData: ListTabReducer,\n    searchData: SearchReducer\n});\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"./Reducers\";\n\nconst store = createStore(rootReducer);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}