{"version":3,"sources":["LayoutComponents/Layout.js","ViewComponents/Viewer.js","Utils/RequestAPI.js","Utils/CacheManager.js","API/Github/Request.js","Utils/StringUtils.js","Utils/ContentRender.js","ViewComponents/List.js","Actions/SearchReducer.js","Utils/SearchHistoryCache.js","LayoutComponents/QuickSearchTab.js","ViewComponents/CategoryList.js","Utils/GithubCRUD.js","LayoutComponents/ViewPopup.js","LayoutComponents/ListTab.js","Actions/ListTabReducer.js","ViewComponents/CategoryInput.js","LayoutComponents/WriterTab.js","LayoutComponents/SettingsTab.js","ViewComponents/StyleSettings.js","Actions/StyleReducer.js","App.js","reportWebVitals.js","Reducers/ListTabReducer.js","Reducers/SearchReducer.js","Reducers/StyleReducer.js","Reducers/index.js","store.js","index.js"],"names":["Layout","children","className","Header","style","useSelector","state","id","headerMenu","Item","onClick","title","selected","menuSelected","SiderBar","leftBackground","RightContent","MiddleContent","FullContent","Fooder","Viewer","source","content","category","margin","remarkPlugins","remarkGfm","RequestAPI","baseUrl","timeout","headers","makeRequestConfig","inp","configs","method","signal","data","body","sendRequest","url","a","fetch","then","response","ok","json","Error","status","catch","err","replaceAll","trim","encodeURI","requestConfig","add_config","base_url","in_headers","console","log","exe","CacheManager","key","expire","this","items","getAll","value","store","hasOwnProperty","localStorage","setItem","JSON","stringify","Date","now","stored","getItem","isExpired","parse","whenCached","age","clear","removeItem","cache","getSingleton","LocalCache","REPOSITORY_SOURCE","has","get","TIME_OUT","TOKEN_KEY","USE_NAME","E_MAIL","request","Authorization","Accept","author","name","email","searchFromGitHub","result","readContentByPath","path","getUser","username","save","message","filePath","updateContent","sha","getRef","ref","object","getTree","tree","postTree","base_tree","payload","commit","parent","parents","updateHead","head","StringUtils","str","EMPTY","Base64","encode","decode","defaultStr","ret","startsWith","substring","endsWith","length","trimL","toLowerCase","replace","num","slice","ContentRender","isNullOrEmpty","apiResult","total_count","NotificationManager","info","warning","error","pathFileList","Set","postObjectList","Promise","all","map","item","add","makeContentObject","contentObject","apiContentResult","base64Content","decodeContent","index","indexOf","DEFAULT_DELIMITER","cfgAreaStr","contentAreaStr","makeConfigFromResult","m","regex","exec","lastIndex","mathItems","split","configKey","configValue","Array","isArray","categoryList","forEach","type","resultObject","itemList","hasContnent","List","handleChooseItem","activeId","isActive","borderLineHover","strPath","tmpPathList","filter","p","pop","truncPathListItem","setSearchResultList","searchResultList","searchCache","SearchHistoryCache","getTopKeyWord","allItem","Object","keys","sort","b","insertKey","keysSorted","del","removeMinItem","QuickSearchTab","refController","React","useRef","dispatch","useDispatch","searchData","mdContent","useState","isProcessing","setIsProcessing","searchCacheList","setSearchCacheList","inputObj","typingTimer","handleSearchChange","evt","clearTimeout","current","AbortController","setTimeout","aborted","doneTyping","target","keyword","search","apiResultContentList","setActiveId","setMdContent","useEffect","focus","cacheKeywordList","abort","list","borderLine","onChange","placeholder","marginTop","width","src","alt","height","position","top","memo","makeRenderList","categoryObj","sourcePath","renderList","property","CategoryList","Row","handleItemClick","categoryObject","setCategoryObject","setSourcePath","isLoadding","setIsLoadding","pathList","gotoPath","tmpList","getAllItemFromPath","fixPathList","renderPathList","onClickSubFolder","renderItem","props","Block","setCategoryObj","dirList","fileList","create","update","dataAPI","lastSha","deleteFile","move","branch","newPath","latestCommit","isDeleted","rootTree","commit_msg","ViewPopup","stype","setStype","window","confirm","display","animationName","animationDuration","onDelete","onClose","onEdit","ListTab","listTabData","isDisplayPopup","setIsDisplayPopup","dataView","setDataView","getAllCategoryList","setCategoryList","categoryName","CategoryInput","nameInput","pathDataList","pathRenderList","setPathRenderList","isFetching","setIsFetching","makeReturn","join","makeNewCategory","callback","currentPath","subList","makeSubListFromAPI","lastItem","at","subDataList","push","makePathStr","el","defaultTitle","categorys","defaultCategory","categoryPathList","element","marginBottom","onKeyUp","which","keyCode","charCode","handleKeyInput","currentCtgList","zIndex","color","renderSubCategoryList","WriterTab","mdParser","MarkdownIt","setContent","updateAction","inputPath","clearPath","isCreated","originData","getTime","titleFix","truncateString","fileContent","commitMsg","base64Encode","hub","html_url","open","float","button","onImageUpload","file","reader","FileReader","onload","blob","urlData","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","convertBase64UrlToBlob","readAsDataURL","renderHTML","text","render","html","SettingsTab","urlRepositoryInput","cacheTimeDayInput","requestTimeoutInput","accessKeyInput","userNameInput","emailInput","location","reload","StyleSettings","changeStyle","App","menuList","selectedMenu","setSelectedMenu","viewContentObj","editPath","onSubmitSuccess","obj","setViewContentObj","onEditFile","defaultPost","actionSubmit","rederTabView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","blockCategoryObj","ListTabReducer","action","newCategoryList","newBlockCategoryObj","searchKeyWord","SearchReducer","orangeStyle","backgroundColor","backgroundImage","background","border","boxShadow","input","outline","blueStyle","StyleReducer","rootReducer","combineReducers","createStore","ReactDOM","document","getElementById"],"mappings":"6NAIMA,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACI,qBAAKC,UAAU,uBAAf,SACKD,KAKPE,EAAS,SAAC,GAAkB,IAAhBF,EAAe,EAAfA,SACRG,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SACzC,OACI,qBAAKF,UAAU,eAAeK,GAAG,oBAAjC,SACI,oBAAIH,MAAOA,EAAMI,WAAjB,SACKP,OAyBjBE,EAAOM,KAnBY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC5BR,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAEzC,MAAc,aAAVO,EACO,mBAAGD,QAAS,kBAAMA,EAAQC,IAAQT,UAAU,wCAA5C,oBAIP,6BACI,sBACIA,UAAU,eACVE,MAAOQ,IAAaD,EAAQP,EAAMS,aAAe,GACjDH,QAAS,kBAAMA,EAAQC,IAH3B,SAIKA,OAgDjBX,EAAOG,OAASA,EAChBH,EAAOc,SAzCU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SACVG,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SACzC,OACI,qBACIA,MAAOA,EAAMW,eACbb,UAAU,0BAFd,SAGKD,KAoCbD,EAAOgB,aA/Bc,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SACpB,OACI,qBAAKC,UAAU,2BAAf,SACKD,KA6BbD,EAAOiB,cAxBe,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SACrB,OACI,qBAAKC,UAAU,yBAAf,SACKD,KAsBbD,EAAOkB,YAhBa,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SACnB,OACI,qBAAKC,UAAU,qBAAf,SACKD,KAcbD,EAAOmB,OATQ,aAUAnB,Q,+CCrFA,SAASoB,EAAT,GAKT,IAAD,IAL4BC,cAK5B,MALqC,CACtCV,MAAO,MACPW,QAAS,MACTf,GAAI,MACJgB,SAAU,OACT,EACD,OACI,yBAASrB,UAAU,2BAAnB,SACI,qBAAKA,UAAU,8BAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,oBAAIE,MAAO,CAAEoB,OAAQ,SAArB,SAAiCH,EAAOV,QACvCU,EAAOV,MAAQ,oBAAIP,MAAO,CAAEoB,OAAQ,YAAiB,GACtD,qBAAKtB,UAAU,qBAAf,SACI,cAAC,IAAD,CAAeD,SAAUoB,EAAOC,QAASG,cAAe,CAACC,gB,yCClBpEC,EAAc,WACvB,IAAIC,EAAU,KACVC,EAAU,IACVC,EAAU,GAEd,SAASC,EAAkBC,GACvB,IAAKA,EAAK,MAAO,GAEjB,IAAIC,EAAU,CACVH,QAASA,EACTI,OAAQF,EAAIE,QAUhB,OAPIF,EAAIG,SACJF,EAAO,2BAAQA,GAAR,IAAiBE,OAAQH,EAAIG,UAGpCH,EAAII,OACJH,EAAO,2BAAQA,GAAR,IAAiBI,KAAML,EAAII,QAE/BH,EApBwB,SAuBpBK,EAvBoB,gFAuBnC,WAA2BC,EAAKN,GAAhC,eAAAO,EAAA,sEACqBC,MAAMF,EAAKN,EAASJ,GAASa,MAAK,SAAUC,GACzD,GAAKA,EAASC,GAGV,OAAOD,EAASE,OAFhB,MAAM,IAAIC,MAAMH,EAASI,WAI9BC,OAAM,SAAAC,GACL,MAAM,IAAIH,MAAMG,MARxB,cACQJ,EADR,yBAUWA,GAVX,4CAvBmC,kEA4CnC,WAAuBb,GAAvB,iBAAAQ,EAAA,6DAGID,GADIA,EAAMX,EAAUI,EAAIO,IAAIW,WAAW,KAAM,MACnCC,OACVZ,EAAMa,UAAUb,GACZc,EAAgBtB,EAAkBC,GAL1C,SAOiBM,EAAYC,EAAKc,GAPlC,oFA5CmC,sBAsDnC,MAAO,CACHC,WAnBJ,WAA6E,IAA7DrB,EAA4D,uDAAlD,CAAEsB,SAAU,GAAI1B,QAAS,IAAO2B,WAAY,IAClE5B,EAAUK,EAAQsB,SAClB1B,EAAUI,EAAQJ,QAClBC,EAAUG,EAAQuB,WAElBC,QAAQC,IAAI,kBAAmB9B,EAASC,IAexC8B,IAxD+B,6CAAZ,GCArBC,E,WACF,WAAYC,GAAqB,IAAhBC,EAAe,uDAAN,KAAM,oBAC5BC,KAAKF,IAAMA,EACXE,KAAKD,OAASA,EACdC,KAAKC,MAAQD,KAAKE,S,uCAGtB,SAAIJ,EAAKK,GACDL,IACAE,KAAKC,MAAL,2BAAkBD,KAAKC,OAAvB,kBAA+BH,EAAMK,IACrCT,QAAQC,IAAI,uBAAwBG,EAAKE,KAAKC,QAElDD,KAAKI,U,iBAGT,SAAIN,GACIA,UACOE,KAAKC,MAAMH,GAEtBE,KAAKI,U,iBAGT,SAAIN,GACA,OAAOE,KAAKC,MAAMI,eAAeP,K,mBAGrC,WACIQ,aAAaC,QAAQP,KAAKF,IAAKU,KAAKC,UAAUT,KAAKC,QACnDK,aAAaC,QAAQP,KAAKF,IAAM,MAAOY,KAAKC,S,iBAGhD,SAAIb,GAEA,OADUE,KAAKE,SACJJ,K,oBAGf,WACI,IAAIc,EAASN,aAAaO,QAAQb,KAAKF,KACvC,OAAQE,KAAKc,cAAgBF,EACzB,GACAJ,KAAKO,MAAMH,K,uBAGnB,WACI,IAAII,EAAaV,aAAaO,QAAQb,KAAKF,IAAM,OAC7CmB,GAAOP,KAAKC,MAAQK,GAAc,IAEtC,SAAIhB,KAAKD,QAAUkB,EAAMjB,KAAKD,UAC1BC,KAAKkB,SACE,K,mBAMf,WACIZ,aAAaa,WAAWnB,KAAKF,KAC7BQ,aAAaa,WAAWnB,KAAKF,IAAM,W,KAUvCsB,EAAQ,GASZ,SAASC,EAAavB,GAAqB,IAAhBC,EAAe,uDAAN,KAIhC,OAHKqB,EAAMf,eAAeP,KACtBsB,EAAMtB,GAAO,IAAID,EAAaC,EAAKC,IAEhCqB,EAAMtB,GC7EjB,IACMsB,EAAQE,EADI,kBAEZC,EAAoBH,EAAMI,IAAI,iBAC9BJ,EAAMK,IAAI,iBAAiBtC,WAAW,sBAAuB,IAC7D,GAEAuC,EAAWN,EAAMI,IAAI,kBAAoB,SAAWJ,EAAMK,IAAI,kBAAoB,GAClFE,EAAYP,EAAMI,IAAI,aAAe,SAAWJ,EAAMK,IAAI,aAAe,GACzEG,EAAWR,EAAMI,IAAI,YAAc,SAAWJ,EAAMK,IAAI,YAAc,GACtEI,EAAST,EAAMI,IAAI,SAAW,SAAWJ,EAAMK,IAAI,SAAW,GAGpEK,EAAQvC,WAAW,CACfC,SAAU,yBACV1B,QAAS4D,EACTjC,WAAY,CACRsC,cAAeJ,EACfK,OAAQ,oCAIhB,IAAMC,EAAS,CACXC,KAAMN,EACNO,MAAON,GASJ,SAAeO,EAAtB,oC,4CAAO,WAAgCtC,EAAK1B,GAArC,eAAAK,EAAA,sEACgBqD,EAAQlC,IAAI,CAC3BpB,IAAI,kBAAD,OAAoBsB,EAApB,iBAAgCyB,GACnCpD,OAAQ,MACRC,OAAQA,IACTa,OAAM,SAAAC,GAEL,OADAQ,QAAQC,IAAIT,GACL,MAPR,cACCmD,EADD,yBAUIA,GAVJ,4C,sBAkBA,SAAeC,EAAtB,oC,4CAAO,WAAiCC,EAAMnE,GAAvC,eAAAK,EAAA,sEACgBqD,EAAQlC,IAAI,CAC3BpB,IAAI,UAAD,OAAY+C,EAAZ,qBAA0CgB,GAC7CpE,OAAQ,MACRC,OAAQA,IACTa,OAAM,SAAAC,GAEL,OADAQ,QAAQC,IAAIT,GACL,QAPR,cACCmD,EADD,yBAUIA,GAVJ,4C,sBAkBA,SAAeG,EAAtB,kC,4CAAO,WAAuBC,GAAvB,iBAAAhE,EAAA,6DACCD,EAAMiE,EAAW,UAAYA,EAAW,QADzC,SAEgBX,EAAQlC,IAAI,CAC3BpB,IAAKA,EACLL,OAAQ,QACTc,OAAM,SAAAC,GACL,OAAO,QANR,cAECmD,EAFD,yBASIA,GATJ,4C,sBAkBA,SAASK,IAGF,IAHOrE,EAGR,uDAHe,CACxBsE,QAAS,WACTpF,QAAS,gBACVqF,EAAU,uCACT,OAAOd,EAAQlC,IAAI,CACfpB,IAAI,UAAD,OAAY+C,EAAZ,qBAA0CqB,GAC7CzE,OAAQ,MACRE,KAAMmC,KAAKC,UAAUpC,KAUtB,SAASwE,IAIF,IAJgBxE,EAIjB,uDAJwB,CACjCsE,QAAS,iBACTpF,QAAS,eACTuF,IAAK,IACNF,EAAU,uCACT,OAAOd,EAAQlC,IAAI,CACfpB,IAAI,UAAD,OAAY+C,EAAZ,qBAA0CqB,GAC7CzE,OAAQ,MACRE,KAAMmC,KAAKC,UAAUpC,KAStB,SAAe0E,IAAtB,+B,4CAAO,0CAAAtE,EAAA,6DAAsBuE,EAAtB,+BAA4B,aAA5B,SAEgBlB,EAAQlC,IAAI,CAC3BpB,IAAI,UAAD,OAAY+C,EAAZ,qBAA0CyB,GAC7C7E,OAAQ,QAJT,cAECkE,EAFD,yBAOIA,EAAOY,OAAOH,KAPlB,2C,wBAeA,SAAeI,IAAtB,+B,4CAAO,0CAAAzE,EAAA,6DAAuBqE,EAAvB,+BAA6B,GAA7B,SAEgBhB,EAAQlC,IAAI,CAC3BpB,IAAI,UAAD,OAAY+C,EAAZ,sBAA2CuB,GAC9C3E,OAAQ,QAJT,cAECkE,EAFD,yBAOIA,EAAOc,MAPX,2C,wBAeA,SAAeC,EAAtB,oC,4CAAO,WAAwBD,EAAME,GAA9B,iBAAA5E,EAAA,yDACE0E,EADF,wDAGCG,EAAU,CAAEH,KAAMA,GAElBE,IAAWC,EAAO,2BAAQA,GAAR,IAAiBD,UAAWA,KAL/C,SAOgBvB,EAAQlC,IAAI,CAC3BpB,IAAI,UAAD,OAAY+C,EAAZ,cACHpD,OAAQ,OACRE,KAAMmC,KAAKC,UAAU6C,KAVtB,cAOCjB,EAPD,yBAYIA,EAAOS,KAZX,4C,sBAmBA,SAAeS,EAAtB,sC,4CAAO,WAAsBC,EAAQL,EAAMR,GAApC,iBAAAlE,EAAA,yDACY+D,EAAQP,EAAOC,MAD3B,wDAGC7D,EAAO,CACPsE,QAASA,EACTV,OAAQA,EACRwB,QAAS,CACLD,GAEJL,KAAMA,GATP,SAYgBrB,EAAQlC,IAAI,CAC3BpB,IAAI,UAAD,OAAY+C,EAAZ,gBACHpD,OAAQ,OACRE,KAAMmC,KAAKC,UAAUpC,KACtBY,OAAM,SAAAC,GACL,OAAO,QAjBR,cAYCmD,EAZD,yBAmBIA,EAAOS,KAnBX,4C,sBAsBA,SAAeY,EAAtB,oC,4CAAO,WAA0BC,EAAMJ,GAAhC,eAAA9E,EAAA,sEACgBqD,EAAQlC,IAAI,CAC3BpB,IAAK,iBAAU+C,EAAV,oBAAgDoC,EACrDxF,OAAQ,QACRE,KAAMmC,KAAKC,UAAU,CACjBqC,IAAKS,MAEVtE,OAAM,SAAAC,GACL,OAAO,QARR,cACCmD,EADD,yBAUIA,GAVJ,4C,kCChMMuB,GAAb,kGAQI,SAAqBC,GACjB,OAAKA,GAAe,OAARA,GAAgBA,IAAQD,EAAYE,QATxD,0BAoBI,SAAoBD,GAChB,OAAKA,GAAe,OAARA,EAGDE,IAAOC,OAAOH,GAFd,OAtBnB,0BAiCI,SAAoBA,GAChB,OAAKA,GAAe,OAARA,EAGDE,IAAOE,OAAOJ,GAFd,OAnCnB,mBAmDI,SAAaA,EAAKK,GAEd,IAAIC,EAAMN,EAMV,IAJKM,GAAe,OAARA,IACRA,EAAM,IAGHA,EAAIC,WAAW,MAAQD,EAAIC,WAAW,WAAQD,EAAIC,WAAW,OAASD,EAAIC,WAAW,OACxFD,EAAMA,EAAIE,UAAU,GAMxB,MAHY,KAARF,IACAA,EAAMD,GAEHC,IAlEf,mBA6EI,SAAaN,EAAKK,GAEd,IAAIC,EAAMN,EAMV,IAJKM,GAAe,OAARA,IACRA,EAAM,IAGHA,EAAIG,SAAS,MAAQH,EAAIG,SAAS,WAAQH,EAAIG,SAAS,OAC1DH,EAAMA,EAAIE,UAAU,EAAGF,EAAII,SAAW,GAM1C,MAHY,KAARJ,IACAA,EAAMD,GAEHC,IA5Ff,kBAuGI,SAAYN,EAAKK,GAEb,IAAIC,EAAMN,EAKV,OAHAM,EAAMP,EAAYY,MAAML,EAAKD,KA3GrC,iCAiHI,SAA2BL,GAavB,OADAA,GADAA,GADAA,GAFAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAMA,EAAIY,eACAC,QAAQ,kHAAsC,MAC9CA,QAAQ,0EAA0B,MAClCA,QAAQ,kCAAc,MACtBA,QAAQ,kHAAsC,MAC9CA,QAAQ,4EAA0B,MAClCA,QAAQ,oCAAc,MACtBA,QAAQ,UAAM,MAEdA,QAAQ,sCAAuC,KAC/CA,QAAQ,wBAAyB,KACjCA,QAAQ,MAAO,OA7HjC,4BAiII,SAAsBb,EAAKc,GACvB,OAAId,EAAIU,OAASI,EACNd,EAAIe,MAAM,EAAGD,GAAO,MAEpBd,MArInB,KAAaD,GACFE,MAAQ,G,aCCNe,GAAb,kIASI,WAAoBhB,EAAKzF,GAAzB,iFACQwF,GAAYkB,cAAcjB,GADlC,uBAEQnE,QAAQC,IAAI,2BAFpB,mDAQ0ByC,EAAiByB,EAAKzF,GARhD,UAQQ2G,EARR,OASyBA,EAAUC,YATnC,wBAYYtF,QAAQC,IAAR,sCAA2CkE,EAA3C,MACAoB,uBAAoBC,KAApB,sCAAwDrB,EAAxD,MAbZ,oFAiBQoB,uBAAoBvF,QAAQyF,QAAQ,+BACpCzF,QAAQ0F,MAAM,+BAlBtB,kCAsBQnF,EAAQ8E,EAAU9E,MAClBoF,EAAe,IAAIC,IACnBC,EAAiB,GAxBzB,UA0BUC,QAAQC,IAAIxF,EAAMyF,IAAN,uCAAU,WAAOC,GAAP,eAAAlH,EAAA,0DACpB4G,EAAa7D,IAAImE,EAAKpD,MADF,wDAKxB8C,EAAaO,IAAID,EAAKpD,MALE,SAMEsC,EAAcgB,kBAAkBF,EAAKpD,MANvC,OAOF,QADlBuD,EANoB,UAQpBP,EAAc,sBAAOA,GAAP,CAAuBO,KARjB,2CAAV,wDA1BtB,iCAsCWP,GAtCX,0DATJ,+HAuDI,WAA+B3C,EAAUxE,GAAzC,0FAESwE,EAFT,wDAMIA,EAAWA,EAASxD,OANxB,SAOiCkD,EAAkBM,EAAUxE,GAP7D,UAOQ2H,EAPR,OAQQD,EAAgB,IAChBC,GAAqBnC,GAAYkB,cAAciB,EAAiBxI,SATxE,oBAUYyI,EAAgBD,EAAiBxI,QACjC0I,EAAgBlC,IAAOE,OAAO+B,IAInB,KADXE,EAAQD,EAAcE,QAAQtB,EAAcuB,kBAAmB,IAd3E,wBAgBY1G,QAAQC,IAAR,uBAA4BiD,EAA5B,iBAhBZ,kBAiBmB,MAjBnB,eAmBYyD,EAAaJ,EAAc5B,UAAU,EAAG6B,EAAQrB,EAAcuB,kBAAkB7B,QAChF+B,EAAiBL,EAAc5B,UAAU6B,EAAQrB,EAAcuB,kBAAkB7B,QAEjFrG,EAAU2G,EAAc0B,qBAAqBF,GAC7C9I,EAAUqG,GAAYxE,KAAKkH,GAC/BR,EAAa,2BAAQ5H,GAAR,IAAiBX,YAC9BuI,EAAa,2BAAQA,GAAR,IAAuBlD,SAAUA,IAzBtD,kBA2BekD,GA3Bf,QA6BQpG,QAAQC,IAAI,uBAAyBiD,GA7B7C,iCA+BW,MA/BX,4CAvDJ,2FA+FI,SAA4BiB,GAKxB,IAJA,IACI2C,EADEC,EAAQ,qBAGVvI,EAAU,GACmB,QAAzBsI,EAAIC,EAAMC,KAAK7C,KAAgB,CAC/B2C,EAAEN,QAAUO,EAAME,WAClBF,EAAME,YAGV,IAAIC,EAAYJ,EAAE,GAAGK,MAAM,KACvBC,EAAYlD,GAAYxE,KAAKwH,EAAU,IACvCG,EAAcnD,GAAYxE,KAAKwH,EAAU,IAE7C1I,EAAO,2BAAQA,GAAR,kBAAkB4I,EAAYC,IAEzC,OAAO7I,IA/Gf,uEAuHI,WAAgCqE,EAAMnE,GAAtC,yFACuBkE,EAAkBC,EAAMnE,GAD/C,WACQiE,EADR,SAEoB2E,MAAMC,QAAQ5E,IAA6B,IAAlBA,EAAOkC,OAFpD,yCAGe,IAHf,cAMQ2C,EAAe,GACnB7E,EAAO8E,SAAQ,SAAAxB,GACO,QAAdA,EAAKyB,MAAmBxD,GAAYkB,cAAca,EAAKzD,QACvDgF,EAAY,sBAAOA,GAAP,CAAqBvB,EAAKzD,WATlD,kBAaWgF,GAbX,2CAvHJ,gIA4II,WAAgC3E,GAAhC,yFACuBD,EAAkBC,GADzC,WACQF,EADR,SAGoB2E,MAAMC,QAAQ5E,IAA6B,IAAlBA,EAAOkC,OAHpD,yCAIe,IAJf,cAOQ8C,EAAe,CACfC,SAAU,IAGdjF,EAAO8E,SAAQ,SAAAxB,GACO,QAAdA,EAAKyB,MAAmBxD,GAAYkB,cAAca,EAAKzD,QACvDmF,EAAY,2BAAQA,GAAR,kBAAuB1B,EAAKzD,KAAO,CAAEqF,aAAa,MAGhD,SAAd5B,EAAKyB,MAAoBxD,GAAYkB,cAAca,EAAKzD,QACxDmF,EAAY,2BACLA,GADK,IACSC,SAAS,GAAD,mBAAMD,EAAaC,UAAnB,CAA6B,CAClDpF,KAAMyD,EAAKzD,KACXK,KAAMoD,EAAKpD,cApB/B,kBAyBW8E,GAzBX,2CA5IJ,8DCAA,SAASG,GAAT,GAA6B,IAAbtL,EAAY,EAAZA,SACZ,OACI,qBAAKC,UAAU,aAAf,SACKD,IDHA2I,GAEFuB,kBAAoB,MCkD/BoB,GAAK9K,KA5CL,YAKkC,IAAD,IALbY,cAKa,MALJ,CACzBV,MAAO,MACPW,QAAS,MACTf,GAAI,MACJgB,SAAU,OACmB,EAA9BiK,EAA8B,EAA9BA,iBAAkBC,EAAY,EAAZA,SACXrL,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAMzC,SAASsL,IACL,OAAID,IAAapK,EAAOd,GAY5B,OACI,sBACIH,MAAOsL,IAAatL,EAAMuL,gBAAkB,GAC5CzL,UAAWwL,IAAa,yCAA2C,kBACnEhL,QArBR,WACI8K,EAAiBnK,IAiBjB,UAKI,oBAAInB,UAAU,cAAd,SAA6BmB,EAAOV,QACpC,mBAAGT,UAAU,cAAb,SAA4BmB,EAAOC,UACnC,sBAAKpB,UAAU,uBAAf,UACI,sBAAMA,UAAU,cAAhB,mBAAkCmB,EAAOd,MACzC,sBACIH,MAAOA,EAAMI,WACbN,UAAU,cAFd,SAhBZ,SAA2B0L,GACvB,IAAIC,EAAcD,EAAQhB,MAAM,KAEhC,OADAiB,EAAcA,EAAYC,QAAO,SAAAC,GAAC,OAAKpE,GAAYkB,cAAckD,OAC9CC,MAekBC,CAAkB5K,EAAOE,mBAQvDgK,UC3CFW,GAAsB,SAACC,GAChC,MAAO,CACHhB,KAAM,oCACN9D,QAAS8E,ICdXC,GAAc/G,EADK,eACwB,MAuClCgH,GANJ,CACHC,cA/BJ,WACI,IAAIC,EAAUH,GAAYnI,SAI1B,OAHiBuI,OAAOC,KAAKF,GAASG,MAAK,SAAUlK,EAAGmK,GACpD,OAAOJ,EAAQI,GAAKJ,EAAQ/J,OA6BhCoK,UAxBJ,SAAmB/I,GACf,IAAI0I,EAAUH,GAAYnI,SAK1B,GAJIuI,OAAOC,KAAKF,GAASjE,QAAU,IAYvC,SAAuBiE,GACnB,IAAIM,EAAaL,OAAOC,KAAKF,GAASG,MAAK,SAAUlK,EAAGmK,GACpD,OAAOJ,EAAQ/J,GAAK+J,EAAQI,MAEhClJ,QAAQC,IAAImJ,EAAW,IACvBT,GAAYU,IAAID,EAAW,IAhBvBE,CAAcR,GAGdH,GAAY7G,IAAI1B,GAAM,CACtB,IAAIK,EAAQkI,GAAY5G,IAAI3B,GAC5BuI,GAAYzC,IAAI9F,IAAOK,QAEvBkI,GAAYzC,IAAI9F,EAAK,KCdjC,SAASmJ,KAEL,IAAMC,EAAgBC,IAAMC,OAAO,MAC7B/M,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAGnCgN,EAAWC,cACXlB,EAAmB9L,aAAY,SAAAC,GAAK,OAAIA,EAAMgN,WAAWnB,oBACzDoB,EAAYlN,aAAY,SAAAC,GAAK,OAAIA,EAAMgN,WAAWC,aAClD9B,EAAWpL,aAAY,SAAAC,GAAK,OAAIA,EAAMgN,WAAW7B,YAGvD,EAAwC+B,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACMC,EAAWV,iBAAO,MAClBW,EAAcX,iBAAO,MAiB3B,SAASY,EAAmBC,GACxBC,aAAaH,EAAYI,SAEzBjB,EAAciB,QAAU,IAAIC,gBAC5B,IAAIhM,EAAS8K,EAAciB,QAAQ/L,OACnC2L,EAAYI,QAAUE,YAAW,WACzBjM,EAAOkM,UAGXjB,EAASlB,GAAoB,KAzCf,oCA0CdoC,CAAWN,EAAIO,OAAOrK,UA1BL,KAhBH,4CA8CtB,WAA0BsK,GAA1B,iBAAAhM,EAAA,6DACIyK,EAAciB,QAAU,IAAIC,gBACxBhM,EAAS8K,EAAciB,QAAQ/L,OAEnCuL,GAAgB,GAJpB,SAKqC9E,GAAc6F,OAAOD,EAASrM,GALnE,QAKQuM,EALR,SAMgCA,EAAqBpG,OAAS,IACtD+D,GAAmBO,UAAU4B,GAC7BpB,EAASlB,GAAoBwC,KAEjChB,GAAgB,GAVpB,4CA9CsB,sBA2DtB,SAASlC,EAAiBnK,GACtB+L,EFtEmB,SAAC3B,GACxB,MAAO,CACHN,KAAM,4BACN9D,QAASoE,GEmEAkD,CAAYtN,EAAOd,KAC5B6M,EFhEoB,SAACG,GACzB,MAAO,CACHpC,KAAM,6BACN9D,QAASkG,GE6DAqB,CAAavN,IAuC1B,OAlFAwN,qBAAU,WACN5B,EAAciB,QAAU,IAAIC,gBAC5BN,EAASK,QAAQY,QAGjB,IAAIC,EAAmB1C,GAAmBC,gBAG1C,OAFAsB,EAAmBmB,GAEZ,WACHtL,QAAQC,IAAI,uBACZuJ,EAAciB,QAAQc,WAE3B,IAqEHvL,QAAQC,IAAI,4BAER,sBAAKxD,UAAU,kBAAf,UACI,eAAC,EAAOY,SAAR,WACI,uBACImO,KAAK,YACL7O,MAAOA,EAAM8O,WACbnI,IAAK8G,EACLsB,SAAU,SAACnB,GAAUD,EAAmBC,IACxC7C,KAAK,OACLjL,UAAU,qBACVkP,YAAY,uBAEhB,0BAAU7O,GAAG,YAAb,SACKoN,EAAgBlE,KAAI,SAACC,EAAMO,GAAP,OAAiB,wBAAoB/F,MAAOwF,GAAdO,QAEvD,qBAAK7J,MAAO,CAAEiP,UAAW,SAjD7B,qCAEQlD,EAAiB7D,OAAS,EACtB,cAAC,GAAD,UACK6D,EAAiB1C,KAAI,SAACC,EAAMO,GAAP,OAAiB,cAAC,GAAKxJ,KAAN,CAAWgL,SAAUA,EACxDD,iBAAkBA,EAElBnK,OAAQqI,GADHO,QAKb,qBAAK/J,UAAU,eAAeoP,MAAM,OAChCC,IAAI,kFACJC,IAAI,UAKZ/B,EACI,qBAAKvN,UAAU,wBAAf,SACI,qBAAKuP,OAAO,OACRrP,MAAO,CAAEsP,SAAU,WAAYC,IAAK,KACpCJ,IAAI,yFACJC,IAAI,kBAIZ,SAyBZ,eAAC,EAAOxO,aAAR,WACI,cAAC,EAAD,CAAQK,OAAQkM,IAChB,qBAAKrN,UAAU,0BAAf,SACI,qBAAKoP,MAAM,QACPC,IAAI,iFACJC,IAAI,wBAQbtC,WAAM0C,KAAK5C,I,MCxI1B,SAAS6C,GAAeC,EAAaC,GACjC,IAAIC,EAAa,GACjB,IAAK,IAAMC,KAAYH,EACkB,kBAA1BA,EAAYG,IAAuC,aAAbA,IAC7CD,EAAU,sBAAOA,GAAP,CAAmB,CACzB/J,KAAMgK,EACN3J,KAAK,GAAD,OAAKyJ,EAAL,YAAmBE,GACvB9E,KAAM,UAWlB,OANI2E,EAAYzE,UACZyE,EAAYzE,SAASH,SAAQ,SAAAxB,GACzBA,EAAI,2BAAQA,GAAR,IAAcyB,KAAM,SACxB6E,EAAU,sBAAOA,GAAP,CAAmBtG,OAG9BsG,EAMX,SAASE,GAAT,GAAqC,IAAbjQ,EAAY,EAAZA,SACpB,OACI,qBAAKC,UAAU,2BAAf,SACI,qBAAKA,UAAU,UAAUK,GAAG,KAA5B,SACKN,MA2EjB,SAASkQ,GAAT,GAA8E,IAAD,IAA9D9O,cAA8D,MAArD,CAAE4E,KAAM,GAAIK,KAAM,GAAI6E,KAAM,IAAyB,EAAnBiF,EAAmB,EAAnBA,gBAEhDnD,EAAgBC,IAAMC,OAAO,MAEnC,EAA4CD,IAAMM,SAAS,IAA3D,mBAAO6C,EAAP,KAAuBC,EAAvB,KACA,EAAoCpD,IAAMM,SAASnM,EAAOiF,MAA1D,mBAAOyJ,EAAP,KAAmBQ,EAAnB,KACA,EAAoCrD,IAAMM,UAAS,GAAnD,mBAAOgD,EAAP,KAAmBC,EAAnB,KACMC,EAAWxD,IAAMC,OAAO,CAAC9L,EAAOiF,OA2BtC,SAASqK,EAASrK,GACd,IAAI2D,EAAQyG,EAASxC,QAAQhE,QAAQ5D,GACjCsK,EAAUF,EAASxC,QAAQpC,QAAO,SAAAC,GAAC,OAAI2E,EAASxC,QAAQhE,QAAQ6B,IAAM9B,KAC1EyG,EAASxC,QAAU0C,EACnBL,EAAcjK,GACdmK,GAAc,GAEdxD,EAAciB,QAAU,IAAIC,gBAC5B,IAAIhM,EAAS8K,EAAciB,QAAQ/L,OACnCyG,GAAciI,mBAAmBd,GAAYrN,MAAK,SAAAN,GAC1CD,EAAOkM,UAGXiC,EAAkBlO,GAClBqO,GAAc,OACfzN,OAAM,SAAAC,GACLQ,QAAQC,IAAI,uBAERvB,EAAOkM,UAGXiC,EAAkB,IAClBG,GAAc,OAgDtB,OA/FAvD,IAAM2B,WAAU,WACZ5B,EAAciB,QAAU,IAAIC,gBAC5B,IAAIhM,EAAS8K,EAAciB,QAAQ/L,OAkBnC,OAjBAyG,GAAciI,mBAAmBd,GAAYrN,MAAK,SAAAN,GAC1CD,EAAOkM,UAIXiC,EAAkBlO,GAClBqO,GAAc,OACfzN,OAAM,SAAAC,GACLQ,QAAQC,IAAIT,GAERd,EAAOkM,UAGXiC,EAAkB,IAClBG,GAAc,OAGX,WACHxD,EAAciB,QAAQc,WAE3B,CAACe,IAyEA,qBAAI7P,UAAU,YAAd,UACI,oBAAIA,UAAU,UAAUQ,QAAS,kBAAMiQ,EAASD,EAASxC,QAAQwC,EAASxC,QAAQ5F,OAAS,KAA3F,SApBR,WACI,IAAIwI,EAAcJ,EAASxC,QAAQzE,KAAI,SAAAnD,GAAI,OAAsBA,EAavCsE,MAAM,KACboB,SAbnB,OACI,mCACK8E,EAAYrH,KAAI,SAACC,EAAMO,GAAP,OAAiB,sBAAM/J,UAAU,kBAE9CQ,QAAS,kBAAMiQ,EAASD,EAASxC,QAAQjE,KAFX,SAG7BP,GAFIO,QAeoF8G,KACjG,oBAAI7Q,UAAU,UAAd,SA1CR,WACI,IAAI8P,EAAaH,GAAeQ,EAAgBhP,EAAOiF,MAEvD,OAAIkK,EACQ,qBACJf,OAAO,OACPF,IAAI,yFACJC,IAAI,gBAILQ,EAAWvG,KAAI,SAACC,EAAMO,GAAP,OAAiB,cAACxJ,GAAD,CAEnCwF,KAAMyD,EAAKzD,KACXkF,KAAMzB,EAAKyB,KACX7E,KAAMoD,EAAKpD,KACX8J,gBAAiBA,EACjBY,iBAAkB,SAAC/K,GAAD,OAtB1B,SAA0BA,GACtByK,EAASxC,QAAT,sBAAuBwC,EAASxC,SAAhC,CAAyC6B,EAAa,IAAM9J,IAC5D0K,EAASZ,EAAa,IAAM9J,GAoBI+K,CAAiB/K,KALxCgE,MA+BAgH,QAUjB,SAASxQ,GAAKyQ,GACV,GAAmB,SAAfA,EAAM/F,KAAiB,CACvB,IAAIxK,EAAQuQ,EAAMjL,KAAKwC,QAAQ,MAAO,IACtC,OACI,mBACI/H,QAAS,kBAAMwQ,EAAMd,gBAAgBc,EAAM5K,OAC3C3F,MAAOA,EAFX,SAGKA,IAIb,GAAmB,QAAfuQ,EAAM/F,KACN,OAAQ,sBACJzK,QAAS,kBAAMwQ,EAAMF,iBAAiBE,EAAMjL,OAC5CtF,MAAM,GAFF,SAGHuQ,EAAMjL,OAKnBiK,GAAaiB,MA3Mb,SAAeD,GAEX,IAAMjE,EAAgBC,IAAMC,OAAO,MAEnC,EAAsCD,IAAMM,SAAS,IAArD,mBAAOsC,EAAP,KAAoBsB,EAApB,KA8CA,OA5CAlE,IAAM2B,WAAU,WACZ5B,EAAciB,QAAU,IAAIC,gBAC5B,IAAIhM,EAAS8K,EAAciB,QAAQ/L,OAUnC,OATAyG,GAAciI,mBAAmBK,EAAMjL,MAAMvD,MAAK,SAAAN,GAC1CD,EAAOkM,SAGX+C,EAAehP,MAChBY,OAAM,SAAAC,GACLQ,QAAQC,IAAIT,MAGT,WACHgK,EAAciB,QAAQc,WAE3B,CAACkC,EAAMjL,OA8BN,qCACI,sBAAK/F,UAAU,gBAAf,UACI,oBAAIA,UAAU,KAAd,SAAoBgR,EAAMjL,OA7BtC,WACI,IAAI+J,EAAaH,GAAeC,EAAaoB,EAAMjL,MAC/CoL,EAAUrB,EAAWlE,QAAO,SAAAC,GAAC,MAAe,QAAXA,EAAEZ,QACnCmG,EAAWtB,EAAWlE,QAAO,SAAAC,GAAC,MAAe,SAAXA,EAAEZ,QAExC,OACI,qCACKkG,EAAQ5H,KAAI,SAACC,EAAMO,GAAP,OAAiB,cAACkG,GAAD,CAC1BC,gBAAiBc,EAAMd,gBAEvB/O,OAAQqI,GADHO,MAIT,oBAAI/J,UAAU,YAAd,SACKoR,EAAS7H,KAAI,SAACC,EAAMO,GAAP,OAAiB,cAACxJ,GAAD,CAE3BwF,KAAMyD,EAAKzD,KACXkF,KAAMzB,EAAKyB,KACX7E,KAAMoD,EAAKpD,KACX8J,gBAAiBc,EAAMd,iBAJlBnG,WAeZgH,MAEL,qBAAK/Q,UAAU,oBAoJZgQ,U,MCrOR,SAASqB,KAGF,IAHSnP,EAGV,uDAHiB,CAC1BsE,QAAS,WACTpF,QAAS,gBACVqF,EAAU,uCACT,OAAOd,EAAazD,EAAMuE,GASvB,SAAe6K,KAAtB,gC,8CAAO,8CAAAhP,EAAA,6DAAsBJ,EAAtB,+BAA6B,CAChCsE,QAAS,WACTpF,QAAS,gBACVqF,EAHI,gCAMiBd,EAA0Bc,GAN3C,UAOa,QADZ8K,EAND,gEAQCC,EAAUD,EAAQ5K,IACtBzE,EAAKyE,IAAM6K,EATR,kBAUI7L,EAAsBzD,EAAMuE,IAVhC,4C,yBAiBA,SAASgL,GAAWhL,GACvB,OAAOiL,GAAK,OAAQjL,GAUjB,SAAeiL,KAAtB,gC,8CAAO,wDAAApP,EAAA,6DAAoBqP,EAApB,+BAA6B,OAAQvL,EAArC,uBAA2CwL,EAA3C,gCAEsBjM,EAAe,cAFrC,cAECkM,EAFD,gBAIclM,EAAgBkM,EAAe,mBAJ7C,cAIC7K,EAJD,QAMEgE,SAAQ,SAAUnE,GACb+K,IAAWnK,GAAYkB,cAAciJ,IAAa/K,EAAIT,OAASA,EAG7DS,EAAIT,OAASA,IAAMS,EAAIT,KAAOwL,GAFlC/K,EAAIiL,WAAY,EAKH,SAAbjL,EAAIoE,OACJpE,EAAIiL,WAAY,MAIxB9K,EAAOA,EAAK4E,QAAO,SAAAC,GAAC,OAAKA,EAAEiG,aAlBxB,UAoBkBnM,EAAiBqB,GApBnC,eAoBC+K,EApBD,OAsBCC,GAAeJ,GAAWnK,GAAYkB,cAAciJ,GAClD,UAAYxL,EACZ,QAAUA,EAAO,OAASwL,EAxB7B,UAyBgBjM,EAAekM,EAAcE,EAAUC,GAzBvD,eAyBC5K,EAzBD,iBA2BgBzB,EAAmBgM,EAAQvK,GA3B3C,eA2BClB,EA3BD,yBA4Bc,MAAVA,GA5BJ,4C,yBCrDQ,SAAS+L,GAAUjB,GAC9B,MAA0BhE,IAAMM,SAAS,MAAzC,mBAAO4E,EAAP,KAAcC,EAAd,KADqC,4CA6BrC,sBAAA7P,EAAA,0DAC8E,KAArE8P,OAAOC,QAAQ,yBAA2BrB,EAAM7P,OAAOsF,UADhE,iEAKUgL,GAAWT,EAAM7P,OAAOsF,UALlC,OAMIqC,uBAAoBC,KAAK,YACzBoJ,EAAS,CACLG,QAAS,QACTC,cAAe,QACfC,kBAAmB,MAEvBxB,EAAMyB,WAZV,4CA7BqC,sBA4CrC,OAzCAzF,IAAM2B,WAAU,WAIZ,OAHAwD,EAAS,CACLG,QAAStB,EAAMsB,UAEZ,eAER,CAACtB,EAAMsB,UAoCN,sBAAKpS,MAAOgS,EAAOlS,UAAU,mBAA7B,UACI,sBAAMQ,QAnCd,WACI2R,EAAS,CACLG,QAAS,QACTC,cAAe,QACfC,kBAAmB,MAEvBxB,EAAM0B,WA6B2B1S,UAAU,wBAAvC,uBACA,sBAAMQ,QA3Bd,WACI2R,EAAS,CACLG,QAAS,QACTC,cAAe,QACfC,kBAAmB,MAEvBxB,EAAM2B,OAAO3B,EAAM7P,OAAOsF,WAqBCzG,UAAU,yBAAjC,sBACA,sBAAMQ,QAhDuB,2CAgDJR,UAAU,2BAAnC,wBACCgR,EAAM7P,OAAS,cAAC,EAAD,CAAQA,OAAQ6P,EAAM7P,SAAa+Q,IAAUA,EAAMK,cAAgB,qBAC/EvS,UAAU,iBACVuP,OAAO,OACPF,IAAI,yFACJC,IAAI,gBACH,MCnDF,SAASsD,GAAQ5B,GAE5B,IAAMjE,EAAgBC,IAAMC,OAAO,MAC7BC,EAAWC,cAEXpC,EAAe5K,aAAY,SAAAC,GAAK,OAAIA,EAAMyS,YAAY9H,gBAC5D,EAA4CiC,IAAMM,SAAS,QAA3D,mBAAOwF,EAAP,KAAuBC,EAAvB,KACA,EAAgC/F,IAAMM,SAAS,MAA/C,mBAAO0F,EAAP,KAAiBC,EAAjB,KAqBA,SAAS/C,EAAgB9J,GACrB2M,EAAkB,SAClBrK,GAAcgB,kBAAkBtD,GAAM5D,MAAK,SAAAN,GACvC+Q,EAAY/Q,MAWpB,OAjCA8K,IAAM2B,WAAU,WACZ5B,EAAciB,QAAU,IAAIC,gBAC5B,IAAIhM,EAAS8K,EAAciB,QAAQ/L,OAWnC,OATAyG,GAAcwK,mBAAmB,IAAI1Q,MAAK,SAAAN,GAClCD,EAAOkM,SAGXjB,EC1BmB,SAACnC,GAC5B,MAAO,CACHE,KAAM,oBACN9D,QAAS4D,GDuBIoI,CAAgBjR,OAC1BY,OAAM,SAAAmG,GACL1F,QAAQC,IAAIyF,MAGT,WACHgK,EAAY,MACZlG,EAAciB,QAAQc,WAE3B,CAAC5B,IAiBA,qBAAKlN,UAAU,kBAAf,SACI,eAAC,EAAOe,cAAR,WACI,cAAC,GAAD,UACKgK,EAAaxB,KAAI,SAAC6J,EAAcrJ,GAAf,OAAyB,cAAC,GAAakH,MAAd,CACvCf,gBAAiBA,EAEjBnK,KAAMqN,GADDrJ,QAIb,qBAAK/J,UAAU,yBAAf,SACI,cAAC,GAAD,CACIyS,SAAU,kBAAMM,EAAkB,SAClCJ,OAAQ,SAAClM,GAAD,OAAcuK,EAAM2B,OAAOlM,IACnCiM,QArBpB,WACIxE,YAAW,WACP6E,EAAkB,UACnB,KACHE,EAAY,OAkBI9R,OAAQ6R,EACRV,QAASQ,W,iCE/DlB,SAASO,GAAcrC,GAElC,IAAMjE,EAAgBC,IAAMC,OAAO,MAC7B/M,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAEnCoT,EAAYtG,IAAMC,OAAO,IACzBsG,EAAevG,IAAMC,OAAO,IAClC,EAAwCD,IAAMM,SAAS,IAAvD,mBAAOvC,EAAP,KAAqBoI,EAArB,KACA,EAA4CnG,IAAMM,SAAS,IAA3D,mBAAOkG,EAAP,KAAuBC,EAAvB,KACA,EAAoCzG,IAAMM,UAAS,GAAnD,mBAAOoG,EAAP,KAAmBC,EAAnB,KACMC,EAAa,WACf,IAAIvS,EAAW,GAIf,OAHIkS,EAAavF,SAAWuF,EAAavF,QAAQ5F,OAAS,IACtD/G,EAAWkS,EAAavF,QAAQzE,KAAI,SAACC,GAAD,OAAUA,EAAKzD,QAAM8N,KAAK,KAE3D,CAAExS,SAAUA,EAAUZ,MAAO6S,EAAUtF,QAAQhK,QAfjB,SA2D1B8P,EA3D0B,8EA2DzC,WAA+B/N,GAA/B,mCAAAzD,EAAA,yDAAqCyR,EAArC,+BAAgD,aAC/B,MAAThO,IAAgBA,EAAKoC,SAAS,KADtC,wBAGY6L,EAAcR,EAAejK,KAAI,SAACC,GAAD,OAAUA,EAAKzD,QAAM8N,KAAK,IAC3DjC,EAAU,CACV7L,KAAMA,EACNK,KAAM4N,EAAcjO,EACpBkO,QAAS,IAEbV,EAAavF,QAAb,sBAA2BuF,EAAavF,SAAxC,CAAiD4D,IACjD6B,EAAkBF,EAAavF,SAC/B+F,GAAS,GAITJ,GAAc,GACd5G,EAAciB,QAAU,IAAIC,gBACxBhM,EAAS8K,EAAciB,QAAQ/L,OAjB3C,UAkB4BiS,EAAmBjS,GAlB/C,WAkBYyO,EAlBZ,QAoBYzO,EAAOkM,QApBnB,mDAqBQoF,EAAavF,QAAU0C,EACvB+C,EAAkB/C,GAClBiD,GAAc,GAvBtB,wBAyBQI,IAzBR,4CA3DyC,iCAwF1BG,EAxF0B,8EAwFzC,WAAkCjS,GAAlC,mBAAAK,EAAA,6DACQ6R,EAAWZ,EAAavF,QAAQoG,IAAI,GAD5C,SAG4B1L,GAAcwK,mBAAmBiB,EAAS/N,KAAMnE,GAH5E,cAGQoS,EAHR,QAKQ3D,EALR,YAKsB6C,EAAavF,UACvBlC,MAERqI,EAAQ,2BAAQA,GAAR,IAAkBF,QAASI,IACnC3D,EAAQ4D,KAAKH,GATjB,kBAUWzD,GAVX,4CAxFyC,sBA2KzC,OAzJA1D,IAAM2B,WAAU,WACZ,SAAS4F,EAAYxF,GACjB,GAAoB,IAAhBA,EAAK3G,OAAc,MAAO,GAE9B,IAAIhC,EAAO,GAIX,OAHA2I,EAAK/D,SAAQ,SAAAwJ,GACTpO,GAAQoO,EAAGzO,QAERK,EAGXkN,EAAUtF,QAAQhK,MAAQgN,EAAMyD,aAEhC,IAAIC,EAAY1D,EAAM2D,gBAAgBjK,MAAM,KAC5CgK,EAAYA,EAAU9I,QAAO,SAAAC,GAAC,MAAU,KAANA,KAClC,IAAI+I,EAAmB,GACvBF,EAAU1J,SAAQ,SAAA6J,GACdA,EAAU,CAAE9O,KAAM8O,EAAU,KAC5BA,EAAO,2BAAQA,GAAR,IAAiBzO,KAAMmO,EAAYK,GAAoBC,EAAQ9O,OACtE8O,EAAO,2BAAQA,GAAR,IAAiBZ,QAAS,KACjCW,EAAiBN,KAAKO,MAE1BtB,EAAavF,QAAU4G,EACvBnB,EAAkBmB,GAGlB7H,EAAciB,QAAU,IAAIC,gBAC5B,IAAIhM,EAAS8K,EAAciB,QAAQ/L,OASnC,OARAyG,GAAcwK,mBAAmB,GAAIjR,GAAQO,MAAK,SAACN,GAE3CD,EAAOkM,SACXgF,EAAgB,YAAIjR,OACrBY,OAAM,SAAAC,GACLQ,QAAQC,IAAIT,MAGT,WACHgK,EAAciB,QAAQc,WAE3B,CAACkC,EAAMyD,aAAczD,EAAM2D,kBAiH9BpR,QAAQC,IAAI,4BAER,sBAAKtD,MAAO,CAAE4U,aAAc,GAAIvF,OAAQ,IAAxC,UACI,sBAAKvP,UAAU,oBAAf,UACI,sBAAMA,UAAU,2BAAhB,eAECwT,EAAejK,KAAI,SAACC,EAAMO,GAAP,OAChB,sBAAM/J,UAAU,2BAAhB,SACKwJ,EAAKzD,MADsCgE,MAKpD,uBACI7J,MAAOA,EAAM8O,WACbE,YAAY,0CACZrI,IAAKyM,EACLtT,UAAU,mBACV+U,QAAS,SAACjH,GAAD,OAtFzB,SAAwBA,GAEpB,GAA8B,MADpBA,EAAIkH,OAASlH,EAAImH,SAAWnH,EAAIoH,WACN3B,EAAavF,QAAQ5F,OAAS,EAAG,CACjE,IAAI+L,EAAWZ,EAAavF,QAAQoG,IAAI,GACxCtG,EAAIO,OAAOrK,MAAQmQ,EAASpO,KAAKmC,UAAU,EAAGiM,EAASpO,KAAKqC,OAAS,GACrE,IAAIsI,EAAO,YAAO6C,EAAavF,SAC/B0C,EAAQ5E,MACRyH,EAAavF,QAAU0C,EACvB+C,EAAkBF,EAAavF,cAE/B8F,EAAgBhG,EAAIO,OAAOrK,OAAO,WAA2B,0DAC5C8J,EAAIO,OAAOrK,MAAQ,IAChCgN,EAAM/B,SAAS2E,QAIvB9F,EAAIO,OAAOO,QAsEmBuG,CAAerH,SAGzC,qBAAK9N,UAAU,mBAAmBE,MAAO,CAAEiP,UAAW,EAAGK,SAAU,YAAnE,SA9DR,WACI,IAAI4F,EAAiB,GACjBjB,EAAWX,EAAeY,IAAI,GAOlC,GALIgB,EADA5B,EAAepL,OAAS,EACV,YAAO+L,EAASF,SAEblJ,EAGjB2I,EACA,OACI,qBAAKxT,MAAO,CAAEsP,SAAU,WAAYC,IAAK,EAAG4F,QAAS,EAAGC,MAAO,WAA/D,SACI,qBAAK/F,OAAO,OACRF,IAAI,yFACJC,IAAI,kBAMpB,GAA8B,IAA1B8F,EAAehN,OAAc,CAC7B,IAAIrC,EAAO,QAKX,OAJIoO,GAAYA,EAASpO,OACrBA,EAAO,OAASoO,EAASpO,MAIzB,sBAAK7F,MAAO,CAAEsP,SAAU,WAAYC,IAAK,EAAG4F,QAAS,EAAGC,MAAO,WAA/D,8BAA8FvP,KAItG,OAAOqP,EAAe7L,KAAI,SAACC,EAAMO,GAAP,OACtB,sBACIvJ,QAAS,kBAxCjBsT,EAwCyCtK,EAxCnB,KAAK,WACvBwH,EAAM/B,SAAS2E,aAGnBN,EAAUtF,QAAQY,SAqCV5O,UAAU,qBAFd,SAKKwJ,GAFIO,MA4BJwL,Q,OCtLF,SAASC,GAAUxE,GAE9B,IAAMjE,EAAgBC,IAAMC,OAAO,MAE7BwI,EAAW,IAAIC,KACrB,EAA8BpI,mBAAS,IAAvC,mBAAOlM,EAAP,KAAgBuU,EAAhB,KACA,EAAwCrI,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACM/M,EAAQwM,iBAAO,IACf5L,EAAW4L,iBAAO,IAGhB2I,EAAiB5E,EAAjB4E,aACAC,EAAyBD,EAAzBC,UAAWC,EAAcF,EAAdE,UACbC,GAAaF,EACbG,EAAa/I,iBAAO,CACtBxM,MAAO,KACPY,SAAU,KACVD,QAAS,OAGPlB,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SApBJ,4CAyErC,oCAAAoC,EAAA,yDACgD,KAAxCmF,GAAYxE,KAAKxC,EAAMuN,QAAS,IADxC,uBAEQlF,uBAAoBG,MAAM,yBAFlC,6BAMmD,KAA3CxB,GAAYxE,KAAK5B,EAAS2M,QAAS,IAN3C,uBAOQlF,uBAAoBG,MAAM,6BAPlC,+BAW0C,KAAlCxB,GAAYxE,KAAK7B,EAAS,KAAcqG,GAAYxE,KAAK7B,EAAS,IAAIgH,OAAS,IAXvF,uBAYQU,uBAAoBG,MAAM,6CAZlC,0BAkBQ5I,GAAK,IAAIkE,MAAO0R,UAChBC,EAA8DzV,EAAMuN,QAExEvH,GADIA,EApBR,UAoBsBpF,EAAS2M,QApB/B,YAoB0CvG,GAAY0O,eAAeD,EAAU,IApB/E,QAqBwBlT,WAAW,KAAM,KAGjCoT,EAAc,GAClBA,GAAW,QACXA,GAAW,cAAW/V,EAAX,MACX+V,GAAW,iBAAc3V,EAAMuN,QAApB,MACXoI,GAAW,oBAAiB/U,EAAS2M,QAA1B,MACXoI,GAAW,UACXA,GAAehV,EAEXiV,EAAYN,EACV,eAAiB1U,EAAS2M,QAAU,IAAMvG,GAAY0O,eAAeD,EAAU,IAC/E,eAAiBL,EAOvB5R,EALW,CACPuC,QAAS6P,EACTjV,QAASqG,GAAY6O,aAAaF,IAG1B3P,GAzChB,6CAzEqC,+BAqHtBxC,EArHsB,gFAqHrC,WAAqB/B,EAAMuE,GAA3B,eAAAnE,EAAA,yDACIkL,GAAgB,IACZuI,EAFR,gCAG6BQ,GAAWrU,EAAMuE,GAH9C,QAGYhE,EAHZ,SAIwBA,EAAS2E,SACrB0B,uBAAoBC,KAAKtG,EAAS2E,OAAOoP,SAAU,WAAY,KAAM,WACjEpE,OAAOqE,KAAKhU,EAAS2E,OAAOoP,SAAU,UAAU5H,WACjD,GACHpB,GAAgB,IAR5B,0BAWY/M,EAAMuN,UAAYgI,EAAWhI,QAAQvN,OAClCY,EAAS2M,UAAYgI,EAAWhI,QAAQ3M,SAZvD,wBAaYkC,QAAQC,IAAI,uBAbxB,UAckB+S,GAAS,OAAQV,EAAWpP,GAd9C,WAiBYrF,IAAY4U,EAAWhI,QAAQ5M,QAjB3C,wBAkBYmC,QAAQC,IAAI,0BAlBxB,UAmBkB+S,GAAWrU,EAAMuE,GAAU3D,OAAM,SAAAC,GACnC+F,uBAAoBG,MAAMlG,EAAM,OApBhD,QAuBQyK,GAAgB,GAChB1E,uBAAoBC,KAAK,WAxBjC,6CArHqC,sBAsJrC,OAhIAiE,IAAM2B,WAAU,WACZ,IAAIoH,EAAJ,CAIAD,IACA/I,EAAciB,QAAU,IAAIC,gBAC5B,IAAIhM,EAAS8K,EAAciB,QAAQ/L,OAcnC,OAZAyG,GAAcgB,kBAAkBmM,EAAW5T,GAAQO,MAAK,SAAAN,GAC/CA,IACLzB,EAAMuN,QAAU9L,EAAKzB,MACrBY,EAAS2M,QAAU9L,EAAKb,SACxB2U,EAAWhI,QAAU,CACjBvN,MAAOyB,EAAKzB,MACZY,SAAUa,EAAKb,SACf2U,WAAY9T,EAAKd,SAErBuU,EAAWzT,EAAKd,aAGb,WACH2L,EAAciB,QAAQc,YAE3B,CAACgH,EAAWD,EAAWE,IAyGtB,qBAAK/V,UAAU,kBAAf,SACI,eAAC,EAAOe,cAAR,WACI,qCACI,qBAAKb,MAAO,CAAEkP,MAAO,MAAOG,OAAQ,GAAImH,MAAO,QAA/C,SACI,cAACrD,GAAD,CAAeoB,aAAchU,EAAMuN,QAAS2G,gBAAiBtT,EAAS2M,QAASiB,SAVnG,WAAqE,IAAvC9N,EAAsC,uDAA7B,CAAEE,SAAU,GAAIZ,MAAO,IAC1DA,EAAMuN,QAAU7M,EAAOV,MACvBY,EAAS2M,QAAU7M,EAAOE,cAWd,wBACInB,MAAK,2BAAOA,EAAMyW,QAAb,IAAqBvH,MAAO,KAAMG,OAAQ,OAAQmH,MAAO,UAC9D1W,UAAU,qBACVQ,QAjKiB,2CA8JrB,SAIKuV,EAAY,SAAW,cAGhC,qBAAK7V,MAAO,CAAEiP,UAAW,SACzB,cAAC,KAAD,CACInL,MAAO5C,EACPwV,cAxHhB,SAA2BC,EAAM9C,GAC7B,IAAM+C,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACZ,IAUMC,EAVyB,SAACC,GAK5B,IAJA,IAAIC,EAAMD,EAAQxM,MAAM,KAAM0M,EAAOD,EAAI,GAAGE,MAAM,WAAW,GACzDC,EAAOC,KAAKJ,EAAI,IAChBK,EAAIF,EAAKlP,OACTqP,EAAQ,IAAIC,WAAWF,GACpBA,KACHC,EAAMD,GAAKF,EAAKK,WAAWH,GAE/B,OAAO,IAAII,KAAK,CAACH,GAAQ,CAAExM,KAAMmM,IAExBS,CAAuBf,EAAO5Q,QAC3C3C,QAAQC,IAAIyT,GACZ/I,YAAW,WACP6F,EAAS,gEACV,MAEP+C,EAAOgB,cAAcjB,IAsGT3W,MAAO,CAAEqP,OAAQ,qBAAsBH,MAAO,QAC9C2I,WAAY,SAAAC,GAAI,OAAIvC,EAASwC,OAAOD,IACpC/I,SAAU,cAAGiJ,KAAH,IAASF,EAAT,EAASA,KAAT,OAAoBrC,EAAWqC,MAIzCzK,EACI,qBAAKvN,UAAU,iBAAf,SACI,qBAAKuP,OAAO,OACRF,IAAI,yFACJC,IAAI,kBAIZ,Q,cC7LT,SAAS6I,KACpB,IAAMC,EAAqBpL,IAAMC,OAAO,MAClCoL,EAAoBrL,IAAMC,OAAO,MACjCqL,EAAsBtL,IAAMC,OAAO,MACnCsL,EAAiBvL,IAAMC,OAAO,MAC9BuL,EAAgBxL,IAAMC,OAAO,MAC7BwL,EAAazL,IAAMC,OAAO,MAG1BhI,EAAQ+H,IAAMC,OAAO9H,EADT,mBAGZjF,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAqCzC,OAnCA8M,IAAM2B,WAAU,WAaZ,OAZI1J,EAAM+I,QAAQ3I,IAAI,mBAClB+S,EAAmBpK,QAAQhK,MAAQiB,EAAM+I,QAAQ1I,IAAI,kBACrDL,EAAM+I,QAAQ3I,IAAI,eAClBgT,EAAkBrK,QAAQhK,MAAQiB,EAAM+I,QAAQ1I,IAAI,cACpDL,EAAM+I,QAAQ3I,IAAI,oBAClBiT,EAAoBtK,QAAQhK,MAAQiB,EAAM+I,QAAQ1I,IAAI,mBACtDL,EAAM+I,QAAQ3I,IAAI,eAClBkT,EAAevK,QAAQhK,MAAQiB,EAAM+I,QAAQ1I,IAAI,cACjDL,EAAM+I,QAAQ3I,IAAI,cAClBmT,EAAcxK,QAAQhK,MAAQiB,EAAM+I,QAAQ1I,IAAI,aAChDL,EAAM+I,QAAQ3I,IAAI,WAClBoT,EAAWzK,QAAQhK,MAAQiB,EAAM+I,QAAQ1I,IAAI,UAC1C,eACR,IAsBC,qBAAKtF,UAAU,kBAAf,SACI,eAAC,EAAOe,cAAR,WACI,oBAAIf,UAAU,sBAAd,2BACA,uBAAO6G,IAAKuR,EAAoBpY,UAAU,uBAAuBkP,YAAY,yBAC7E,sBAAMlP,UAAU,gBAAhB,sDACA,uBACA,uBAAO6G,IAAKwR,EAAmBrY,UAAU,uBAAuBkP,YAAY,uBAC5E,sBAAMlP,UAAU,gBAAhB,mBACA,uBACA,uBAAO6G,IAAKyR,EAAqBtY,UAAU,uBAAuBkP,YAAY,4BAC9E,sBAAMlP,UAAU,gBAAhB,kBAEA,oBAAIA,UAAU,sBAAd,oCACA,uBAAO6G,IAAK0R,EAAgBvY,UAAU,uBAAuBkP,YAAY,0CACzE,sBAAMlP,UAAU,gBAAhB,sDACA,uBACA,uBAAO6G,IAAK2R,EAAexY,UAAU,uBAAuBkP,YAAY,uBACxE,sBAAMlP,UAAU,gBAAhB,wBACA,uBACA,uBAAO6G,IAAK4R,EAAYzY,UAAU,uBAAuBkP,YAAY,aACrE,sBAAMlP,UAAU,gBAAhB,2BACA,uBACA,wBAAQE,MAAOA,EAAMyW,OAAQnW,QAzCzC,YACoD,KAA3C4R,OAAOC,QAAQ,0BAGpBpN,EAAM+I,QAAQvE,IAAI,gBAAiB2O,EAAmBpK,QAAQhK,OAC9DiB,EAAM+I,QAAQvE,IAAI,YAAa4O,EAAkBrK,QAAQhK,OACzDiB,EAAM+I,QAAQvE,IAAI,iBAAkB6O,EAAoBtK,QAAQhK,OAChEiB,EAAM+I,QAAQvE,IAAI,YAAa8O,EAAevK,QAAQhK,OACtDiB,EAAM+I,QAAQvE,IAAI,WAAY+O,EAAcxK,QAAQhK,OACpDiB,EAAM+I,QAAQvE,IAAI,QAASgP,EAAWzK,QAAQhK,OAE9C8E,uBAAoBC,KAAK,6BAEzBmF,YAAW,WACPkE,OAAOsG,SAASC,WACjB,OA0BuD3Y,UAAU,wBAA5D,uB,OCzED,SAAS4Y,KACpB,IAAM1L,EAAWC,cAEjB,SAAS0L,EAAYvD,GAEjB,OAAQA,GACJ,IAAK,SAEDpI,ECZL,CACHjC,KAAM,2BDYE,MACJ,IAAK,OAEDiC,ECVL,CACHjC,KAAM,0BDgBV,OACI,sBAAKjL,UAAU,oCAAf,UACI,sBAAMQ,QAAS,kBAAMqY,EAAY,aACjC,sBAAMrY,QAAS,kBAAMqY,EAAY,cEmE9BC,OAnFf,WACI,IAAMC,EAAW,CAAC,SAAU,OAAQ,SAEpC,EAAwC/L,IAAMM,SAASyL,EAAS,IAAhE,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAiBlM,IAAMC,OAAO,MAC9BkM,EAAWnM,IAAMC,OAAO,MAKxBhI,EAAQ+H,IAAMC,OAAO9H,EADT,mBAOlB,SAASiU,EAAgBC,IAVC,SAACA,GAAUH,EAAelL,QAAUqL,EAW1DC,CAAkBD,GAElBJ,EAAgBF,EAAS,IAG7B,SAASQ,EAAW9S,GAChB0S,EAASnL,QAAUvH,EACnBwS,EAAgBF,EAAS,IAZ7B/L,IAAM2B,WAAU,cAEb,IAaH,IAAMiH,EAAe,CACjBC,UAAWsD,EAASnL,QACpB8H,UAAW,WACPqD,EAASnL,QAAU,OAwB3B,OACI,eAAC,EAAD,WACI,eAAC,EAAO/N,OAAR,WACI,cAAC,EAAOA,OAAOM,KAAf,CAEIG,SAAUsY,EACVxY,QAAS,SAACC,GAAD,OAAWwY,EAAgBxY,IACpCA,MAAM,YAHF,YAMPsY,EAASxP,KAAI,SAAAC,GAAI,MAAa,YAATA,EAClB,cAAC,EAAOvJ,OAAOM,KAAf,CAEIG,SAAUsY,EACVxY,QAAS,SAACC,GAAD,OAAWwY,EAAgBxY,IACpCA,MAAO+I,GAHFA,GAKT,SAGR,cAAC,EAAOxI,YAAR,UAxCR,WACI,IAAI8C,EAAQmB,EAAM+I,QAAQjK,SAC1B,GAAIkB,EAAM+I,QAAQrJ,aAA6C,IAA9B2H,OAAOC,KAAKzI,GAAOsE,OAChD,OAAO,cAAC,GAAD,IAGX,OAAQ4Q,GACJ,IAAK,SACD,OAAO,cAAC,GAAD,CAAgBQ,YAAaN,EAAelL,UACvD,IAAK,OACD,OAAO,cAAC4E,GAAD,CAASD,OAAQ4G,IAC5B,IAAK,QACD,OAAO,cAAC/D,GAAD,CAAWI,aAAcA,EAAc6D,aAAcL,IAChE,IAAK,WACD,OAAO,cAAC,GAAD,IACX,QACI,OAAO,cAAC,GAAD,KAyBNM,KAEL,cAAC,yBAAD,IACA,cAAC,GAAD,QC7EGC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrX,MAAK,YAAkD,IAA/CsX,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCPVO,GAAY,CAEZpP,aAAc,GAEdqP,iBAAkB,IAiBPC,GAdQ,WAAgC,IAA/Bja,EAA8B,uDAAtB+Z,GAAWG,EAAW,uCAClD,OAAQA,EAAOrP,MACX,IAAK,oBACD,IAAIsP,EAAe,YAAOD,EAAOnT,SACjC,OAAO,2BAAK/G,GAAZ,IAAmB2K,aAAcwP,IAErC,IAAK,4BACD,IAAIC,EAAmB,eAAQF,EAAOnT,SACtC,OAAO,2BAAK/G,GAAZ,IAAmBga,iBAAkBI,IAEzC,QACI,OAAOpa,IClBf+Z,GAAY,CACZ9M,UAAW,GACXpB,iBAAkB,GAClBV,SAAU,KACVkP,cAAe,IAmBJC,GAhBO,WAAgC,IAA/Bta,EAA8B,uDAAtB+Z,GAAWG,EAAW,uCACjD,OAAQA,EAAOrP,MACX,IAAK,4BACD,OAAO,2BAAK7K,GAAZ,IAAmBmL,SAAU+O,EAAOnT,UAExC,IAAK,6BACD,OAAO,2BAAK/G,GAAZ,IAAmBiN,UAAWiN,EAAOnT,UAEzC,IAAK,oCACD,IAAI8E,EAAgB,YAAOqO,EAAOnT,SAClC,OAAO,2BAAK/G,GAAZ,IAAmB6L,iBAAkBA,IAEzC,QACI,OAAO7L,ICpBbua,GAAc,CAChBra,WAAY,CACRsa,gBAAiB,UACjBC,gBAAiB,oDAErBla,aAAc,CACVma,WAAY,UACZxF,MAAO,mBAEXzU,eAAgB,CACZ+Z,gBAAiB,WAErB5L,WAAY,CACR+L,OAAQ,oBAEZtP,gBAAiB,CACbsP,OAAQ,+BACRC,UAAW,sCAEfrE,OAAQ,CACJiE,gBAAiB,UACjBtF,MAAO,QAEX2F,MAAO,CACHC,QAAS,OACTH,OAAQ,qBAIVI,GAAY,CACd7a,WAAY,CACRwa,WAAY,4FAEhBna,aAAc,CACVma,WAAY,UACZxF,MAAO,mBAEXzU,eAAgB,CACZ+Z,gBAAiB,WAErB5L,WAAY,CACR+L,OAAQ,qBAEZtP,gBAAiB,CACbsP,OAAQ,oBACRC,UAAW,2BAEfrE,OAAQ,CACJiE,gBAAiB,UACjBtF,MAAO,QAEX2F,MAAO,CACHC,QAAS,OACTH,OAAQ,qBAgBDK,GAZM,WAAgC,IAA/Bhb,EAA8B,uDAAtB+a,GAAWb,EAAW,uCAChD,OAAQA,EAAOrP,MACX,IAAK,yBACD,OAAO0P,GAEX,IAAK,uBACD,OAAOQ,GAEX,QACI,OAAO/a,ICxDJib,GALKC,aAAgB,CAChCpb,MAAOkb,GACPvI,YAAawH,GACbjN,WAAYsN,KCJDzW,GADDsX,aAAYF,ICK1BG,IAASvD,OACP,cAAC,IAAD,CAAUhU,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFwX,SAASC,eAAe,SAM1B/B,M","file":"static/js/main.f9122d9a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport \"./Layout.css\";\r\n\r\nconst Layout = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_grid-container\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Header = ({ children }) => {\r\n    const style = useSelector(state => state.style);\r\n    return (\r\n        <div className=\"pg_mm_header\" id=\"pg_mm_header-menu\">\r\n            <ul style={style.headerMenu}>\r\n                {children}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst HeaderItem = ({ onClick, title, selected }) => {\r\n    const style = useSelector(state => state.style);\r\n\r\n    if (title === \"Settings\") {\r\n        return <p onClick={() => onClick(title)} className='pg_mm_settings_menu_item unselectable'>⚙</p>\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <span\r\n                className=\"unselectable\"\r\n                style={selected === title ? style.menuSelected : {}}\r\n                onClick={() => onClick(title)}>\r\n                {title}\r\n            </span>\r\n        </li>\r\n    );\r\n}\r\n\r\nHeader.Item = HeaderItem;\r\n\r\nconst SiderBar = ({ children }) => {\r\n    const style = useSelector(state => state.style);\r\n    return (\r\n        <div\r\n            style={style.leftBackground}\r\n            className=\"pg_mm_left pg_mm_scroll\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst RightContent = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_right pg_mm_scroll\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MiddleContent = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_mid pg_mm_scroll\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst FullContent = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_content_full\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Fooder = () => {\r\n\r\n}\r\n\r\nLayout.Header = Header;\r\nLayout.SiderBar = SiderBar;\r\nLayout.RightContent = RightContent;\r\nLayout.MiddleContent = MiddleContent;\r\nLayout.FullContent = FullContent;\r\nLayout.Fooder = Fooder;\r\nexport default Layout;\r\n","import React from 'react'\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport \"./Viewer.css\";\r\n\r\nexport default function Viewer({ source = {\r\n    title: \"n/a\",\r\n    content: \"n/a\",\r\n    id: \"n/a\",\r\n    category: \"n/a\"\r\n} }) {\r\n    return (\r\n        <section className=\"section sec-html visible\">\r\n            <div className=\"section-container html-wrap\">\r\n                <div className=\"custom-html-style\">\r\n                    <h2 style={{ margin: '5px 0' }}>{source.title}</h2>\r\n                    {source.title ? <hr style={{ margin: '10px 0' }} /> : ''}\r\n                    <div className='pg_mm_view_content'>\r\n                        <ReactMarkdown children={source.content} remarkPlugins={[remarkGfm]} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","export const RequestAPI = (function () {\r\n    let baseUrl = null;\r\n    let timeout = 10000;\r\n    let headers = {};\r\n\r\n    function makeRequestConfig(inp) {\r\n        if (!inp) return {};\r\n\r\n        let configs = {\r\n            headers: headers,\r\n            method: inp.method\r\n        }\r\n\r\n        if (inp.signal) {\r\n            configs = { ...configs, signal: inp.signal };\r\n        }\r\n\r\n        if (inp.data) {\r\n            configs = { ...configs, body: inp.data };\r\n        }\r\n        return configs;\r\n    }\r\n\r\n    async function sendRequest(url, configs) {\r\n        let json = await fetch(url, configs, timeout).then(function (response) {\r\n            if (!response.ok) {\r\n                throw new Error(response.status);\r\n            } else {\r\n                return response.json();\r\n            }\r\n        }).catch(err => {\r\n            throw new Error(err);\r\n        });\r\n        return json;\r\n    }\r\n\r\n    function config(configs = { base_url: \"\", timeout: 10000, in_headers: {} }) {\r\n        baseUrl = configs.base_url;\r\n        timeout = configs.timeout;\r\n        headers = configs.in_headers;\r\n\r\n        console.log(\"Request config \", baseUrl, timeout);\r\n    }\r\n\r\n    async function request(inp) {\r\n        // Make config request\r\n        let url = baseUrl + inp.url.replaceAll(\"//\", \"/\");\r\n        url = url.trim();\r\n        url = encodeURI(url);\r\n        let requestConfig = makeRequestConfig(inp);\r\n\r\n        return await sendRequest(url, requestConfig);\r\n    }\r\n\r\n    return {\r\n        add_config: config,\r\n        exe: request\r\n    };\r\n})();","class CacheManager {\r\n    constructor(key, expire = null) {\r\n        this.key = key;\r\n        this.expire = expire;\r\n        this.items = this.getAll();\r\n    }\r\n\r\n    add(key, value) {\r\n        if (key) {\r\n            this.items = { ...this.items, [key]: value }\r\n            console.log('[CacheManager] add: ', key, this.items);\r\n        }\r\n        this.store();\r\n    }\r\n\r\n    del(key) {\r\n        if (key) {\r\n            delete this.items[key];\r\n        }\r\n        this.store();\r\n    }\r\n\r\n    has(key) {\r\n        return this.items.hasOwnProperty(key);\r\n    }\r\n\r\n    store() {\r\n        localStorage.setItem(this.key, JSON.stringify(this.items));\r\n        localStorage.setItem(this.key + ':ts', Date.now());\r\n    }\r\n\r\n    get(key) {\r\n        let all = this.getAll();\r\n        return all[key];\r\n    }\r\n\r\n    getAll() {\r\n        let stored = localStorage.getItem(this.key);\r\n        return (this.isExpired() || !stored) ?\r\n            {} :\r\n            JSON.parse(stored);\r\n    }\r\n\r\n    isExpired() {\r\n        let whenCached = localStorage.getItem(this.key + ':ts')\r\n        let age = (Date.now() - whenCached) / 1000\r\n        // console.log('[CacheManager] is Expired', this.expire && age > this.expire);\r\n        if (this.expire && age > this.expire) {\r\n            this.clear();\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        localStorage.removeItem(this.key)\r\n        localStorage.removeItem(this.key + ':ts')\r\n    }\r\n}\r\n\r\n/**\r\n * Caches objects as singletons. Alternative, can ignore this.items and just load\r\n * always from localStorage.\r\n * @type {Object}\r\n */\r\n\r\nlet cache = {};\r\n/**\r\n * [getSingleton description]\r\n * @method getSingleton\r\n * @param  {string}     key           Key for localStorage\r\n * @param  {Number}     [expire=null] Expiration time in seconds\r\n * @param  {String}     [sep=',']     separator in case. Default: ,\r\n * @return {CacheManager}             A singleton of CacheCollection\r\n */\r\nfunction getSingleton(key, expire = null) {\r\n    if (!cache.hasOwnProperty(key)) {\r\n        cache[key] = new CacheManager(key, expire);\r\n    }\r\n    return cache[key];\r\n}\r\nexport { getSingleton, CacheManager };","import { RequestAPI as request } from '../../Utils/RequestAPI';\r\nimport { getSingleton as LocalCache } from '../../Utils/CacheManager';\r\n\r\nconst CACHE_KEY = \"pg_mm_settings\";\r\nconst cache = LocalCache(CACHE_KEY);\r\nconst REPOSITORY_SOURCE = cache.has(\"urlRepository\")\r\n    ? cache.get(\"urlRepository\").replaceAll(\"https://github.com/\", \"\")\r\n    : \"\";\r\n\r\nconst TIME_OUT = cache.has(\"requestTimeout\") ? \"Token \" + cache.get(\"requestTimeout\") : \"\";\r\nconst TOKEN_KEY = cache.has(\"accessKey\") ? \"Token \" + cache.get(\"accessKey\") : \"\";\r\nconst USE_NAME = cache.has(\"userName\") ? \"Token \" + cache.get(\"userName\") : \"\";\r\nconst E_MAIL = cache.has(\"email\") ? \"Token \" + cache.get(\"email\") : \"\";\r\n\r\n// Request config\r\nrequest.add_config({\r\n    base_url: \"https://api.github.com\",\r\n    timeout: TIME_OUT,\r\n    in_headers: {\r\n        Authorization: TOKEN_KEY,\r\n        Accept: \"application/vnd.github.v3+json\",\r\n    }\r\n});\r\n\r\nconst author = {\r\n    name: USE_NAME,\r\n    email: E_MAIL\r\n}\r\n\r\n// Export API\r\n/**\r\n * Search file match keyword result from Github repository\r\n * @param {String} key Keyword for search code\r\n * @returns Object Search file and infomation file\r\n */\r\nexport async function searchFromGitHub(key, signal) {\r\n    let result = await request.exe({\r\n        url: `/search/code?q=${key}+repo:${REPOSITORY_SOURCE}`,\r\n        method: \"GET\",\r\n        signal: signal\r\n    }).catch(err => {\r\n        console.log(err);\r\n        return [];\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Get all infomation from path resource\r\n * @param {String} path Path to resource\r\n * @returns Object\r\n */\r\nexport async function readContentByPath(path, signal) {\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${path}`,\r\n        method: \"GET\",\r\n        signal: signal\r\n    }).catch(err => {\r\n        console.log(err)\r\n        return null;\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n *  Get user information from Github\r\n * @param username\r\n * @returns tree \r\n */\r\nexport async function getUser(username) {\r\n    var url = username ? '/users/' + username : '/user';\r\n    let result = await request.exe({\r\n        url: url,\r\n        method: \"GET\",\r\n    }).catch(err => {\r\n        return null;\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Save a file into Git repository\r\n * @param {Object} data Content of file, encode Base64 \r\n * @param {String} filePath Path to file location\r\n * @returns \r\n */\r\nexport function save(data = {\r\n    message: 'Add file',\r\n    content: 'KEVtcHR5KQ==', // (Empty)\r\n}, filePath) {\r\n    return request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${filePath}`,\r\n        method: \"PUT\",\r\n        data: JSON.stringify(data)\r\n    });\r\n}\r\n\r\n/**\r\n * Update content of file in Github\r\n * @param {Object} data Content of file, encode Base64 \r\n * @param {String} filePath Path to file location\r\n * @returns \r\n */\r\nexport function updateContent(data = {\r\n    message: 'Update content', // (Empty)\r\n    content: 'KEVtcHR5KQ==',\r\n    sha: ''\r\n}, filePath) {\r\n    return request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${filePath}`,\r\n        method: \"PUT\",\r\n        data: JSON.stringify(data)\r\n    });\r\n}\r\n\r\n/**\r\n * Get a particular reference\r\n * @param {*} ref heads/branch\r\n * @returns sha\r\n */\r\nexport async function getRef(ref = \"heads/main\") {\r\n    // repos/cuongphuong/memo_data/git/refs/heads/main\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/refs/${ref}`,\r\n        method: \"GET\"\r\n    });\r\n\r\n    return result.object.sha;\r\n};\r\n\r\n/**\r\n * Retrieve the tree a commit points to\r\n * @param {String} sha  ex: 76ba6ba67867c6069cbb9c377a0a2c909145c778?recursive=true\r\n * @returns tree \r\n */\r\nexport async function getTree(sha = \"\") {\r\n    // repos/cuongphuong/memo_data/git/trees/76ba6ba67867c6069cbb9c377a0a2c909145c778\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/trees/${sha}`,\r\n        method: \"GET\"\r\n    });\r\n\r\n    return result.tree;\r\n};\r\n\r\n/**\r\n *  Post a new tree object having a file path pointer replaced with a new blob SHA getting a tree SHA back\r\n * @param {Array} tree  Tree\r\n * @returns tree \r\n */\r\nexport async function postTree(tree, base_tree) {\r\n    if (!tree) return;\r\n\r\n    let payload = { tree: tree };\r\n\r\n    if (base_tree) payload = { ...payload, base_tree: base_tree }\r\n\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/trees`,\r\n        method: \"POST\",\r\n        data: JSON.stringify(payload)\r\n    });\r\n    return result.sha;\r\n};\r\n\r\n/**\r\n * Create a new commit object with the current commit SHA as the parent and the new tree SHA, getting a commit SHA back\r\n * \r\n */\r\nexport async function commit(parent, tree, message) {\r\n    let userData = getUser(author.name);\r\n    if (!userData) return;\r\n    let data = {\r\n        message: message,\r\n        author: author,\r\n        parents: [\r\n            parent\r\n        ],\r\n        tree: tree\r\n    }\r\n\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/commits`,\r\n        method: 'POST',\r\n        data: JSON.stringify(data)\r\n    }).catch(err => {\r\n        return null;\r\n    });\r\n    return result.sha;\r\n}\r\n\r\nexport async function updateHead(head, commit) {\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/refs/heads/` + head,\r\n        method: 'PATCH',\r\n        data: JSON.stringify({\r\n            sha: commit\r\n        })\r\n    }).catch(err => {\r\n        return null;\r\n    });\r\n    return result;\r\n}\r\n","import { Base64 } from 'js-base64';\r\n\r\nexport class StringUtils {\r\n    static EMPTY = \"\";\r\n\r\n    /**\r\n     * Check whether a string is null or empty.\r\n     * @param str value\r\n     * @returns true : if string is null or empty\r\n     */\r\n    static isNullOrEmpty(str) {\r\n        if (!str || str === null || str === StringUtils.EMPTY) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Encoding str to Base64\r\n     * @param str value\r\n     * @returns Base64 str\r\n     */\r\n    static base64Encode(str) {\r\n        if (!str || str === null) {\r\n            return null;\r\n        } else {\r\n            return Base64.encode(str);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Decode Base64 to str\r\n     * @param Base64 str\r\n     * @returns Value decode\r\n     */\r\n    static base64decode(str) {\r\n        if (!str || str === null) {\r\n            return null;\r\n        } else {\r\n            return Base64.decode(str);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Removes \" \", \"　\", and \\t from the beginning of the 'str'. Returns 'defaultStr' if 'str' is null\r\n     * or trimmed string is \"\".\r\n     *\r\n     * @param str\r\n     * @param defaultStr\r\n     * @return trimmed string\r\n     */\r\n    static trimL(str, defaultStr) {\r\n\r\n        let ret = str;\r\n\r\n        if (!ret || ret === null) {\r\n            ret = \"\";\r\n        }\r\n        // remove ' ', '　', '\\t'\r\n        while (ret.startsWith(\" \") || ret.startsWith(\"　\") || ret.startsWith(\"\\t\") || ret.startsWith(\"\\n\")) {\r\n            ret = ret.substring(1);\r\n        }\r\n\r\n        if (ret === \"\") {\r\n            ret = defaultStr;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Removes \" \", \"　\", and \\t from the end of the 'str'. Returns 'defaultStr' if 'str' is null or\r\n     * trimmed string is \"\".\r\n     *\r\n     * @param str\r\n     * @param defaultStr\r\n     * @return trimmed string\r\n     */\r\n    static trimR(str, defaultStr) {\r\n\r\n        let ret = str;\r\n\r\n        if (!ret || ret === null) {\r\n            ret = \"\";\r\n        }\r\n        // Delete \" \", \"　\", and \\t\r\n        while (ret.endsWith(\" \") || ret.endsWith(\"　\") || ret.endsWith(\"\\t\")) {\r\n            ret = ret.substring(0, ret.length() - 1);\r\n        }\r\n\r\n        if (ret === \"\") {\r\n            ret = defaultStr;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Removes \" \", \"　\", and \\t from both ends of the 'str'. Returns 'defaultStr' if 'str' is null or\r\n     * trimmed string is \"\".\r\n     *\r\n     * @param str\r\n     * @param defaultStr\r\n     * @return trimmed string\r\n     */\r\n    static trim(str, defaultStr) {\r\n\r\n        let ret = str;\r\n        // Delete \" \", \"　\", and \\t\r\n        ret = StringUtils.trimL(ret, defaultStr);\r\n        //ret = StringUtils.trimR(ret, defaultStr);\r\n\r\n        return ret;\r\n    }\r\n\r\n    static nonAccentVietnamese(str) {\r\n        str = str.toLowerCase();\r\n        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\r\n        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\r\n        str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\r\n        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\r\n        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\r\n        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\r\n        str = str.replace(/đ/g, \"d\");\r\n        // Some system encode vietnamese combining accent as individual utf-8 characters\r\n        str = str.replace(/\\u0300|\\u0301|\\u0303|\\u0309|\\u0323/g, \"\"); // Huyền sắc hỏi ngã nặng\r\n        str = str.replace(/\\u02C6|\\u0306|\\u031B/g, \"\"); // Â, Ê, Ă, Ơ, Ư\r\n        str = str.replace(/\\s/g, \"-\");\r\n        return str;\r\n    }\r\n\r\n    static truncateString(str, num) {\r\n        if (str.length > num) {\r\n            return str.slice(0, num) + \"...\";\r\n        } else {\r\n            return str;\r\n        }\r\n    }\r\n}","import { searchFromGitHub, readContentByPath } from \"../API/Github/Request\";\r\nimport { StringUtils } from \"./StringUtils\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { NotificationManager } from 'react-notifications';\r\nexport class ContentRender {\r\n    // Delimiter between config and content\r\n    static DEFAULT_DELIMITER = \"---\";\r\n\r\n    /**\r\n     * Get content list from keyword search\r\n     * @param {String} str Keyword for search\r\n     * @returns List of content search\r\n     */\r\n    static async search(str, signal) {\r\n        if (StringUtils.isNullOrEmpty(str)) {\r\n            console.log(\"Search keyword is empty\");\r\n            return;\r\n        }\r\n\r\n        let apiResult\r\n        try {\r\n            apiResult = await searchFromGitHub(str, signal);\r\n            let totalCount = apiResult.total_count;\r\n\r\n            if (!totalCount) {\r\n                console.log(`No file mapping result key [${str}]`);\r\n                NotificationManager.info(`No file mapping result key [${str}]`);\r\n                return;\r\n            }\r\n        } catch (error) {\r\n            NotificationManager.console.warning(\"Not response data from API.\");\r\n            console.error(\"Not response data from API.\");\r\n            return;\r\n        }\r\n\r\n        let items = apiResult.items;\r\n        let pathFileList = new Set();\r\n        let postObjectList = [];\r\n\r\n        await Promise.all(items.map(async (item) => {\r\n            if (pathFileList.has(item.path)) {\r\n                return;\r\n            }\r\n\r\n            pathFileList.add(item.path);\r\n            let contentObject = await ContentRender.makeContentObject(item.path);\r\n            if (contentObject !== null) {\r\n                postObjectList = [...postObjectList, contentObject];\r\n            }\r\n        }));\r\n\r\n        return postObjectList;\r\n    }\r\n\r\n    /**\r\n     * Call to github content for get content file from file path\r\n     * @param {String} filePath Path to file on Github\r\n     * @returns Content object from JSON content\r\n     */\r\n    static async makeContentObject(filePath, signal) {\r\n        // Is invalid path\r\n        if (!filePath) {\r\n            return;\r\n        }\r\n\r\n        filePath = filePath.trim();\r\n        let apiContentResult = await readContentByPath(filePath, signal);\r\n        let contentObject = {};\r\n        if (apiContentResult && !StringUtils.isNullOrEmpty(apiContentResult.content)) {\r\n            let base64Content = apiContentResult.content;\r\n            let decodeContent = Base64.decode(base64Content);\r\n\r\n            // Get index of str delimiter config and content\r\n            let index = decodeContent.indexOf(ContentRender.DEFAULT_DELIMITER, 1);\r\n            if (index === -1) {\r\n                console.log(`Content file ${filePath} is invalid.`)\r\n                return null;\r\n            }\r\n            let cfgAreaStr = decodeContent.substring(0, index + ContentRender.DEFAULT_DELIMITER.length);\r\n            let contentAreaStr = decodeContent.substring(index + ContentRender.DEFAULT_DELIMITER.length);\r\n\r\n            let configs = ContentRender.makeConfigFromResult(cfgAreaStr);\r\n            let content = StringUtils.trim(contentAreaStr);\r\n            contentObject = { ...configs, content };\r\n            contentObject = { ...contentObject, filePath: filePath };\r\n\r\n            return contentObject;\r\n        } else {\r\n            console.log(\"Can't load data for \" + filePath);\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Make config object from content file result from API\r\n     * @param {Strng} str Config area from API result to objectt\r\n     * @returns Object configs\r\n     */\r\n    static makeConfigFromResult(str) {\r\n        const regex = /^[a-zA-Z]+:(.*)$/gm;\r\n        let m;\r\n\r\n        let configs = {};\r\n        while ((m = regex.exec(str)) !== null) {\r\n            if (m.index === regex.lastIndex) {\r\n                regex.lastIndex++;\r\n            }\r\n\r\n            let mathItems = m[0].split(\":\");\r\n            let configKey = StringUtils.trim(mathItems[0]);\r\n            let configValue = StringUtils.trim(mathItems[1]);\r\n\r\n            configs = { ...configs, [configKey]: configValue };\r\n        }\r\n        return configs;\r\n    }\r\n\r\n    /**\r\n     * Get on category level 1 on Github repository\r\n     * @param {String} path path to resource\r\n     * @returns Array All categorys on level 1\r\n     */\r\n    static async getAllCategoryList(path, signal) {\r\n        let result = await readContentByPath(path, signal);\r\n        if (!result || !Array.isArray(result) || result.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        let categoryList = [];\r\n        result.forEach(item => {\r\n            if (item.type === \"dir\" && !StringUtils.isNullOrEmpty(item.name)) {\r\n                categoryList = [...categoryList, item.name];\r\n            }\r\n        });\r\n\r\n        return categoryList;\r\n    }\r\n\r\n    /**\r\n     * Get file, dir from path resource in Git repository\r\n     * @param {String} path Path to resource for get data\r\n     * @returns Object File and Dir from resource\r\n     */\r\n    static async getAllItemFromPath(path) {\r\n        let result = await readContentByPath(path);\r\n\r\n        if (!result || !Array.isArray(result) || result.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        let resultObject = {\r\n            itemList: []\r\n        };\r\n\r\n        result.forEach(item => {\r\n            if (item.type === \"dir\" && !StringUtils.isNullOrEmpty(item.name)) {\r\n                resultObject = { ...resultObject, [item.name]: { hasContnent: false } }\r\n            }\r\n\r\n            if (item.type === \"file\" && !StringUtils.isNullOrEmpty(item.name)) {\r\n                resultObject = {\r\n                    ...resultObject, itemList: [...resultObject.itemList, {\r\n                        name: item.name,\r\n                        path: item.path\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n        return resultObject;\r\n    }\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { StringUtils } from '../Utils/StringUtils';\r\n\r\nfunction List({ children }) {\r\n    return (\r\n        <div className=\"pg_mm_list\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ListItem({ source = {\r\n    title: \"n/a\",\r\n    content: \"n/a\",\r\n    id: \"n/a\",\r\n    category: \"n/a\"\r\n}, handleChooseItem, activeId }) {\r\n    const style = useSelector(state => state.style);\r\n\r\n    function handleClick() {\r\n        handleChooseItem(source);\r\n    }\r\n\r\n    function isActive() {\r\n        if (activeId === source.id) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function truncPathListItem(strPath) {\r\n        let tmpPathList = strPath.split(\"/\");\r\n        tmpPathList = tmpPathList.filter(p => !StringUtils.isNullOrEmpty(p));\r\n        return tmpPathList.pop();\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={isActive() ? style.borderLineHover : {}}\r\n            className={isActive() ? \"pg_mm_list_item pg_mm_list_item_active\" : \"pg_mm_list_item\"}\r\n            onClick={handleClick}\r\n        >\r\n            <h3 className=\"pg_mm_trunc\">{source.title}</h3>\r\n            <p className=\"pg_mm_trunc\">{source.content}</p>\r\n            <div className=\"pg_mm_list_item_info\">\r\n                <span className=\"pg_mm_trunc\">{`${source.id}`}</span>\r\n                <span\r\n                    style={style.headerMenu}\r\n                    className=\"pg_mm_trunc\">{truncPathListItem(source.category)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nList.Item = ListItem;\r\nexport default List;","export const setActiveId = (activeId) => {\r\n    return {\r\n        type: \"SearchReducer/setActiveId\",\r\n        payload: activeId\r\n    }\r\n}\r\n\r\nexport const setMdContent = (mdContent) => {\r\n    return {\r\n        type: \"SearchReducer/setMdContent\",\r\n        payload: mdContent\r\n    }\r\n}\r\n\r\nexport const setSearchResultList = (searchResultList) => {\r\n    return {\r\n        type: \"SearchReducer/setSearchResultList\",\r\n        payload: searchResultList\r\n    }\r\n}","import { getSingleton as LocalCache } from \"./CacheManager\";\r\n\r\nconst SEARCH_CACHE_KEY = \"pg_mm_search\";\r\nconst searchCache = LocalCache(SEARCH_CACHE_KEY, null);\r\n\r\nconst SearchHistoryCache = (function () {\r\n    function getTopKeyWord() {\r\n        let allItem = searchCache.getAll();\r\n        let keysSorted = Object.keys(allItem).sort(function (a, b) {\r\n            return allItem[b] - allItem[a]\r\n        });\r\n        return keysSorted;\r\n    }\r\n\r\n    function insertKey(key) {\r\n        let allItem = searchCache.getAll();\r\n        if (Object.keys(allItem).length >= 10) {\r\n            removeMinItem(allItem);\r\n        }\r\n\r\n        if (searchCache.has(key)) {\r\n            let value = searchCache.get(key);\r\n            searchCache.add(key, ++value);\r\n        } else {\r\n            searchCache.add(key, 1);\r\n        }\r\n    }\r\n\r\n    function removeMinItem(allItem) {\r\n        let keysSorted = Object.keys(allItem).sort(function (a, b) {\r\n            return allItem[a] - allItem[b]\r\n        });\r\n        console.log(keysSorted[0]);\r\n        searchCache.del(keysSorted[0]);\r\n    }\r\n\r\n    return {\r\n        getTopKeyWord: getTopKeyWord,\r\n        insertKey: insertKey\r\n    };\r\n})();\r\n\r\nexport default SearchHistoryCache;","import React, { useState, useRef, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport Viewer from '../ViewComponents/Viewer';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\nimport List from '../ViewComponents/List';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setActiveId, setMdContent, setSearchResultList } from '../Actions/SearchReducer';\r\nimport SearchHistoryCache from '../Utils/SearchHistoryCache';\r\n\r\nfunction QuickSearchTab() {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    const style = useSelector(state => state.style);\r\n\r\n    // Logic state\r\n    const dispatch = useDispatch();\r\n    const searchResultList = useSelector(state => state.searchData.searchResultList);\r\n    const mdContent = useSelector(state => state.searchData.mdContent);\r\n    const activeId = useSelector(state => state.searchData.activeId);\r\n\r\n    // UI state\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [searchCacheList, setSearchCacheList] = useState([]);\r\n    const inputObj = useRef(null);\r\n    const typingTimer = useRef(null); // timer identifier \r\n    let doneTypingInterval = 600;  // time in ms (600ms)\r\n\r\n    useEffect(() => {\r\n        refController.current = new AbortController();\r\n        inputObj.current.focus();\r\n\r\n        // Load cache\r\n        let cacheKeywordList = SearchHistoryCache.getTopKeyWord();\r\n        setSearchCacheList(cacheKeywordList);\r\n\r\n        return () => {\r\n            console.log(\"Clean QuikTabSearch\")\r\n            refController.current.abort();\r\n        }\r\n    }, [])\r\n\r\n    function handleSearchChange(evt) {\r\n        clearTimeout(typingTimer.current);\r\n        //\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        typingTimer.current = setTimeout(function () {\r\n            if (signal.aborted) {\r\n                return;\r\n            }\r\n            dispatch(setSearchResultList([]));\r\n            doneTyping(evt.target.value)\r\n        }, doneTypingInterval);\r\n    }\r\n\r\n    async function doneTyping(keyword) {\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        // fetch API\r\n        setIsProcessing(true);\r\n        let apiResultContentList = await ContentRender.search(keyword, signal);\r\n        if (apiResultContentList && apiResultContentList.length > 0) {\r\n            SearchHistoryCache.insertKey(keyword);\r\n            dispatch(setSearchResultList(apiResultContentList));\r\n        }\r\n        setIsProcessing(false);\r\n    }\r\n\r\n    function handleChooseItem(source) {\r\n        dispatch(setActiveId(source.id));\r\n        dispatch(setMdContent(source));\r\n    }\r\n\r\n    function renderSearchList() {\r\n        return (\r\n            <>\r\n                {\r\n                    searchResultList.length > 0 ?\r\n                        <List>\r\n                            {searchResultList.map((item, index) => <List.Item activeId={activeId}\r\n                                handleChooseItem={handleChooseItem}\r\n                                key={index}\r\n                                source={item}\r\n                            />)}\r\n                        </List>\r\n                        :\r\n                        <img className='unselectable' width=\"100%\"\r\n                            src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/empty.png\"\r\n                            alt=\"empty\"\r\n                        />\r\n                }\r\n\r\n                {\r\n                    isProcessing ?\r\n                        <div className=\"pg_mm_search_loadding\">\r\n                            <img height=\"45px\"\r\n                                style={{ position: 'absolute', top: 110 }}\r\n                                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                                alt=\"loadding...\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                        ''\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    console.log(\"re-render QuikTabSearch.\")\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            <Layout.SiderBar>\r\n                <input\r\n                    list=\"cacheList\"\r\n                    style={style.borderLine}\r\n                    ref={inputObj}\r\n                    onChange={(evt) => { handleSearchChange(evt) }}\r\n                    type=\"text\"\r\n                    className=\"pg_mm_search_input\"\r\n                    placeholder=\"Type for search...\"\r\n                />\r\n                <datalist id=\"cacheList\">\r\n                    {searchCacheList.map((item, index) => <option key={index} value={item} />)}\r\n                </datalist>\r\n                <div style={{ marginTop: '5px' }}></div>\r\n                {renderSearchList()}\r\n            </Layout.SiderBar>\r\n            <Layout.RightContent>\r\n                <Viewer source={mdContent} />\r\n                <div className='pg_mm_logo unselectable'>\r\n                    <img width=\"350px\"\r\n                        src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/logo.png\"\r\n                        alt=\"loadding...\"\r\n                    />\r\n                </div>\r\n            </Layout.RightContent>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(QuickSearchTab);","import React from 'react';\r\nimport \"./CategoryList.css\"\r\n\r\nimport { ContentRender } from '../Utils/ContentRender';\r\n\r\nfunction makeRenderList(categoryObj, sourcePath) {\r\n    let renderList = [];\r\n    for (const property in categoryObj) {\r\n        if (typeof categoryObj[property] === \"object\" && property !== \"itemList\") {\r\n            renderList = [...renderList, {\r\n                name: property,\r\n                path: `${sourcePath}/${property}`,\r\n                type: \"dir\"\r\n            }]\r\n        }\r\n    }\r\n\r\n    if (categoryObj.itemList) {\r\n        categoryObj.itemList.forEach(item => {\r\n            item = { ...item, type: \"file\" }\r\n            renderList = [...renderList, item];\r\n        });\r\n    }\r\n    return renderList;\r\n}\r\n\r\n/**\r\n * CategoryListr\n */\r\nfunction CategoryList({ children }) {\r\n    return (\r\n        <div className=\"pg_mm_category_list_main\">\r\n            <div className=\"section\" id=\"J1\" >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * Blockr\n */\r\nfunction Block(props) {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    //\r\n    const [categoryObj, setCategoryObj] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        ContentRender.getAllItemFromPath(props.name).then(data => {\r\n            if (signal.aborted) {\r\n                return;\r\n            }\r\n            setCategoryObj(data);\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        }\r\n    }, [props.name])\r\n\r\n\r\n    function renderItem() {\r\n        let renderList = makeRenderList(categoryObj, props.name);\r\n        let dirList = renderList.filter(p => p.type === \"dir\");\r\n        let fileList = renderList.filter(p => p.type === \"file\");\r\n\r\n        return (\r\n            <>\r\n                {dirList.map((item, index) => <Row\r\n                    handleItemClick={props.handleItemClick}\r\n                    key={index}\r\n                    source={item}\r\n                />)}\r\n\r\n                <dl className=\"link-list\">\r\n                    {fileList.map((item, index) => <Item\r\n                        key={index}\r\n                        name={item.name}\r\n                        type={item.type}\r\n                        path={item.path}\r\n                        handleItemClick={props.handleItemClick}\r\n                    />)}\r\n                </dl>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"section-inner\">\r\n                <h3 className=\"hd\">{props.name}</h3>\r\n                {renderItem()}\r\n            </div>\r\n            <div className=\"clear_float\"></div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * Rowr\n */\r\nfunction Row({ source = { name: \"\", path: \"\", type: \"\" }, handleItemClick }) {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    //\r\n    const [categoryObject, setCategoryObject] = React.useState([]);\r\n    const [sourcePath, setSourcePath] = React.useState(source.path);\r\n    const [isLoadding, setIsLoadding] = React.useState(true);\r\n    const pathList = React.useRef([source.path]);\r\n\r\n    React.useEffect(() => {\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        ContentRender.getAllItemFromPath(sourcePath).then(data => {\r\n            if (signal.aborted) {\r\n                return;\r\n            }\r\n            // success API\r\n            setCategoryObject(data);\r\n            setIsLoadding(false);\r\n        }).catch(err => {\r\n            console.log(err);\r\n            // check unmount component\r\n            if (signal.aborted) {\r\n                return;\r\n            }\r\n            setCategoryObject([]);\r\n            setIsLoadding(false);\r\n        });\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        }\r\n    }, [sourcePath]);\r\n\r\n    function gotoPath(path) {\r\n        let index = pathList.current.indexOf(path);\r\n        let tmpList = pathList.current.filter(p => pathList.current.indexOf(p) <= index);\r\n        pathList.current = tmpList;\r\n        setSourcePath(path);\r\n        setIsLoadding(true);\r\n        // fetch API\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        ContentRender.getAllItemFromPath(sourcePath).then(data => {\r\n            if (signal.aborted) {\r\n                return;\r\n            }\r\n            setCategoryObject(data);\r\n            setIsLoadding(false);\r\n        }).catch(err => {\r\n            console.log(\"Fail to fetch data.\");\r\n            // check unmount component\r\n            if (signal.aborted) {\r\n                return;\r\n            }\r\n            setCategoryObject([]);\r\n            setIsLoadding(false);\r\n        });\r\n    }\r\n\r\n    function onClickSubFolder(name) {\r\n        pathList.current = [...pathList.current, sourcePath + \"/\" + name];\r\n        gotoPath(sourcePath + \"/\" + name)\r\n    }\r\n\r\n    function renderItem() {\r\n        let renderList = makeRenderList(categoryObject, source.path);\r\n\r\n        if (isLoadding) {\r\n            return (<img\r\n                height=\"20px\"\r\n                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                alt=\"loadding...\"\r\n            />);\r\n        }\r\n\r\n        return renderList.map((item, index) => <Item\r\n            key={index}\r\n            name={item.name}\r\n            type={item.type}\r\n            path={item.path}\r\n            handleItemClick={handleItemClick}\r\n            onClickSubFolder={(name) => onClickSubFolder(name)}\r\n        />);\r\n    }\r\n\r\n    function renderPathList() {\r\n        let fixPathList = pathList.current.map(path => truncPathListItem(path));\r\n        return (\r\n            <>\r\n                {fixPathList.map((item, index) => <span className=\"pg_mm_path_item\"\r\n                    key={index}\r\n                    onClick={() => gotoPath(pathList.current[index])}>\r\n                    {item}\r\n                </span>)}\r\n            </>\r\n        )\r\n    }\r\n\r\n    function truncPathListItem(strPath) {\r\n        let tmpPathList = strPath.split(\"/\");\r\n        return tmpPathList.pop();\r\n    }\r\n\r\n    return (\r\n        <dl className=\"link-list\">\r\n            <dt className=\"link-hd\" onClick={() => gotoPath(pathList.current[pathList.current.length - 1])}>{renderPathList()}</dt>\r\n            <dd className=\"link-bd\">\r\n                {renderItem()}\r\n            </dd>\r\n        </dl>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * Itemr\n */\r\nfunction Item(props) {\r\n    if (props.type === \"file\") {\r\n        let title = props.name.replace(\".md\", \"\");\r\n        return (\r\n            <p\r\n                onClick={() => props.handleItemClick(props.path)}\r\n                title={title} >\r\n                {title}\r\n            </p>);\r\n    }\r\n\r\n    if (props.type === \"dir\") {\r\n        return (<span\r\n            onClick={() => props.onClickSubFolder(props.name)}\r\n            title=\"\" >\r\n            {props.name}\r\n        </span>);\r\n    }\r\n}\r\n\r\nCategoryList.Block = Block;\r\nexport default CategoryList;","import * as request from \"../API/Github/Request\";\r\nimport { StringUtils } from \"./StringUtils\";\r\n\r\n/**\r\n * Get all infomation from path resource\r\n * @param {String} path Path to resource\r\n * @returns Object\r\n */\r\nexport function readContent(path) {\r\n    return request.readContentByPath(path);\r\n}\r\n\r\n/**\r\n * Save a file into Git repository\r\n * @param {Object} data Content of file, encode Base64\r\n * @param {String} filePath Path to file location\r\n * @returns\r\n */\r\nexport function create(data = {\r\n    message: 'Add file',\r\n    content: 'KEVtcHR5KQ==', // (Empty)\r\n}, filePath) {\r\n    return request.save(data, filePath);\r\n}\r\n\r\n/**\r\n * Update content of file in Github\r\n * @param {Object} data Content of file, encode Base64\r\n * @param {String} filePath Path to file location\r\n * @returns\r\n */\r\nexport async function update(data = {\r\n    message: 'Add file',\r\n    content: 'KEVtcHR5KQ==', // (Empty)\r\n}, filePath) {\r\n\r\n    // Get last SHA version on Github\r\n    let dataAPI = await request.readContentByPath(filePath);\r\n    if (dataAPI === null) return;\r\n    let lastSha = dataAPI.sha;\r\n    data.sha = lastSha;\r\n    return request.updateContent(data, filePath);\r\n}\r\n\r\n/**\r\n * Delete a file \r\n * @param {String} filePath path to file will delete\r\n */\r\nexport function deleteFile(filePath) {\r\n    return move(\"main\", filePath);\r\n}\r\n\r\n/**\r\n * Move || remove a file to a new location\r\n * @param {String} branch master \r\n * @param {String} path \r\n * @param {String} newPath not existed then remove path\r\n * @returns true if move successfully\r\n */\r\nexport async function move(branch = \"main\", path, newPath) {\r\n    // Get last SHA of main branch\r\n    let latestCommit = await request.getRef(\"heads/main\");\r\n    // Get tree by last SHA\r\n    let tree = await request.getTree(latestCommit + '?recursive=true');\r\n    // Update tree\r\n    tree.forEach(function (ref) {\r\n        if ((!newPath || StringUtils.isNullOrEmpty(newPath)) && ref.path === path) {\r\n            ref.isDeleted = true;\r\n        } else {\r\n            if (ref.path === path) ref.path = newPath;\r\n        }\r\n\r\n        if (ref.type === \"tree\") {\r\n            ref.isDeleted = true;\r\n        }\r\n    });\r\n\r\n    tree = tree.filter(p => !p.isDeleted);\r\n    // Post update tree to API\r\n    let rootTree = await request.postTree(tree);\r\n    // Create a commit\r\n    let commit_msg = (!newPath || StringUtils.isNullOrEmpty(newPath))\r\n        ? \"Remove \" + path\r\n        : \"Move \" + path + \" to \" + newPath;\r\n    let commit = await request.commit(latestCommit, rootTree, commit_msg);\r\n    // Update HEAD to new commit\r\n    let result = await request.updateHead(branch, commit);\r\n    return result != null;\r\n}","import React from 'react';\r\nimport Viewer from '../ViewComponents/Viewer';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport \"./ViewPopup.css\";\r\nimport { deleteFile } from '../Utils/GithubCRUD';\r\n\r\nexport default function ViewPopup(props) {\r\n    const [stype, setStype] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        setStype({\r\n            display: props.display\r\n        })\r\n        return () => {\r\n        }\r\n    }, [props.display])\r\n\r\n    function onClosePopup() {\r\n        setStype({\r\n            display: \"block\",\r\n            animationName: \"close\",\r\n            animationDuration: 300\r\n        });\r\n        props.onClose();\r\n    }\r\n\r\n    function onEdit() {\r\n        setStype({\r\n            display: \"block\",\r\n            animationName: \"close\",\r\n            animationDuration: 300\r\n        });\r\n        props.onEdit(props.source.filePath);\r\n    }\r\n\r\n    async function onDelete() {\r\n        if (!window.confirm(\"Do you want to delete \" + props.source.filePath) === true) {\r\n            return;\r\n        }\r\n\r\n        await deleteFile(props.source.filePath);\r\n        NotificationManager.info(\"Deleted.\");\r\n        setStype({\r\n            display: \"block\",\r\n            animationName: \"close\",\r\n            animationDuration: 300\r\n        });\r\n        props.onDelete();\r\n    }\r\n\r\n    return (\r\n        <div style={stype} className=\"pg_mm_view_popup\">\r\n            <span onClick={onClosePopup} className=\"pg_mm_view_cls_button\">Close [x]</span>\r\n            <span onClick={onEdit} className=\"pg_mm_view_edit_button\">Edit [/]</span>\r\n            <span onClick={onDelete} className=\"pg_mm_view_delete_button\">Delete [#]</span>\r\n            {props.source ? <Viewer source={props.source} /> : stype && !stype.animationName ? <img\r\n                className=\"pg_mm_loadding\"\r\n                height=\"50px\"\r\n                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                alt=\"loadding...\"\r\n            /> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Layout from './Layout';\r\nimport CategoryList from '../ViewComponents/CategoryList';\r\nimport ViewPopup from './ViewPopup';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCategoryList } from '../Actions/ListTabReducer';\r\n\r\nexport default function ListTab(props) {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    const dispatch = useDispatch();\r\n    //\r\n    const categoryList = useSelector(state => state.listTabData.categoryList);\r\n    const [isDisplayPopup, setIsDisplayPopup] = React.useState(\"none\");\r\n    const [dataView, setDataView] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        // fetch API\r\n        ContentRender.getAllCategoryList(\"\").then(data => {\r\n            if (signal.aborted) {\r\n                return;\r\n            }\r\n            dispatch(setCategoryList(data));\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n        return () => {\r\n            setDataView(null);\r\n            refController.current.abort();\r\n        }\r\n    }, [dispatch]);\r\n\r\n    function handleItemClick(path) {\r\n        setIsDisplayPopup(\"block\");\r\n        ContentRender.makeContentObject(path).then(data => {\r\n            setDataView(data);\r\n        });\r\n    }\r\n\r\n    function handleClosePopups() {\r\n        setTimeout(function () {\r\n            setIsDisplayPopup(\"none\");\r\n        }, 300)\r\n        setDataView(null);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            <Layout.MiddleContent >\r\n                <CategoryList>\r\n                    {categoryList.map((categoryName, index) => <CategoryList.Block\r\n                        handleItemClick={handleItemClick}\r\n                        key={index}\r\n                        name={categoryName}\r\n                    />)}\r\n                </CategoryList>\r\n                <div className=\"pg_mm_view_popup_block\">\r\n                    <ViewPopup\r\n                        onDelete={() => setIsDisplayPopup(\"none\")}\r\n                        onEdit={(filePath) => props.onEdit(filePath)}\r\n                        onClose={handleClosePopups}\r\n                        source={dataView}\r\n                        display={isDisplayPopup}\r\n                    />\r\n                </div>\r\n            </Layout.MiddleContent >\r\n        </div>\r\n    )\r\n}\r\n","export const setCategoryList = (categoryList) => {\r\n    return {\r\n        type: \"SET_CATEGORY_LIST\",\r\n        payload: categoryList\r\n    }\r\n}\r\n\r\nexport const setBlockCategoryObject = (categoryObject) => {\r\n    return {\r\n        type: \"SET_BLOCK_CATEGORY_OBJECT\",\r\n        payload: categoryObject\r\n    }\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ContentRender } from \"../Utils/ContentRender\";\r\n\r\nexport default function CategoryInput(props) {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    const style = useSelector(state => state.style);\r\n    //\r\n    const nameInput = React.useRef(\"\");\r\n    const pathDataList = React.useRef([]);\r\n    const [categoryList, setCategoryList] = React.useState([]);\r\n    const [pathRenderList, setPathRenderList] = React.useState([]);\r\n    const [isFetching, setIsFetching] = React.useState(false);\r\n    const makeReturn = () => {\r\n        let category = \"\";\r\n        if (pathDataList.current && pathDataList.current.length > 0) {\r\n            category = pathDataList.current.map((item) => item.name).join(\"\");\r\n        }\r\n        return { category: category, title: nameInput.current.value }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        function makePathStr(list) {\r\n            if (list.length === 0) return \"\";\r\n\r\n            let path = \"\";\r\n            list.forEach(el => {\r\n                path += el.name;\r\n            });\r\n            return path;\r\n        }\r\n        // Set default title\r\n        nameInput.current.value = props.defaultTitle;\r\n        // Set default category\r\n        let categorys = props.defaultCategory.split(\"/\");\r\n        categorys = categorys.filter(p => p !== \"\");\r\n        let categoryPathList = [];\r\n        categorys.forEach(element => {\r\n            element = { name: element + \"/\" };\r\n            element = { ...element, path: makePathStr(categoryPathList) + element.name }\r\n            element = { ...element, subList: [] }\r\n            categoryPathList.push(element);\r\n        });\r\n        pathDataList.current = categoryPathList;\r\n        setPathRenderList(categoryPathList);\r\n\r\n        // Make category list\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        ContentRender.getAllCategoryList(\"\", signal).then((data) => {\r\n            // check unmount component\r\n            if (signal.aborted) return;\r\n            setCategoryList([...data]);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        };\r\n    }, [props.defaultTitle, props.defaultCategory]);\r\n\r\n    async function makeNewCategory(name, callback = function () { }) {\r\n        if (name !== \"/\" && name.endsWith(\"/\")) {\r\n            // Fetch sublist\r\n            let currentPath = pathRenderList.map((item) => item.name).join(\"\");\r\n            let newPath = {\r\n                name: name,\r\n                path: currentPath + name,\r\n                subList: [],\r\n            };\r\n            pathDataList.current = [...pathDataList.current, newPath];\r\n            setPathRenderList(pathDataList.current);\r\n            callback(true);\r\n\r\n\r\n            // Update sub list from API\r\n            setIsFetching(true);\r\n            refController.current = new AbortController();\r\n            let signal = refController.current.signal;\r\n            let tmpList = await makeSubListFromAPI(signal);\r\n            // Component is unmount\r\n            if (signal.aborted) return;\r\n            pathDataList.current = tmpList;\r\n            setPathRenderList(tmpList);\r\n            setIsFetching(false);\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    async function makeSubListFromAPI(signal) {\r\n        let lastItem = pathDataList.current.at(-1);\r\n        // fetch API\r\n        let subDataList = await ContentRender.getAllCategoryList(lastItem.path, signal);\r\n        // Remove last item in list\r\n        let tmpList = [...pathDataList.current];\r\n        tmpList.pop();\r\n        //\r\n        lastItem = { ...lastItem, subList: subDataList }\r\n        tmpList.push(lastItem);\r\n        return tmpList\r\n    }\r\n\r\n    function handleKeyInput(evt) {\r\n        let key = evt.which || evt.keyCode || evt.charCode;\r\n        if (/*key === 8 || */ key === 46 && pathDataList.current.length > 0) {\r\n            let lastItem = pathDataList.current.at(-1);\r\n            evt.target.value = lastItem.name.substring(0, lastItem.name.length - 1);\r\n            let tmpList = [...pathDataList.current];\r\n            tmpList.pop();\r\n            pathDataList.current = tmpList;\r\n            setPathRenderList(pathDataList.current);\r\n        } else {\r\n            makeNewCategory(evt.target.value, function (success = false) {\r\n                if (success) evt.target.value = \"\";\r\n                props.onChange(makeReturn());\r\n            });\r\n        }\r\n\r\n        evt.target.focus();\r\n    }\r\n\r\n    function setNameInputValue(val) {\r\n        makeNewCategory(val + \"/\", function () {\r\n            props.onChange(makeReturn());\r\n        });\r\n        // nameInput.current.value = \"\";\r\n        nameInput.current.focus();\r\n    }\r\n\r\n    function renderSubCategoryList() {\r\n        let currentCtgList = [];\r\n        let lastItem = pathRenderList.at(-1);\r\n        if (pathRenderList.length > 0) {\r\n            currentCtgList = [...lastItem.subList];\r\n        } else {\r\n            currentCtgList = categoryList;\r\n        }\r\n\r\n        if (isFetching) {\r\n            return (\r\n                <div style={{ position: \"absolute\", top: 6, zIndex: -1, color: \"#cdcdcd\" }}>\r\n                    <img height=\"20px\"\r\n                        src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                        alt=\"loadding...\"\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (currentCtgList.length === 0) {\r\n            let name = \"root/\";\r\n            if (lastItem && lastItem.name) {\r\n                name = \".../\" + lastItem.name;\r\n            }\r\n\r\n            return (\r\n                <div style={{ position: \"absolute\", top: 6, zIndex: -1, color: \"#cdcdcd\" }}>No category from {name}</div>\r\n            )\r\n        }\r\n\r\n        return currentCtgList.map((item, index) => (\r\n            <span\r\n                onClick={() => setNameInputValue(item)}\r\n                className=\"pg_mm_sublist_item\"\r\n                key={index}\r\n            >\r\n                {item}\r\n            </span>\r\n        ));\r\n    }\r\n\r\n    console.log(\"Re-render CategoryInput.\");\r\n    return (\r\n        <div style={{ marginBottom: 50, height: 30 }}>\r\n            <div className=\"pg_mm_path_parent\">\r\n                <span className=\"pg_mm_selected_path_item\">/</span>\r\n                {/* Render path */}\r\n                {pathRenderList.map((item, index) => (\r\n                    <span className=\"pg_mm_selected_path_item\" key={index}>\r\n                        {item.name}\r\n                    </span>\r\n                ))}\r\n                {/* Input path */}\r\n                <input\r\n                    style={style.borderLine}\r\n                    placeholder=\"Press [DEL] to back to previous folder.\"\r\n                    ref={nameInput}\r\n                    className=\"pg_mm_name_input\"\r\n                    onKeyUp={(evt) => handleKeyInput(evt)}\r\n                />\r\n            </div>\r\n            <div className=\"sub_list_redered\" style={{ marginTop: 5, position: \"relative\" }}>\r\n                {renderSubCategoryList()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport Layout from './Layout';\r\nimport * as hub from '../Utils/GithubCRUD';\r\nimport { StringUtils } from '../Utils/StringUtils';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport CategoryInput from '../ViewComponents/CategoryInput';\r\n// import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function WriterTab(props) {\r\n    // Use for control sync process\r\n    const refController = React.useRef(null);\r\n    // Use for store data\r\n    const mdParser = new MarkdownIt();\r\n    const [content, setContent] = useState(\"\");\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const title = useRef(\"\");\r\n    const category = useRef(\"\");\r\n\r\n    // Use for update file\r\n    const { updateAction } = props;\r\n    const { inputPath, clearPath } = updateAction;\r\n    const isCreated = !inputPath;\r\n    const originData = useRef({\r\n        title: null,\r\n        category: null,\r\n        content: null\r\n    });\r\n\r\n    const style = useSelector(state => state.style);\r\n\r\n    React.useEffect(() => {\r\n        if (isCreated) {\r\n            return;\r\n        }\r\n        //\r\n        clearPath();\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        // fetch API\r\n        ContentRender.makeContentObject(inputPath, signal).then(data => {\r\n            if (!data) return;\r\n            title.current = data.title;\r\n            category.current = data.category;\r\n            originData.current = {\r\n                title: data.title,\r\n                category: data.category,\r\n                originData: data.content\r\n            }\r\n            setContent(data.content);\r\n        });\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        }\r\n    }, [clearPath, inputPath, isCreated])\r\n\r\n    function handleImageUpload(file, callback) {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            const convertBase64UrlToBlob = (urlData) => {\r\n                let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]\r\n                let bstr = atob(arr[1])\r\n                let n = bstr.length\r\n                let u8arr = new Uint8Array(n)\r\n                while (n--) {\r\n                    u8arr[n] = bstr.charCodeAt(n)\r\n                }\r\n                return new Blob([u8arr], { type: mime })\r\n            }\r\n            const blob = convertBase64UrlToBlob(reader.result);\r\n            console.log(blob);\r\n            setTimeout(() => {\r\n                callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')\r\n            }, 1000)\r\n        }\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    /**\r\n     * After click button submit collect data from form and call API\r\n     */\r\n    async function handleSubmit() {\r\n        if (StringUtils.trim(title.current, \"\") === \"\") {\r\n            NotificationManager.error(\"Please input title!!!\");\r\n            return;\r\n        }\r\n\r\n        if (StringUtils.trim(category.current, \"\") === \"\") {\r\n            NotificationManager.error(\"Please select category!!!\");\r\n            return;\r\n        }\r\n\r\n        if (StringUtils.trim(content, \"\") === \"\" || StringUtils.trim(content, \"\").length < 50) {\r\n            NotificationManager.error(\"Please input content than 50 charactor!!!\");\r\n            return;\r\n        }\r\n\r\n        // correct data\r\n        // make data from form data for API body\r\n        let id = new Date().getTime();\r\n        let titleFix = /*StringUtils.nonAccentVietnamese(title.current);*/title.current;\r\n        let filePath = `${category.current}/${StringUtils.truncateString(titleFix, 25)}.md`;\r\n        filePath = filePath.replaceAll(\"//\", \"/\");\r\n\r\n        // content of file md\r\n        let fileContent = \"\";\r\n        fileContent += `---\\n`;\r\n        fileContent += `id: ${id}\\n`;\r\n        fileContent += `title: ${title.current}\\n`;\r\n        fileContent += `category: ${category.current}\\n`;\r\n        fileContent += `---\\n\\n`;\r\n        fileContent += content;\r\n\r\n        let commitMsg = isCreated\r\n            ? \"Create file \" + category.current + \"/\" + StringUtils.truncateString(titleFix, 25)\r\n            : \"Update file \" + inputPath;\r\n\r\n        let data = {\r\n            message: commitMsg,\r\n            content: StringUtils.base64Encode(fileContent)\r\n        }\r\n\r\n        store(data, filePath);\r\n    }\r\n\r\n    async function store(data, filePath) {\r\n        setIsProcessing(true);\r\n        if (isCreated) {\r\n            let response = await hub.create(data, filePath);\r\n            if (response && response.commit) {\r\n                NotificationManager.info(response.commit.html_url, \"Commited\", 5000, function () {\r\n                    window.open(response.commit.html_url, '_blank').focus();\r\n                }, false);\r\n                setIsProcessing(false);\r\n            }\r\n        } else {\r\n            if (title.current !== originData.current.title\r\n                || category.current !== originData.current.category) {\r\n                console.log(\"update path send...\")\r\n                await hub.move(\"main\", inputPath, filePath);\r\n            }\r\n\r\n            if (content !== originData.current.content) {\r\n                console.log(\"update content send...\")\r\n                await hub.update(data, filePath).catch(err => {\r\n                    NotificationManager.error(err + \"\");\r\n                });\r\n            }\r\n            setIsProcessing(false);\r\n            NotificationManager.info(\"Updated\");\r\n        }\r\n    }\r\n\r\n    function handleChangeCategory(source = { category: \"\", title: \"\" }) {\r\n        title.current = source.title;\r\n        category.current = source.category;\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            <Layout.MiddleContent>\r\n                <>\r\n                    <div style={{ width: \"90%\", height: 90, float: 'left' }}>\r\n                        <CategoryInput defaultTitle={title.current} defaultCategory={category.current} onChange={handleChangeCategory} />\r\n                    </div>\r\n                    {/* Save button  */}\r\n                    <button\r\n                        style={{ ...style.button, width: '9%', height: '40px', float: 'right'}}\r\n                        className='pg_mm_write_button'\r\n                        onClick={handleSubmit}>\r\n                        {isCreated ? \"Create\" : \"Update\"}\r\n                    </button>\r\n                </>\r\n                <div style={{ marginTop: '5px' }}></div>\r\n                <MdEditor\r\n                    value={content}\r\n                    onImageUpload={handleImageUpload}\r\n                    style={{ height: 'calc(100vh - 160px', width: '100%' }}\r\n                    renderHTML={text => mdParser.render(text)}\r\n                    onChange={({ html, text }) => setContent(text)}\r\n                />\r\n\r\n                {\r\n                    isProcessing ?\r\n                        <div className=\"pg_mm_loadding\">\r\n                            <img height=\"45px\"\r\n                                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                                alt=\"loadding...\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                        ''\r\n                }\r\n\r\n            </Layout.MiddleContent>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Layout from './Layout';\r\nimport { getSingleton as LocalCache } from '../Utils/CacheManager';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport './SettingsTab.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function SettingsTab() {\r\n    const urlRepositoryInput = React.useRef(null);\r\n    const cacheTimeDayInput = React.useRef(null);\r\n    const requestTimeoutInput = React.useRef(null);\r\n    const accessKeyInput = React.useRef(null);\r\n    const userNameInput = React.useRef(null);\r\n    const emailInput = React.useRef(null);\r\n\r\n    const CACHE_KEY = \"pg_mm_settings\";\r\n    const cache = React.useRef(LocalCache(CACHE_KEY));\r\n\r\n    const style = useSelector(state => state.style);\r\n\r\n    React.useEffect(() => {\r\n        if (cache.current.has(\"urlRepository\"))\r\n            urlRepositoryInput.current.value = cache.current.get(\"urlRepository\");\r\n        if (cache.current.has(\"cacheTime\"))\r\n            cacheTimeDayInput.current.value = cache.current.get(\"cacheTime\");\r\n        if (cache.current.has(\"requestTimeout\"))\r\n            requestTimeoutInput.current.value = cache.current.get(\"requestTimeout\");\r\n        if (cache.current.has(\"accessKey\"))\r\n            accessKeyInput.current.value = cache.current.get(\"accessKey\");\r\n        if (cache.current.has(\"userName\"))\r\n            userNameInput.current.value = cache.current.get(\"userName\");\r\n        if (cache.current.has(\"email\"))\r\n            emailInput.current.value = cache.current.get(\"email\");\r\n        return () => { }\r\n    }, [])\r\n\r\n\r\n    function handleSave() {\r\n        if (!window.confirm(\"Do you want to save?\") === true) {\r\n            return;\r\n        }\r\n        cache.current.add(\"urlRepository\", urlRepositoryInput.current.value);\r\n        cache.current.add(\"cacheTime\", cacheTimeDayInput.current.value);\r\n        cache.current.add(\"requestTimeout\", requestTimeoutInput.current.value);\r\n        cache.current.add(\"accessKey\", accessKeyInput.current.value);\r\n        cache.current.add(\"userName\", userNameInput.current.value);\r\n        cache.current.add(\"email\", emailInput.current.value);\r\n\r\n        NotificationManager.info(\"Success, reload after 2s.\");\r\n\r\n        setTimeout(function () {\r\n            window.location.reload();\r\n        }, 2000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            <Layout.MiddleContent >\r\n                <h3 className='pg_mm_settings_area'>Data settings</h3>\r\n                <input ref={urlRepositoryInput} className='pg_mm_settings_input' placeholder='URL to repository...'></input>\r\n                <span className='pg_mm_example'>https://github.com/cuongphuong/memo_data</span>\r\n                <br />\r\n                <input ref={cacheTimeDayInput} className='pg_mm_settings_input' placeholder='Cache time (ms)...'></input>\r\n                <span className='pg_mm_example'>50000</span>\r\n                <br />\r\n                <input ref={requestTimeoutInput} className='pg_mm_settings_input' placeholder='Request timeout (ms)...'></input>\r\n                <span className='pg_mm_example'>5000</span>\r\n\r\n                <h3 className='pg_mm_settings_area'>Github account setting</h3>\r\n                <input ref={accessKeyInput} className='pg_mm_settings_input' placeholder='Access key (if private repository)...'></input>\r\n                <span className='pg_mm_example'>ghp_ILEBZ7OZbzmnMd33z8MwStkSvp6zQq1MDYHQ</span>\r\n                <br />\r\n                <input ref={userNameInput} className='pg_mm_settings_input' placeholder='Username github...'></input>\r\n                <span className='pg_mm_example'>cungphuong</span>\r\n                <br />\r\n                <input ref={emailInput} className='pg_mm_settings_input' placeholder='Email...'></input>\r\n                <span className='pg_mm_example'>xxx@gmail.com</span>\r\n                <br />\r\n                <button style={style.button} onClick={handleSave} className='pg_mm_settings_submit'>Save</button>\r\n            </Layout.MiddleContent>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as ReducerAction from '../Actions/StyleReducer';\r\nimport \"./StyleSettings.css\";\r\n\r\nexport default function StyleSettings() {\r\n    const dispatch = useDispatch();\r\n\r\n    function changeStyle(color) {\r\n        let action = null;\r\n        switch (color) {\r\n            case \"tomato\":\r\n                action = ReducerAction.changeToTomatoStyle();\r\n                dispatch(action);\r\n                break;\r\n            case \"blue\":\r\n                action = ReducerAction.changeToBlueStyle();\r\n                dispatch(action);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='pg_mm_style_settings unselectable'>\r\n            <span onClick={() => changeStyle(\"tomato\")}></span>\r\n            <span onClick={() => changeStyle(\"blue\")}></span>\r\n        </div>\r\n    )\r\n}\r\n","export const changeToTomatoStyle = () => {\r\n    return {\r\n        type: \"CHANGE_TO_TOMATO_STYLE\"\r\n    }\r\n}\r\n\r\nexport const changeToBlueStyle = () => {\r\n    return {\r\n        type: \"CHANGE_TO_BLUE_STYLE\"\r\n    }\r\n}","import React from 'react'\nimport Layout from './LayoutComponents/Layout';\nimport QuickSearchTab from './LayoutComponents/QuickSearchTab';\nimport ListTab from './LayoutComponents/ListTab';\nimport WriterTab from './LayoutComponents/WriterTab';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport SettingsTab from './LayoutComponents/SettingsTab';\nimport { getSingleton as LocalCache } from \"./Utils/CacheManager.js\";\nimport StyleSettings from './ViewComponents/StyleSettings';\n\nfunction App() {\n    const menuList = [\"Search\", \"List\", \"Write\"];\n    // state\n    const [selectedMenu, setSelectedMenu] = React.useState(menuList[0]);\n    const viewContentObj = React.useRef(null);\n    const editPath = React.useRef(null);\n    const setViewContentObj = (obj) => { viewContentObj.current = obj; }\n\n    // Cache\n    const CACHE_KEY = \"pg_mm_settings\";\n    const cache = React.useRef(LocalCache(CACHE_KEY));\n\n    React.useEffect(() => {\n        // hub.move(\"main\", \"fd1/xx.md\").then(data => console.log(data));\n    }, []);\n\n    function onSubmitSuccess(obj) {\n        setViewContentObj(obj);\n        // Back to search component\n        setSelectedMenu(menuList[0]);\n    }\n\n    function onEditFile(filePath) {\n        editPath.current = filePath;\n        setSelectedMenu(menuList[2]);\n    }\n\n    const updateAction = {\n        inputPath: editPath.current,\n        clearPath: function () {\n            editPath.current = null;\n        }\n    }\n\n    function rederTabView() {\n        let items = cache.current.getAll();\n        if (cache.current.isExpired() || Object.keys(items).length === 0) {\n            return <SettingsTab />;\n        }\n\n        switch (selectedMenu) {\n            case \"Search\":\n                return <QuickSearchTab defaultPost={viewContentObj.current} />;\n            case \"List\":\n                return <ListTab onEdit={onEditFile} />;\n            case \"Write\":\n                return <WriterTab updateAction={updateAction} actionSubmit={onSubmitSuccess} />\n            case \"Settings\":\n                return <SettingsTab />;\n            default:\n                return <QuickSearchTab />;\n        }\n    }\n\n    return (\n        <Layout>\n            <Layout.Header>\n                <Layout.Header.Item\n                    key=\"Settings\"\n                    selected={selectedMenu}\n                    onClick={(title) => setSelectedMenu(title)}\n                    title=\"Settings\"\n                />\n\n                {menuList.map(item => item !== \"Setting\" ? (\n                    <Layout.Header.Item\n                        key={item}\n                        selected={selectedMenu}\n                        onClick={(title) => setSelectedMenu(title)}\n                        title={item}\n                    />\n                ) : \"\")}\n            </Layout.Header>\n\n            <Layout.FullContent>\n                {rederTabView()}\n            </Layout.FullContent>\n            <NotificationContainer />\n            <StyleSettings />\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initState = {\r\n    // ListTab.js\r\n    categoryList: [],\r\n    // CategoryList.Block.js\r\n    blockCategoryObj: {}\r\n}\r\n\r\nconst ListTabReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CATEGORY_LIST': {\r\n            let newCategoryList = [...action.payload];\r\n            return { ...state, categoryList: newCategoryList };\r\n        }\r\n        case 'SET_BLOCK_CATEGORY_OBJECT': {\r\n            let newBlockCategoryObj = { ...action.payload };\r\n            return { ...state, blockCategoryObj: newBlockCategoryObj };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default ListTabReducer;","let initState = {\r\n    mdContent: \"\", // Content for show on view\r\n    searchResultList: [], // Search result API\r\n    activeId: null, // ActiveId\r\n    searchKeyWord: \"\"\r\n}\r\n\r\nconst SearchReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"SearchReducer/setActiveId\": {\r\n            return { ...state, activeId: action.payload };\r\n        }\r\n        case \"SearchReducer/setMdContent\": {\r\n            return { ...state, mdContent: action.payload };\r\n        }\r\n        case \"SearchReducer/setSearchResultList\": {\r\n            let searchResultList = [...action.payload];\r\n            return { ...state, searchResultList: searchResultList };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default SearchReducer;","const orangeStyle = {\r\n    headerMenu: {\r\n        backgroundColor: \"#eec0c6\",\r\n        backgroundImage: \"linear-gradient(315deg, #eec0c6 0%, #e58c8a 74%)\"\r\n    },\r\n    menuSelected: {\r\n        background: \"#ffd6d6\",\r\n        color: \"#333 !important\"\r\n    },\r\n    leftBackground: {\r\n        backgroundColor: \"#f0edd9\"\r\n    },\r\n    borderLine: {\r\n        border: \"solid tomato 1px\"\r\n    },\r\n    borderLineHover: {\r\n        border: \"solid 1px rgb(252, 139, 119)\",\r\n        boxShadow: \"1px 1px 5px 1px rgb(252, 139, 119)\"\r\n    },\r\n    button: {\r\n        backgroundColor: \"#e58c8a\",\r\n        color: \"#fff\"\r\n    },\r\n    input: {\r\n        outline: \"none\",\r\n        border: \"solid tomato 1px\"\r\n    }\r\n}\r\n\r\nconst blueStyle = {\r\n    headerMenu: {\r\n        background: \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(69,163,149,1) 0%, rgba(0,212,255,1) 100%)\"\r\n    },\r\n    menuSelected: {\r\n        background: \"#b0f4e9\",\r\n        color: \"#333 !important\"\r\n    },\r\n    leftBackground: {\r\n        backgroundColor: \"#e5f2f0\"\r\n    },\r\n    borderLine: {\r\n        border: \"solid #84d9cc 1px\"\r\n    },\r\n    borderLineHover: {\r\n        border: \"solid 1px #3dab9b\",\r\n        boxShadow: \"1px 1px 5px 1px #3dab9b\"\r\n    },\r\n    button: {\r\n        backgroundColor: \"#3dab9b\",\r\n        color: \"#fff\"\r\n    },\r\n    input: {\r\n        outline: \"none\",\r\n        border: \"solid tomato 1px\"\r\n    }\r\n}\r\n\r\nconst StyleReducer = (state = blueStyle, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_TO_TOMATO_STYLE': {\r\n            return orangeStyle;\r\n        }\r\n        case 'CHANGE_TO_BLUE_STYLE': {\r\n            return blueStyle;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default StyleReducer;","import { combineReducers } from \"redux\";\r\nimport ListTabReducer from \"./ListTabReducer\";\r\nimport SearchReducer from \"./SearchReducer\";\r\nimport StyleReducer from \"./StyleReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    style: StyleReducer,\r\n    listTabData: ListTabReducer,\r\n    searchData: SearchReducer\r\n});\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}