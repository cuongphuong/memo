{"version":3,"sources":["LayoutComponents/Layout.js","Utils/RequestAPI.js","Utils/CacheManager.js","API/Github/Request.js","Utils/StringUtils.js","Utils/GithubCRUD.js","ViewComponents/Viewer.js","Utils/ContentRender.js","ViewComponents/List.js","Actions/SearchReducer.js","Utils/SearchHistoryCache.js","LayoutComponents/QuickSearchTab.js","Utils/SettingsCache.js","Utils/CategoryListCache.js","ViewComponents/CategoryList.js","LayoutComponents/ViewPopup.js","Actions/ListTabReducer.js","LayoutComponents/ListTab.js","ViewComponents/CategoryInput.js","Utils/ContentWriterCache.js","LayoutComponents/WriterTab.js","LayoutComponents/SettingsTab.js","ViewComponents/StyleSettings.js","Actions/StyleReducer.js","App.js","reportWebVitals.js","Reducers/ListTabReducer.js","Reducers/SearchReducer.js","Reducers/StyleReducer.js","Reducers/index.js","store.js","index.js"],"names":["Layout","children","className","Header","style","useSelector","state","id","headerMenu","Item","onClick","title","selected","menuSelected","SiderBar","leftBackground","RightContent","MiddleContent","FullContent","Fooder","RequestAPI","baseUrl","timeout","headers","makeRequestConfig","inp","configs","method","signal","data","body","sendRequest","url","a","fetch","then","response","ok","json","Error","status","catch","err","replaceAll","trim","encodeURI","requestConfig","add_config","base_url","in_headers","console","log","exe","CacheManager","key","expire","this","items","getAll","value","store","hasOwnProperty","localStorage","setItem","JSON","stringify","Date","getTime","stored","getItem","isExpired","parse","whenCached","age","clear","removeItem","cache","getSingleton","LocalCache","REPOSITORY_SOURCE","has","get","TIME_OUT","TOKEN_KEY","USE_NAME","E_MAIL","request","Authorization","Accept","author","name","email","searchFromGitHub","result","readContentByPath","path","getUser","username","save","message","content","filePath","updateContent","sha","getRef","ref","object","getTree","tree","postTree","base_tree","payload","commit","parent","parents","updateHead","head","StringUtils","str","EMPTY","Base64","encode","decode","defaultStr","ret","startsWith","substring","endsWith","length","trimL","toLowerCase","replace","num","slice","create","update","dataAPI","lastSha","deleteFile","move","branch","newPath","latestCommit","forEach","isNullOrEmpty","isDeleted","type","filter","p","rootTree","commit_msg","Viewer","props","source","window","confirm","NotificationManager","info","onDelete","React","useEffect","isPopupView","onEdit","onClose","margin","remarkPlugins","remarkGfm","ContentRender","apiResult","total_count","warning","error","pathFileList","Set","postObjectList","Promise","all","map","item","add","makeContentObject","contentObject","apiContentResult","base64Content","decodeContent","index","indexOf","DEFAULT_DELIMITER","cfgAreaStr","contentAreaStr","makeConfigFromResult","m","regex","exec","lastIndex","mathItems","split","configKey","configValue","Array","isArray","categoryList","resultObject","itemList","hasContnent","List","category","handleChooseItem","activeId","isActive","borderLineHover","strPath","tmpPathList","pop","truncPathListItem","setMdContent","mdContent","setSearchResultList","searchResultList","searchCache","SearchHistoryCache","getTopKeyWord","allItem","Object","keys","sort","b","insertKey","keysSorted","del","removeMinItem","QuickSearchTab","refController","useRef","dispatch","useDispatch","searchData","useState","isProcessing","setIsProcessing","searchCacheList","setSearchCacheList","inputObj","typingTimer","handleSearchChange","evt","clearTimeout","current","AbortController","setTimeout","aborted","doneTyping","target","keyword","search","apiResultContentList","setActiveId","focus","cacheKeywordList","abort","list","borderLine","onChange","placeholder","marginTop","width","src","alt","height","position","top","newSearchList","memo","settingsCache","SettingsCache","getCacheTime","setCacheTimeMinute","cacheTime","getUrlRepository","getRequestTimeout","setUrlRepository","urlRepository","setRequestTimeout","requestTimeout","getAccessKey","setAccessKey","accessKey","getUserName","setUserName","userName","getEmail","setEmail","getCacheMinutes","millis","toFixed","setTheme","theme","getTheme","categoryCache","CategoryListCache","setOrUpdateCache","trees","isCached","getMainCategory","element","includes","getElementByPath","elementPath","isExistedInPath","pathList","makeOutputList","updateDataIntoPath","newDataList","correctPath","newTree","push","mode","CategoryList","Row","handleItemClick","renderList","setRenderList","sourcePath","setSourcePath","isLoadding","setIsLoadding","fetchFromAPI","getAllItemFromPath","dataList","categoryObj","property","makeRenderList","gotoPath","tmpList","fixPathList","renderPathList","onClickSubFolder","Block","dirList","fileList","renderItem","ViewPopup","stype","setStype","display","animationName","animationDuration","setCategoryList","ListTab","listTabData","isDisplayPopup","setIsDisplayPopup","dataView","setDataView","fetchTreesList","callback","mainCategoryList","loadding","categoryName","CategoryInput","nameInput","pathDataList","pathRenderList","setPathRenderList","isFetching","setIsFetching","makeReturn","join","makeNewCategory","currentPath","subList","makeSubListFromAPI","lastItem","at","getAllCategoryList","subDataList","makePathStr","el","defaultTitle","categorys","defaultCategory","categoryPathList","marginBottom","onKeyUp","which","keyCode","charCode","handleKeyInput","currentCtgList","zIndex","color","renderSubCategoryList","writerCache","ContentWriterCache","setTitle","getTitle","setContent","getContent","releaseCache","setPath","getPath","getCategory","setIsUpdate","isUpdate","WriterTab","mdParser","MarkdownIt","updateAction","inputPath","clearPath","isCreateed","originData","titleFix","truncateString","fileContent","commitMsg","base64Encode","hub","html_url","open","float","button","marginLeft","backgroundColor","onImageUpload","file","reader","FileReader","onload","fileName","substr","res","download_url","readAsDataURL","renderHTML","text","render","html","SettingsTab","urlRepositoryInput","cacheTimeDayInput","requestTimeoutInput","accessKeyInput","userNameInput","emailInput","href","rel","location","reload","StyleSettings","changeStyle","action","App","menuList","selectedMenu","setSelectedMenu","viewContentObj","editPath","onSubmitSuccess","obj","setViewContentObj","onEditFile","defaultPost","actionSubmit","rederTabView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","blockCategoryObj","ListTabReducer","newCategoryList","newBlockCategoryObj","searchKeyWord","SearchReducer","orangeStyle","backgroundImage","background","border","boxShadow","input","outline","blueStyle","StyleReducer","rootReducer","combineReducers","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3d73855a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport \"./Layout.css\";\r\n\r\nconst Layout = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_grid-container\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Header = ({ children }) => {\r\n    const style = useSelector(state => state.style);\r\n    return (\r\n        <div className=\"pg_mm_header\" id=\"pg_mm_header-menu\">\r\n            <ul style={style.headerMenu}>\r\n                {children}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst HeaderItem = ({ onClick, title, selected }) => {\r\n    const style = useSelector(state => state.style);\r\n\r\n    if (title === \"Settings\") {\r\n        return <p onClick={() => onClick(title)} className='pg_mm_settings_menu_item unselectable'>⚙</p>\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <span\r\n                className=\"unselectable\"\r\n                style={selected === title ? style.menuSelected : {}}\r\n                onClick={() => onClick(title)}>\r\n                {title}\r\n            </span>\r\n        </li>\r\n    );\r\n}\r\n\r\nHeader.Item = HeaderItem;\r\n\r\nconst SiderBar = ({ children }) => {\r\n    const style = useSelector(state => state.style);\r\n    return (\r\n        <div\r\n            style={style.leftBackground}\r\n            className=\"pg_mm_left pg_mm_scroll\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst RightContent = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_right pg_mm_scroll\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MiddleContent = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_mid pg_mm_scroll\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst FullContent = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_content_full\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Fooder = () => {\r\n\r\n}\r\n\r\nLayout.Header = Header;\r\nLayout.SiderBar = SiderBar;\r\nLayout.RightContent = RightContent;\r\nLayout.MiddleContent = MiddleContent;\r\nLayout.FullContent = FullContent;\r\nLayout.Fooder = Fooder;\r\nexport default Layout;\r\n","export const RequestAPI = (function () {\r\n    let baseUrl = null;\r\n    let timeout = 10000;\r\n    let headers = {};\r\n\r\n    function makeRequestConfig(inp) {\r\n        if (!inp) return {};\r\n\r\n        let configs = {\r\n            headers: headers,\r\n            method: inp.method\r\n        }\r\n\r\n        if (inp.signal) {\r\n            configs = { ...configs, signal: inp.signal };\r\n        }\r\n\r\n        if (inp.data) {\r\n            configs = { ...configs, body: inp.data };\r\n        }\r\n        return configs;\r\n    }\r\n\r\n    async function sendRequest(url, configs) {\r\n        let json = await fetch(url, configs, timeout).then(function (response) {\r\n            if (!response.ok) {\r\n                throw new Error(response.status);\r\n            } else {\r\n                return response.json();\r\n            }\r\n        }).catch(err => {\r\n            throw new Error(err);\r\n        });\r\n        return json;\r\n    }\r\n\r\n    function config(configs = { base_url: \"\", timeout: 10000, in_headers: {} }) {\r\n        baseUrl = configs.base_url;\r\n        timeout = configs.timeout;\r\n        headers = configs.in_headers;\r\n\r\n        console.log(\"Request config \", baseUrl, timeout);\r\n    }\r\n\r\n    async function request(inp) {\r\n        // Make config request\r\n        let url = baseUrl + inp.url.replaceAll(\"//\", \"/\");\r\n        url = url.trim();\r\n        url = encodeURI(url);\r\n        let requestConfig = makeRequestConfig(inp);\r\n\r\n        return await sendRequest(url, requestConfig);\r\n    }\r\n\r\n    return {\r\n        add_config: config,\r\n        exe: request\r\n    };\r\n})();","class CacheManager {\r\n    constructor(key, expire = null) {\r\n        this.key = key;\r\n        this.expire = expire;\r\n        this.items = this.getAll();\r\n    }\r\n\r\n    add(key, value) {\r\n        if (key) {\r\n            this.items = { ...this.items, [key]: value }\r\n            // console.log('[CacheManager] add: ', key, this.items);\r\n        }\r\n        this.store();\r\n    }\r\n\r\n    del(key) {\r\n        if (key) {\r\n            delete this.items[key];\r\n        }\r\n        this.store();\r\n    }\r\n\r\n    has(key) {\r\n        return this.items.hasOwnProperty(key);\r\n    }\r\n\r\n    store() {\r\n        localStorage.setItem(this.key, JSON.stringify(this.items));\r\n        localStorage.setItem(this.key + ':ts', new Date().getTime());\r\n    }\r\n\r\n    get(key) {\r\n        let all = this.getAll();\r\n        return all[key];\r\n    }\r\n\r\n    getAll() {\r\n        let stored = localStorage.getItem(this.key);\r\n        return (this.isExpired() || !stored) ?\r\n            {} :\r\n            JSON.parse(stored);\r\n    }\r\n\r\n    isExpired() {\r\n        let whenCached = localStorage.getItem(this.key + ':ts')\r\n        let age = (new Date().getTime() - whenCached);\r\n\r\n        if (this.expire && age > this.expire) {\r\n            this.clear();\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        localStorage.removeItem(this.key)\r\n        localStorage.removeItem(this.key + ':ts')\r\n    }\r\n}\r\n\r\n/**\r\n * Caches objects as singletons. Alternative, can ignore this.items and just load\r\n * always from localStorage.\r\n * @type {Object}\r\n */\r\n\r\nlet cache = {};\r\n/**\r\n * [getSingleton description]\r\n * @method getSingleton\r\n * @param  {string}     key           Key for localStorage\r\n * @param  {Number}     [expire=null] Expiration time in seconds\r\n * @param  {String}     [sep=',']     separator in case. Default: ,\r\n * @return {CacheManager}             A singleton of CacheCollection\r\n */\r\nfunction getSingleton(key, expire = null) {\r\n    if (!cache.hasOwnProperty(key)) {\r\n        cache[key] = new CacheManager(key, expire);\r\n    }\r\n    return cache[key];\r\n}\r\nexport { getSingleton, CacheManager };","import { RequestAPI as request } from '../../Utils/RequestAPI';\r\nimport { getSingleton as LocalCache } from '../../Utils/CacheManager';\r\n\r\nconst CACHE_KEY = \"pg_mm_settings\";\r\nconst cache = LocalCache(CACHE_KEY);\r\nconst REPOSITORY_SOURCE = cache.has(\"urlRepository\")\r\n    ? cache.get(\"urlRepository\").replaceAll(\"https://github.com/\", \"\")\r\n    : \"\";\r\n\r\nconst TIME_OUT = cache.has(\"requestTimeout\") ? \"Token \" + cache.get(\"requestTimeout\") : \"\";\r\nconst TOKEN_KEY = cache.has(\"accessKey\") ? \"Token \" + cache.get(\"accessKey\") : \"\";\r\nconst USE_NAME = cache.has(\"userName\") ? \"Token \" + cache.get(\"userName\") : \"\";\r\nconst E_MAIL = cache.has(\"email\") ? \"Token \" + cache.get(\"email\") : \"\";\r\n\r\n// Request config\r\nrequest.add_config({\r\n    base_url: \"https://api.github.com\",\r\n    timeout: TIME_OUT,\r\n    in_headers: {\r\n        Authorization: TOKEN_KEY,\r\n        Accept: \"application/vnd.github.v3+json\",\r\n    }\r\n});\r\n\r\nconst author = {\r\n    name: USE_NAME,\r\n    email: E_MAIL\r\n}\r\n\r\n// Export API\r\n/**\r\n * Search file match keyword result from Github repository\r\n * @param {String} key Keyword for search code\r\n * @returns Object Search file and infomation file\r\n */\r\nexport async function searchFromGitHub(key, signal) {\r\n    let result = await request.exe({\r\n        url: `/search/code?q=${key}+repo:${REPOSITORY_SOURCE}`,\r\n        method: \"GET\",\r\n        signal: signal\r\n    }).catch(err => {\r\n        console.log(err);\r\n        return [];\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Get all infomation from path resource\r\n * @param {String} path Path to resource\r\n * @returns Object\r\n */\r\nexport async function readContentByPath(path, signal) {\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${path}`,\r\n        method: \"GET\",\r\n        signal: signal\r\n    }).catch(err => {\r\n        console.log(err)\r\n        return null;\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n *  Get user information from Github\r\n * @param username\r\n * @returns tree \r\n */\r\nexport async function getUser(username) {\r\n    var url = username ? '/users/' + username : '/user';\r\n    let result = await request.exe({\r\n        url: url,\r\n        method: \"GET\",\r\n    }).catch(err => {\r\n        return null;\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Save a file into Git repository\r\n * @param {Object} data Content of file, encode Base64 \r\n * @param {String} filePath Path to file location\r\n * @returns \r\n */\r\nexport function save(data = {\r\n    message: 'Add file',\r\n    content: 'KEVtcHR5KQ==', // (Empty)\r\n}, filePath) {\r\n    return request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${filePath}`,\r\n        method: \"PUT\",\r\n        data: JSON.stringify(data)\r\n    });\r\n}\r\n\r\n/**\r\n * Update content of file in Github\r\n * @param {Object} data Content of file, encode Base64 \r\n * @param {String} filePath Path to file location\r\n * @returns \r\n */\r\nexport function updateContent(data = {\r\n    message: 'Update content', // (Empty)\r\n    content: 'KEVtcHR5KQ==',\r\n    sha: ''\r\n}, filePath) {\r\n    return request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${filePath}`,\r\n        method: \"PUT\",\r\n        data: JSON.stringify(data)\r\n    });\r\n}\r\n\r\n/**\r\n * Get a particular reference\r\n * @param {*} ref heads/branch\r\n * @returns sha\r\n */\r\nexport async function getRef(ref = \"heads/main\") {\r\n    // repos/cuongphuong/memo_data/git/refs/heads/main\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/refs/${ref}`,\r\n        method: \"GET\"\r\n    });\r\n\r\n    return result.object.sha;\r\n};\r\n\r\n/**\r\n * Retrieve the tree a commit points to\r\n * @param {String} sha  ex: 76ba6ba67867c6069cbb9c377a0a2c909145c778?recursive=true\r\n * @returns tree \r\n */\r\nexport async function getTree(sha = \"\") {\r\n    // repos/cuongphuong/memo_data/git/trees/76ba6ba67867c6069cbb9c377a0a2c909145c778\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/trees/${sha}`,\r\n        method: \"GET\"\r\n    });\r\n\r\n    return result.tree;\r\n};\r\n\r\n/**\r\n *  Post a new tree object having a file path pointer replaced with a new blob SHA getting a tree SHA back\r\n * @param {Array} tree  Tree\r\n * @returns tree \r\n */\r\nexport async function postTree(tree, base_tree) {\r\n    if (!tree) return;\r\n\r\n    let payload = { tree: tree };\r\n\r\n    if (base_tree) payload = { ...payload, base_tree: base_tree }\r\n\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/trees`,\r\n        method: \"POST\",\r\n        data: JSON.stringify(payload)\r\n    });\r\n    return result.sha;\r\n};\r\n\r\n/**\r\n * Create a new commit object with the current commit SHA as the parent and the new tree SHA, getting a commit SHA back\r\n * \r\n */\r\nexport async function commit(parent, tree, message) {\r\n    let userData = getUser(author.name);\r\n    if (!userData) return;\r\n    let data = {\r\n        message: message,\r\n        author: author,\r\n        parents: [\r\n            parent\r\n        ],\r\n        tree: tree\r\n    }\r\n\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/commits`,\r\n        method: 'POST',\r\n        data: JSON.stringify(data)\r\n    }).catch(err => {\r\n        return null;\r\n    });\r\n    return result.sha;\r\n}\r\n\r\nexport async function updateHead(head, commit) {\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/refs/heads/` + head,\r\n        method: 'PATCH',\r\n        data: JSON.stringify({\r\n            sha: commit\r\n        })\r\n    }).catch(err => {\r\n        return null;\r\n    });\r\n    return result;\r\n}\r\n","import { Base64 } from 'js-base64';\r\n\r\nexport class StringUtils {\r\n    static EMPTY = \"\";\r\n\r\n    /**\r\n     * Check whether a string is null or empty.\r\n     * @param str value\r\n     * @returns true : if string is null or empty\r\n     */\r\n    static isNullOrEmpty(str) {\r\n        if (!str || str === null || str === StringUtils.EMPTY) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Encoding str to Base64\r\n     * @param str value\r\n     * @returns Base64 str\r\n     */\r\n    static base64Encode(str) {\r\n        if (!str || str === null) {\r\n            return null;\r\n        } else {\r\n            return Base64.encode(str);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Decode Base64 to str\r\n     * @param Base64 str\r\n     * @returns Value decode\r\n     */\r\n    static base64decode(str) {\r\n        if (!str || str === null) {\r\n            return null;\r\n        } else {\r\n            return Base64.decode(str);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Removes \" \", \"　\", and \\t from the beginning of the 'str'. Returns 'defaultStr' if 'str' is null\r\n     * or trimmed string is \"\".\r\n     *\r\n     * @param str\r\n     * @param defaultStr\r\n     * @return trimmed string\r\n     */\r\n    static trimL(str, defaultStr) {\r\n\r\n        let ret = str;\r\n\r\n        if (!ret || ret === null) {\r\n            ret = \"\";\r\n        }\r\n        // remove ' ', '　', '\\t'\r\n        while (ret.startsWith(\" \") || ret.startsWith(\"　\") || ret.startsWith(\"\\t\") || ret.startsWith(\"\\n\")) {\r\n            ret = ret.substring(1);\r\n        }\r\n\r\n        if (ret === \"\") {\r\n            ret = defaultStr;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Removes \" \", \"　\", and \\t from the end of the 'str'. Returns 'defaultStr' if 'str' is null or\r\n     * trimmed string is \"\".\r\n     *\r\n     * @param str\r\n     * @param defaultStr\r\n     * @return trimmed string\r\n     */\r\n    static trimR(str, defaultStr) {\r\n\r\n        let ret = str;\r\n\r\n        if (!ret || ret === null) {\r\n            ret = \"\";\r\n        }\r\n        // Delete \" \", \"　\", and \\t\r\n        while (ret.endsWith(\" \") || ret.endsWith(\"　\") || ret.endsWith(\"\\t\")) {\r\n            ret = ret.substring(0, ret.length() - 1);\r\n        }\r\n\r\n        if (ret === \"\") {\r\n            ret = defaultStr;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Removes \" \", \"　\", and \\t from both ends of the 'str'. Returns 'defaultStr' if 'str' is null or\r\n     * trimmed string is \"\".\r\n     *\r\n     * @param str\r\n     * @param defaultStr\r\n     * @return trimmed string\r\n     */\r\n    static trim(str, defaultStr) {\r\n\r\n        let ret = str;\r\n        // Delete \" \", \"　\", and \\t\r\n        ret = StringUtils.trimL(ret, defaultStr);\r\n        //ret = StringUtils.trimR(ret, defaultStr);\r\n\r\n        return ret;\r\n    }\r\n\r\n    static nonAccentVietnamese(str) {\r\n        str = str.toLowerCase();\r\n        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\r\n        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\r\n        str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\r\n        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\r\n        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\r\n        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\r\n        str = str.replace(/đ/g, \"d\");\r\n        // Some system encode vietnamese combining accent as individual utf-8 characters\r\n        str = str.replace(/\\u0300|\\u0301|\\u0303|\\u0309|\\u0323/g, \"\"); // Huyền sắc hỏi ngã nặng\r\n        str = str.replace(/\\u02C6|\\u0306|\\u031B/g, \"\"); // Â, Ê, Ă, Ơ, Ư\r\n        str = str.replace(/\\s/g, \"-\");\r\n        return str;\r\n    }\r\n\r\n    static truncateString(str, num) {\r\n        if (str.length > num) {\r\n            return str.slice(0, num) + \"...\";\r\n        } else {\r\n            return str;\r\n        }\r\n    }\r\n}","import * as request from \"../API/Github/Request\";\r\nimport { StringUtils } from \"./StringUtils\";\r\n\r\n/**\r\n * Get all infomation from path resource\r\n * @param {String} path Path to resource\r\n * @returns Object\r\n */\r\nexport function readContent(path) {\r\n    return request.readContentByPath(path);\r\n}\r\n\r\n/**\r\n * Save a file into Git repository\r\n * @param {Object} data Content of file, encode Base64\r\n * @param {String} filePath Path to file location\r\n * @returns\r\n */\r\nexport function create(data = {\r\n    message: 'Add file',\r\n    content: 'KEVtcHR5KQ==', // (Empty)\r\n}, filePath) {\r\n    return request.save(data, filePath);\r\n}\r\n\r\n/**\r\n * Update content of file in Github\r\n * @param {Object} data Content of file, encode Base64\r\n * @param {String} filePath Path to file location\r\n * @returns\r\n */\r\nexport async function update(data = {\r\n    message: 'Add file',\r\n    content: 'KEVtcHR5KQ==', // (Empty)\r\n}, filePath) {\r\n\r\n    // Get last SHA version on Github\r\n    let dataAPI = await request.readContentByPath(filePath);\r\n    if (dataAPI === null) return;\r\n    let lastSha = dataAPI.sha;\r\n    data.sha = lastSha;\r\n    return request.updateContent(data, filePath);\r\n}\r\n\r\n/**\r\n * Delete a file \r\n * @param {String} filePath path to file will delete\r\n */\r\nexport function deleteFile(filePath) {\r\n    return move(\"main\", filePath);\r\n}\r\n\r\n/**\r\n * Move || remove a file to a new location\r\n * @param {String} branch master \r\n * @param {String} path \r\n * @param {String} newPath not existed then remove path\r\n * @returns true if move successfully\r\n */\r\nexport async function move(branch = \"main\", path, newPath) {\r\n    // Get last SHA of main branch\r\n    let latestCommit = await request.getRef(\"heads/main\");\r\n    // Get tree by last SHA\r\n    let tree = await request.getTree(latestCommit + '?recursive=true');\r\n    // Update tree\r\n    tree.forEach(function (ref) {\r\n        if ((!newPath || StringUtils.isNullOrEmpty(newPath)) && ref.path === path) {\r\n            ref.isDeleted = true;\r\n        } else {\r\n            if (ref.path === path) ref.path = newPath;\r\n        }\r\n\r\n        if (ref.type === \"tree\") {\r\n            ref.isDeleted = true;\r\n        }\r\n    });\r\n\r\n    tree = tree.filter(p => !p.isDeleted);\r\n    // Post update tree to API\r\n    let rootTree = await request.postTree(tree);\r\n    // Create a commit\r\n    let commit_msg = (!newPath || StringUtils.isNullOrEmpty(newPath))\r\n        ? \"Remove \" + path\r\n        : \"Move \" + path + \" to \" + newPath;\r\n    let commit = await request.commit(latestCommit, rootTree, commit_msg);\r\n    // Update HEAD to new commit\r\n    let result = await request.updateHead(branch, commit);\r\n    return result != null;\r\n}","import React from 'react'\r\nimport { NotificationManager } from 'react-notifications';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport { deleteFile } from '../Utils/GithubCRUD';\r\nimport \"./Viewer.css\";\r\n\r\nexport default function Viewer(props) {\r\n\r\n    let { source } = props;\r\n\r\n    React.useEffect(() => {\r\n        return () => {\r\n        }\r\n    }, [props.isPopupView])\r\n\r\n    function onEdit() {\r\n        props.onEdit(props.source.filePath);\r\n    }\r\n\r\n    async function onDelete() {\r\n        if (!window.confirm(\"Do you want to delete \" + props.source.filePath) === true) {\r\n            return;\r\n        }\r\n        await deleteFile(props.source.filePath);\r\n        NotificationManager.info(\"Deleted.\");\r\n\r\n        props.onDelete();\r\n    }\r\n\r\n    return (\r\n        <section className=\"section sec-html visible\">\r\n            <span onClick={onEdit} className=\"pg_mm_view_edit_button\">Edit [/]</span>\r\n            <span onClick={onDelete} className=\"pg_mm_view_delete_button\">Delete [#]</span>\r\n            {\r\n                props.isPopupView ?\r\n                    <span onClick={() => { props.onClose() }} className=\"pg_mm_view_cls_button\">Close [x]</span>\r\n                    :\r\n                    \"\"\r\n            }\r\n            <div className=\"section-container html-wrap\">\r\n                <div className=\"custom-html-style\">\r\n                    <h2 style={{ margin: '5px 0' }}>{source.title}</h2>\r\n                    {source.title ? <hr style={{ margin: '10px 0' }} /> : ''}\r\n                    <div className='pg_mm_view_content'>\r\n                        <ReactMarkdown children={source.content} remarkPlugins={[remarkGfm]} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import { searchFromGitHub, readContentByPath } from \"../API/Github/Request\";\r\nimport { StringUtils } from \"./StringUtils\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { NotificationManager } from 'react-notifications';\r\nexport class ContentRender {\r\n    // Delimiter between config and content\r\n    static DEFAULT_DELIMITER = \"---\";\r\n\r\n    /**\r\n     * Get content list from keyword search\r\n     * @param {String} str Keyword for search\r\n     * @returns List of content search\r\n     */\r\n    static async search(str, signal) {\r\n        if (StringUtils.isNullOrEmpty(str)) {\r\n            console.log(\"Search keyword is empty\");\r\n            return;\r\n        }\r\n\r\n        let apiResult\r\n        try {\r\n            apiResult = await searchFromGitHub(str, signal);\r\n            let totalCount = apiResult.total_count;\r\n\r\n            if (!totalCount) {\r\n                console.log(`No file mapping result key [${str}]`);\r\n                NotificationManager.info(`No file mapping result key [${str}]`);\r\n                return;\r\n            }\r\n        } catch (error) {\r\n            NotificationManager.console.warning(\"Not response data from API.\");\r\n            console.error(\"Not response data from API.\");\r\n            return;\r\n        }\r\n\r\n        let items = apiResult.items;\r\n        let pathFileList = new Set();\r\n        let postObjectList = [];\r\n\r\n        await Promise.all(items.map(async (item) => {\r\n            if (pathFileList.has(item.path)) {\r\n                return;\r\n            }\r\n\r\n            pathFileList.add(item.path);\r\n            let contentObject = await ContentRender.makeContentObject(item.path);\r\n            if (contentObject !== null) {\r\n                postObjectList = [...postObjectList, contentObject];\r\n            }\r\n        }));\r\n\r\n        return postObjectList;\r\n    }\r\n\r\n    /**\r\n     * Call to github content for get content file from file path\r\n     * @param {String} filePath Path to file on Github\r\n     * @returns Content object from JSON content\r\n     */\r\n    static async makeContentObject(filePath, signal) {\r\n        // Is invalid path\r\n        if (!filePath) {\r\n            return;\r\n        }\r\n\r\n        filePath = filePath.trim();\r\n        let apiContentResult = await readContentByPath(filePath, signal);\r\n        let contentObject = {};\r\n        if (apiContentResult && !StringUtils.isNullOrEmpty(apiContentResult.content)) {\r\n            let base64Content = apiContentResult.content;\r\n            let decodeContent = Base64.decode(base64Content);\r\n\r\n            // Get index of str delimiter config and content\r\n            let index = decodeContent.indexOf(ContentRender.DEFAULT_DELIMITER, 1);\r\n            if (index === -1) {\r\n                console.log(`Content file ${filePath} is invalid.`)\r\n                return null;\r\n            }\r\n            let cfgAreaStr = decodeContent.substring(0, index + ContentRender.DEFAULT_DELIMITER.length);\r\n            let contentAreaStr = decodeContent.substring(index + ContentRender.DEFAULT_DELIMITER.length);\r\n\r\n            let configs = ContentRender.makeConfigFromResult(cfgAreaStr);\r\n            let content = StringUtils.trim(contentAreaStr);\r\n            contentObject = { ...configs, content };\r\n            contentObject = { ...contentObject, filePath: filePath };\r\n\r\n            return contentObject;\r\n        } else {\r\n            console.log(\"Can't load data for \" + filePath);\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Make config object from content file result from API\r\n     * @param {Strng} str Config area from API result to objectt\r\n     * @returns Object configs\r\n     */\r\n    static makeConfigFromResult(str) {\r\n        const regex = /^[a-zA-Z]+:(.*)$/gm;\r\n        let m;\r\n\r\n        let configs = {};\r\n        while ((m = regex.exec(str)) !== null) {\r\n            if (m.index === regex.lastIndex) {\r\n                regex.lastIndex++;\r\n            }\r\n\r\n            let mathItems = m[0].split(\":\");\r\n            let configKey = StringUtils.trim(mathItems[0]);\r\n            let configValue = StringUtils.trim(mathItems[1]);\r\n\r\n            configs = { ...configs, [configKey]: configValue };\r\n        }\r\n        return configs;\r\n    }\r\n\r\n    /**\r\n     * Get on category level 1 on Github repository\r\n     * @param {String} path path to resource\r\n     * @returns Array All categorys on level 1\r\n     */\r\n    static async getAllCategoryList(path, signal) {\r\n        let result = await readContentByPath(path, signal);\r\n        if (!result || !Array.isArray(result) || result.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        let categoryList = [];\r\n        result.forEach(item => {\r\n            if (item.type === \"dir\" && !StringUtils.isNullOrEmpty(item.name)) {\r\n                categoryList = [...categoryList, item.name];\r\n            }\r\n        });\r\n\r\n        return categoryList;\r\n    }\r\n\r\n    /**\r\n     * Get file, dir from path resource in Git repository\r\n     * @param {String} path Path to resource for get data\r\n     * @returns Object File and Dir from resource\r\n     */\r\n    static async getAllItemFromPath(path) {\r\n        let result = await readContentByPath(path);\r\n\r\n        if (!result || !Array.isArray(result) || result.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        let resultObject = {\r\n            itemList: []\r\n        };\r\n\r\n        result.forEach(item => {\r\n            if (item.type === \"dir\" && !StringUtils.isNullOrEmpty(item.name)) {\r\n                resultObject = { ...resultObject, [item.name]: { hasContnent: false } }\r\n            }\r\n\r\n            if (item.type === \"file\" && !StringUtils.isNullOrEmpty(item.name)) {\r\n                resultObject = {\r\n                    ...resultObject, itemList: [...resultObject.itemList, {\r\n                        name: item.name,\r\n                        path: item.path\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n        return resultObject;\r\n    }\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { StringUtils } from '../Utils/StringUtils';\r\n\r\nfunction List({ children }) {\r\n    return (\r\n        <div className=\"pg_mm_list\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ListItem({ source = {\r\n    title: \"n/a\",\r\n    content: \"n/a\",\r\n    id: \"n/a\",\r\n    category: \"n/a\"\r\n}, handleChooseItem, activeId }) {\r\n    const style = useSelector(state => state.style);\r\n\r\n    function handleClick() {\r\n        handleChooseItem(source);\r\n    }\r\n\r\n    function isActive() {\r\n        if (activeId === source.id) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function truncPathListItem(strPath) {\r\n        let tmpPathList = strPath.split(\"/\");\r\n        tmpPathList = tmpPathList.filter(p => !StringUtils.isNullOrEmpty(p));\r\n        return tmpPathList.pop();\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={isActive() ? style.borderLineHover : {}}\r\n            className={isActive() ? \"pg_mm_list_item pg_mm_list_item_active\" : \"pg_mm_list_item\"}\r\n            onClick={handleClick}\r\n        >\r\n            <h3 className=\"pg_mm_trunc\">{source.title}</h3>\r\n            <p className=\"pg_mm_trunc\">{source.content}</p>\r\n            <div className=\"pg_mm_list_item_info\">\r\n                <span className=\"pg_mm_trunc\">{`${source.id}`}</span>\r\n                <span\r\n                    style={style.headerMenu}\r\n                    className=\"pg_mm_trunc\">{truncPathListItem(source.category)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nList.Item = ListItem;\r\nexport default List;","export const setActiveId = (activeId) => {\r\n    return {\r\n        type: \"SearchReducer/setActiveId\",\r\n        payload: activeId\r\n    }\r\n}\r\n\r\nexport const setMdContent = (mdContent) => {\r\n    return {\r\n        type: \"SearchReducer/setMdContent\",\r\n        payload: mdContent\r\n    }\r\n}\r\n\r\nexport const setSearchResultList = (searchResultList) => {\r\n    return {\r\n        type: \"SearchReducer/setSearchResultList\",\r\n        payload: searchResultList\r\n    }\r\n}","import { getSingleton as LocalCache } from \"./CacheManager\";\r\n\r\nconst SEARCH_CACHE_KEY = \"pg_mm_search\";\r\nconst searchCache = LocalCache(SEARCH_CACHE_KEY, null);\r\n\r\nconst SearchHistoryCache = (function () {\r\n    function getTopKeyWord() {\r\n        let allItem = searchCache.getAll();\r\n        let keysSorted = Object.keys(allItem).sort(function (a, b) {\r\n            return allItem[b] - allItem[a]\r\n        });\r\n        return keysSorted;\r\n    }\r\n\r\n    function insertKey(key) {\r\n        let allItem = searchCache.getAll();\r\n        if (Object.keys(allItem).length >= 10) {\r\n            removeMinItem(allItem);\r\n        }\r\n\r\n        if (searchCache.has(key)) {\r\n            let value = searchCache.get(key);\r\n            searchCache.add(key, ++value);\r\n        } else {\r\n            searchCache.add(key, 1);\r\n        }\r\n    }\r\n\r\n    function removeMinItem(allItem) {\r\n        let keysSorted = Object.keys(allItem).sort(function (a, b) {\r\n            return allItem[a] - allItem[b]\r\n        });\r\n        console.log(keysSorted[0]);\r\n        searchCache.del(keysSorted[0]);\r\n    }\r\n\r\n    return {\r\n        getTopKeyWord: getTopKeyWord,\r\n        insertKey: insertKey\r\n    };\r\n})();\r\n\r\nexport default SearchHistoryCache;","import React, { useState, useRef, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport Viewer from '../ViewComponents/Viewer';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\nimport List from '../ViewComponents/List';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setActiveId, setMdContent, setSearchResultList } from '../Actions/SearchReducer';\r\nimport SearchHistoryCache from '../Utils/SearchHistoryCache';\r\n\r\nfunction QuickSearchTab(props) {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    const style = useSelector(state => state.style);\r\n\r\n    // Logic state\r\n    const dispatch = useDispatch();\r\n    const searchResultList = useSelector(state => state.searchData.searchResultList);\r\n    const mdContent = useSelector(state => state.searchData.mdContent);\r\n    const activeId = useSelector(state => state.searchData.activeId);\r\n\r\n    // UI state\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [searchCacheList, setSearchCacheList] = useState([]);\r\n    const inputObj = useRef(null);\r\n    const typingTimer = useRef(null); // timer identifier \r\n    let doneTypingInterval = 600;  // time in ms (600ms)\r\n\r\n    useEffect(() => {\r\n        refController.current = new AbortController();\r\n        inputObj.current.focus();\r\n\r\n        // Load cache\r\n        let cacheKeywordList = SearchHistoryCache.getTopKeyWord();\r\n        setSearchCacheList(cacheKeywordList);\r\n\r\n        return () => {\r\n            console.log(\"Clean QuikTabSearch\")\r\n            refController.current.abort();\r\n        }\r\n    }, [])\r\n\r\n    function handleSearchChange(evt) {\r\n        clearTimeout(typingTimer.current);\r\n        //\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        typingTimer.current = setTimeout(function () {\r\n            if (signal.aborted) {\r\n                return;\r\n            }\r\n            dispatch(setSearchResultList([]));\r\n            doneTyping(evt.target.value)\r\n        }, doneTypingInterval);\r\n    }\r\n\r\n    async function doneTyping(keyword) {\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        // fetch API\r\n        setIsProcessing(true);\r\n        let apiResultContentList = await ContentRender.search(keyword, signal);\r\n        if (apiResultContentList && apiResultContentList.length > 0) {\r\n            SearchHistoryCache.insertKey(keyword);\r\n            dispatch(setSearchResultList(apiResultContentList));\r\n        }\r\n        setIsProcessing(false);\r\n    }\r\n\r\n    function handleChooseItem(source) {\r\n        dispatch(setActiveId(source.id));\r\n        dispatch(setMdContent(source));\r\n    }\r\n\r\n    function onEdit(filePath) {\r\n        props.onEdit(filePath);\r\n    }\r\n\r\n    function onDelete() {\r\n        let newSearchList = searchResultList.filter(p => p.id !== mdContent.id);\r\n        dispatch(setMdContent(null));\r\n        dispatch(setSearchResultList(newSearchList));\r\n    }\r\n\r\n    function renderSearchList() {\r\n        return (\r\n            <>\r\n                {\r\n                    searchResultList.length > 0 ?\r\n                        <List>\r\n                            {searchResultList.map((item, index) => <List.Item activeId={activeId}\r\n                                handleChooseItem={handleChooseItem}\r\n                                key={index}\r\n                                source={item}\r\n                            />)}\r\n                        </List>\r\n                        :\r\n                        <img className='unselectable' width=\"100%\"\r\n                            src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/empty.png\"\r\n                            alt=\"empty\"\r\n                        />\r\n                }\r\n\r\n                {\r\n                    isProcessing ?\r\n                        <div className=\"pg_mm_search_loadding\">\r\n                            <img height=\"45px\"\r\n                                style={{ position: 'absolute', top: 110 }}\r\n                                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                                alt=\"loadding...\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                        ''\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    console.log(mdContent);\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            <Layout.SiderBar>\r\n                <input\r\n                    list=\"cacheList\"\r\n                    style={style.borderLine}\r\n                    ref={inputObj}\r\n                    onChange={(evt) => { handleSearchChange(evt) }}\r\n                    type=\"text\"\r\n                    className=\"pg_mm_search_input\"\r\n                    placeholder=\"Type for search...\"\r\n                />\r\n                <datalist id=\"cacheList\">\r\n                    {searchCacheList.map((item, index) => <option key={index} value={item} />)}\r\n                </datalist>\r\n                <div style={{ marginTop: '5px' }}></div>\r\n                {renderSearchList()}\r\n            </Layout.SiderBar>\r\n            <Layout.RightContent>\r\n                {\r\n                    mdContent !== null ?\r\n                        <Viewer\r\n                            onEdit={onEdit}\r\n                            onDelete={onDelete}\r\n                            source={mdContent}\r\n                        /> : \"\"\r\n                }\r\n\r\n                <div className='pg_mm_logo unselectable'>\r\n                    <img width=\"350px\"\r\n                        src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/logo.png\"\r\n                        alt=\"loadding...\"\r\n                    />\r\n                </div>\r\n            </Layout.RightContent>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(QuickSearchTab);","import { getSingleton as LocalCache } from \"./CacheManager\";\r\n\r\nconst CACHE_KEY = \"pg_mm_settings\";\r\nconst settingsCache = LocalCache(CACHE_KEY);\r\n\r\nconst SettingsCache = (function () {\r\n\r\n    function getCacheTime() {\r\n        if (settingsCache.has(\"cacheTime\"))\r\n            return settingsCache.get(\"cacheTime\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setCacheTimeMinute(cacheTime) {\r\n        settingsCache.add(\"cacheTime\", (cacheTime * 60000));\r\n    }\r\n\r\n    function getUrlRepository() {\r\n        if (settingsCache.has(\"urlRepository\"))\r\n            return settingsCache.get(\"urlRepository\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setUrlRepository(urlRepository) {\r\n        settingsCache.add(\"urlRepository\", urlRepository);\r\n    }\r\n\r\n    function getRequestTimeout() {\r\n        if (settingsCache.has(\"requestTimeout\"))\r\n            return settingsCache.get(\"requestTimeout\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setRequestTimeout(requestTimeout) {\r\n        settingsCache.add(\"requestTimeout\", requestTimeout);\r\n    }\r\n\r\n    function getAccessKey() {\r\n        if (settingsCache.has(\"accessKey\"))\r\n            return settingsCache.get(\"accessKey\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setAccessKey(accessKey) {\r\n        settingsCache.add(\"accessKey\", accessKey);\r\n    }\r\n\r\n    function getUserName() {\r\n        if (settingsCache.has(\"userName\"))\r\n            return settingsCache.get(\"userName\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setUserName(userName) {\r\n        settingsCache.add(\"userName\", userName);\r\n    }\r\n\r\n    function getEmail() {\r\n        if (settingsCache.has(\"email\"))\r\n            return settingsCache.get(\"email\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setEmail(email) {\r\n        settingsCache.add(\"email\", email);\r\n    }\r\n\r\n    function getCacheMinutes() {\r\n        let millis = getCacheTime();\r\n        if (!millis) return 0;\r\n        return (millis / 60000).toFixed();\r\n    }\r\n\r\n    function setTheme(theme) {\r\n        settingsCache.add(\"theme\", theme);\r\n    }\r\n\r\n    function getTheme() {\r\n        if (settingsCache.has(\"theme\"))\r\n            return settingsCache.get(\"theme\");\r\n        else\r\n            return \"blue\";\r\n    }\r\n\r\n    return {\r\n        getCacheTime: getCacheTime,\r\n        setCacheTimeMinute: setCacheTimeMinute,\r\n        getUrlRepository: getUrlRepository,\r\n        getRequestTimeout: getRequestTimeout,\r\n        setUrlRepository: setUrlRepository,\r\n        setRequestTimeout: setRequestTimeout,\r\n        getAccessKey: getAccessKey,\r\n        setAccessKey: setAccessKey,\r\n        getUserName: getUserName,\r\n        setUserName: setUserName,\r\n        getEmail: getEmail,\r\n        setEmail: setEmail,\r\n        getCacheMinutes: getCacheMinutes,\r\n        setTheme: setTheme,\r\n        getTheme: getTheme\r\n    };\r\n})();\r\n\r\nexport default SettingsCache;","import { getSingleton as LocalCache } from \"./CacheManager\";\r\nimport SettingsCache from \"./SettingsCache\";\r\nimport { StringUtils } from \"./StringUtils\";\r\n\r\nconst CATEGORY_CACHE_KEY = \"pg_mm_category_cache\";\r\nlet categoryCache = LocalCache(CATEGORY_CACHE_KEY, SettingsCache.getCacheTime());\r\nconsole.log(\"Category Cache Time: \", SettingsCache.getCacheTime());\r\n\r\nconst CategoryListCache = (function () {\r\n\r\n    /**\r\n     * Check category is cached\r\n     * @returns true if has item in cache\r\n     */\r\n    function isCached() {\r\n        let trees = categoryCache.get(\"tree\");\r\n        return trees && trees.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Store trees from Github API into cache\r\n     * @param {Arrays} trees Using fetch tree Github API\r\n     */\r\n    function setOrUpdateCache(trees) {\r\n        if (trees) {\r\n            trees = trees.filter(p => !p.path.startsWith(\"Images/\") && p.path !== \"Images\");\r\n        }\r\n\r\n        categoryCache.add(\"tree\", trees);\r\n    }\r\n\r\n    /**\r\n     * Make main category list (root) from trees list\r\n     * @returns {Arrays} mainCategoryList \r\n     */\r\n    function getMainCategory() {\r\n        let trees = categoryCache.get(\"tree\");\r\n        if (!trees) return [];\r\n\r\n        let mainCategoryList = trees.filter(p => isMainCategory(p));\r\n        return mainCategoryList.map(p => p.path);\r\n    }\r\n\r\n    /**\r\n   * Make category list from input path in trees list\r\n   * @returns {Arrays} categoryList \r\n   */\r\n    function getElementByPath(path) {\r\n        let trees = categoryCache.get(\"tree\");\r\n        if (!trees) return [];\r\n\r\n        let categoryList = trees.filter(p => isExistedInPath(p, path));\r\n        return makeOutputList(categoryList);\r\n    }\r\n\r\n    // Private method\r\n    function isMainCategory(element) {\r\n        return !element.path.includes(\"/\") && element.type === \"tree\";\r\n    }\r\n\r\n    function isExistedInPath(element, path) {\r\n        let elementPath = element.path;\r\n\r\n        if (!elementPath.startsWith(path)) {\r\n            return false;\r\n        }\r\n\r\n        elementPath = elementPath.replace(path, \"\");\r\n        if (elementPath.startsWith(\"/\")) {\r\n            elementPath = elementPath.substring(1, elementPath.length);\r\n        }\r\n\r\n        if (StringUtils.isNullOrEmpty(elementPath) || elementPath.includes(\"/\")) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function makeOutputList(list) {\r\n        let categoryList = [];\r\n\r\n        list.forEach(element => {\r\n            let pathList = element.path.split(\"/\");\r\n\r\n            let item = {\r\n                name: pathList[pathList.length - 1], // last item\r\n                path: element.path,\r\n                type: element.type === \"tree\" ? \"dir\" : \"file\"\r\n            }\r\n            categoryList = [...categoryList, item];\r\n        });\r\n\r\n        return categoryList;\r\n    }\r\n\r\n    function updateDataIntoPath(path, newDataList) {\r\n        let correctPath = path + \"/\";\r\n        let trees = categoryCache.get(\"tree\");\r\n        if (!trees) trees = [];\r\n\r\n        let newTree = trees.filter(p => !p.path.startsWith(correctPath));\r\n        newDataList.forEach(element => {\r\n            newTree.push({\r\n                mode: \"\",\r\n                path: element.path,\r\n                sha: \"\",\r\n                type: element.type === \"dir\" ? \"tree\" : \"blob\",\r\n                url: \"\"\r\n            });\r\n        });\r\n\r\n        setOrUpdateCache(newTree);\r\n    }\r\n\r\n    return {\r\n        isCached: isCached,\r\n        setOrUpdateCache: setOrUpdateCache,\r\n        getMainCategory: getMainCategory,\r\n        getElementByPath: getElementByPath,\r\n        updateDataIntoPath: updateDataIntoPath\r\n    };\r\n})();\r\n\r\nexport default CategoryListCache;","import React from 'react';\r\nimport \"./CategoryList.css\";\r\n// import * as request from \"../API/Github/Request\";\r\nimport CategoryListCache from '../Utils/CategoryListCache';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\n\r\n/**\r\n * CategoryListr\n */\r\nfunction CategoryList({ children }) {\r\n\r\n    return (\r\n        <div className=\"pg_mm_category_list_main\">\r\n            <div className=\"section\" id=\"J1\" >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * Blockr\n */\r\nfunction Block(props) {\r\n    const [renderList, setRenderList] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let categoryList = CategoryListCache.getElementByPath(props.name);\r\n        setRenderList(categoryList);\r\n        return () => {\r\n        }\r\n    }, [props.name])\r\n\r\n    function renderItem() {\r\n        let dirList = renderList.filter(p => p.type === \"dir\");\r\n        let fileList = renderList.filter(p => p.type === \"file\");\r\n\r\n        return (\r\n            <>\r\n                {dirList.map((item, index) => <Row\r\n                    handleItemClick={props.handleItemClick}\r\n                    key={index}\r\n                    source={item}\r\n                />)}\r\n\r\n                {\r\n                    fileList.length > 0 ?\r\n                        <dl className=\"link-list\">\r\n                            {fileList.map((item, index) => <Item\r\n                                key={index}\r\n                                name={item.name}\r\n                                type={item.type}\r\n                                path={item.path}\r\n                                handleItemClick={props.handleItemClick}\r\n                            />)}\r\n                        </dl>\r\n                        :\r\n                        \"\"\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"section-inner\">\r\n                <h3 className=\"hd\">{props.name}</h3>\r\n                {renderItem()}\r\n            </div>\r\n            <div className=\"clear_float\"></div>\r\n        </>\r\n    )\r\n}\r\n\r\n/**\r\n * Rowr\n */\r\nfunction Row({ source = { name: \"\", path: \"\", type: \"\" }, handleItemClick }) {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    //\r\n    const [renderList, setRenderList] = React.useState([]);\r\n    const [sourcePath, setSourcePath] = React.useState(source.path);\r\n    const [isLoadding, setIsLoadding] = React.useState(true);\r\n    const pathList = React.useRef([source.path]);\r\n\r\n    React.useEffect(() => {\r\n        refController.current = new AbortController();\r\n        let categoryList = CategoryListCache.getElementByPath(source.path);\r\n        setRenderList(categoryList);\r\n        setIsLoadding(false);\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        }\r\n    }, [source.path]);\r\n\r\n    function fetchFromAPI(path) {\r\n        // fetch API\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n\r\n        setIsLoadding(true);\r\n        ContentRender.getAllItemFromPath(path).then(data => {\r\n            if (signal.aborted) return;\r\n\r\n            console.log(\"updated\");\r\n            let dataList = makeRenderList(data, path);\r\n            setSourcePath(path);\r\n            setRenderList(dataList);\r\n            setIsLoadding(false);\r\n\r\n            CategoryListCache.updateDataIntoPath(path, dataList)\r\n        }).catch(err => {\r\n            console.log(\"Fail to fetch data.\", err);\r\n            // check unmount component\r\n            if (signal.aborted) return;\r\n            setRenderList([]);\r\n            setIsLoadding(false);\r\n        });\r\n    }\r\n\r\n    function gotoPath(path) {\r\n        let index = pathList.current.indexOf(path);\r\n        let tmpList = pathList.current.filter(p => pathList.current.indexOf(p) <= index);\r\n        pathList.current = tmpList;\r\n        setIsLoadding(true);\r\n        // load from cache\r\n        let categoryList = CategoryListCache.getElementByPath(path);\r\n\r\n        // request is reload or cache is empty\r\n        if (path === sourcePath || categoryList.length === 0) {\r\n            fetchFromAPI(path);\r\n            return;\r\n        }\r\n        setRenderList(categoryList);\r\n        setSourcePath(path);\r\n        setIsLoadding(false);\r\n    }\r\n\r\n    function onClickSubFolder(name) {\r\n        pathList.current = [...pathList.current, sourcePath + \"/\" + name];\r\n        gotoPath(sourcePath + \"/\" + name)\r\n    }\r\n\r\n    function renderPathList() {\r\n        let fixPathList = pathList.current.map(path => truncPathListItem(path));\r\n        return (\r\n            <>\r\n                {fixPathList.map((item, index) => <span className=\"pg_mm_path_item\"\r\n                    key={index}\r\n                    onClick={() => gotoPath(pathList.current[index])}>\r\n                    {item}\r\n                </span>)}\r\n            </>\r\n        )\r\n    }\r\n\r\n    function renderItem() {\r\n        if (isLoadding) {\r\n            return (<img\r\n                height=\"20px\"\r\n                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                alt=\"loadding...\"\r\n            />);\r\n        }\r\n\r\n        return renderList.map((item, index) => <Item\r\n            key={index}\r\n            name={item.name}\r\n            type={item.type}\r\n            path={item.path}\r\n            handleItemClick={handleItemClick}\r\n            onClickSubFolder={(name) => onClickSubFolder(name)}\r\n        />);\r\n    }\r\n\r\n    return (\r\n        <dl className=\"link-list\">\r\n            <dt\r\n                className=\"link-hd\"\r\n                onClick={() => gotoPath(pathList.current[pathList.current.length - 1])}>{renderPathList()}\r\n            </dt>\r\n            <dd className=\"link-bd\">\r\n                {renderItem()}\r\n            </dd>\r\n        </dl>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * Itemr\n */\r\nfunction Item(props) {\r\n    if (props.type === \"file\") {\r\n        let title = props.name.replace(\".md\", \"\");\r\n        return (\r\n            <p\r\n                onClick={() => props.handleItemClick(props.path)}\r\n                title={title} >\r\n                {title}\r\n            </p>);\r\n    }\r\n\r\n    if (props.type === \"dir\") {\r\n        return (<span\r\n            onClick={() => props.onClickSubFolder(props.name)}\r\n            title=\"\" >\r\n            {props.name}\r\n        </span>);\r\n    }\r\n}\r\n\r\n\r\nfunction makeRenderList(categoryObj, sourcePath) {\r\n    let renderList = [];\r\n    for (const property in categoryObj) {\r\n        if (typeof categoryObj[property] === \"object\" && property !== \"itemList\") {\r\n            renderList = [...renderList, {\r\n                name: property,\r\n                path: `${sourcePath}/${property}`,\r\n                type: \"dir\"\r\n            }]\r\n        }\r\n    }\r\n\r\n    if (categoryObj.itemList) {\r\n        categoryObj.itemList.forEach(item => {\r\n            item = { ...item, type: \"file\" }\r\n            renderList = [...renderList, item];\r\n        });\r\n    }\r\n    return renderList;\r\n}\r\n\r\nfunction truncPathListItem(strPath) {\r\n    let tmpPathList = strPath.split(\"/\");\r\n    return tmpPathList.pop();\r\n}\r\n\r\nCategoryList.Block = Block;\r\nexport default CategoryList;","import React from 'react';\r\nimport Viewer from '../ViewComponents/Viewer';\r\nimport \"./ViewPopup.css\";\r\n\r\nexport default function ViewPopup(props) {\r\n    const [stype, setStype] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        setStype({\r\n            display: props.display\r\n        })\r\n        return () => {\r\n        }\r\n    }, [props.display])\r\n\r\n    function onClosePopup() {\r\n        setStype({\r\n            display: \"block\",\r\n            animationName: \"close\",\r\n            animationDuration: 300\r\n        });\r\n        props.onClose();\r\n    }\r\n\r\n    function onEdit(filePath) {\r\n        setStype({\r\n            display: \"block\",\r\n            animationName: \"close\",\r\n            animationDuration: 300\r\n        });\r\n        props.onEdit(filePath);\r\n    }\r\n\r\n    async function onDelete() {\r\n        setStype({\r\n            display: \"block\",\r\n            animationName: \"close\",\r\n            animationDuration: 300\r\n        });\r\n        props.onDelete();\r\n    }\r\n\r\n    return (\r\n        <div style={stype} className=\"pg_mm_view_popup\">\r\n            {props.source ?\r\n                <Viewer\r\n                    isPopupView\r\n                    source={props.source}\r\n                    onDelete={onDelete}\r\n                    onClose={onClosePopup}\r\n                    onEdit={onEdit}\r\n                />\r\n                : stype && !stype.animationName\r\n                    ?\r\n                    <img\r\n                        className=\"pg_mm_loadding\"\r\n                        height=\"50px\"\r\n                        src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                        alt=\"loadding...\"\r\n                    /> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n","export const setCategoryList = (categoryList) => {\r\n    return {\r\n        type: \"SET_CATEGORY_LIST\",\r\n        payload: categoryList\r\n    }\r\n}\r\n\r\nexport const setBlockCategoryObject = (categoryObject) => {\r\n    return {\r\n        type: \"SET_BLOCK_CATEGORY_OBJECT\",\r\n        payload: categoryObject\r\n    }\r\n}","import React from 'react';\r\nimport Layout from './Layout';\r\nimport CategoryList from '../ViewComponents/CategoryList';\r\nimport ViewPopup from './ViewPopup';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCategoryList } from '../Actions/ListTabReducer';\r\nimport CategoryListCache from '../Utils/CategoryListCache';\r\nimport * as request from '../API/Github/Request';\r\nimport SettingsCache from '../Utils/SettingsCache';\r\n\r\nexport default function ListTab(props) {\r\n    const dispatch = useDispatch();\r\n    //\r\n    const categoryList = useSelector(state => state.listTabData.categoryList);\r\n    const [isDisplayPopup, setIsDisplayPopup] = React.useState(\"none\");\r\n    const [dataView, setDataView] = React.useState(null);\r\n    const [isLoadding, setIsLoadding] = React.useState(false);\r\n\r\n    async function fetchTreesList(callback = function (trees) { }) {\r\n        let latestCommit = await request.getRef(\"heads/main\");\r\n        let trees = await request.getTree(latestCommit + '?recursive=true');\r\n        callback(trees);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        // Checking cache\r\n        if (!CategoryListCache.isCached()) {\r\n            setIsLoadding(true);\r\n            fetchTreesList(function (trees) {\r\n                // Re-update cache\r\n                CategoryListCache.setOrUpdateCache(trees);\r\n                dispatch(setCategoryList(CategoryListCache.getMainCategory()));\r\n                setIsLoadding(false);\r\n            });\r\n        }\r\n\r\n        let mainCategoryList = CategoryListCache.getMainCategory();\r\n        dispatch(setCategoryList(mainCategoryList));\r\n        return () => {\r\n            setDataView(null);\r\n        }\r\n    }, [dispatch]);\r\n\r\n    function handleItemClick(path) {\r\n        setIsDisplayPopup(\"block\");\r\n        ContentRender.makeContentObject(path).then(data => {\r\n            setDataView(data);\r\n        });\r\n    }\r\n\r\n    function handleClosePopups() {\r\n        setTimeout(function () {\r\n            setIsDisplayPopup(\"none\");\r\n        }, 300)\r\n        setDataView(null);\r\n    }\r\n\r\n    function handleReloadDataCache() {\r\n        CategoryListCache.setOrUpdateCache(null);\r\n        setIsLoadding(true);\r\n        dispatch(setCategoryList([]));\r\n        fetchTreesList(function (trees) {\r\n            // Re-update cache\r\n            setTimeout(function () {\r\n                CategoryListCache.setOrUpdateCache(trees);\r\n                dispatch(setCategoryList(CategoryListCache.getMainCategory()));\r\n                setIsLoadding(false);\r\n            }, 500);\r\n        });\r\n    }\r\n\r\n    function loadding() {\r\n        if (isLoadding) {\r\n            return (\r\n                <img className='pg_mm_list_loadding unselectable' width=\"50px\"\r\n                    src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                    alt=\"empty\"\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            {loadding()}\r\n            <Layout.MiddleContent >\r\n                <span\r\n                    onClick={handleReloadDataCache}\r\n                    className='pg_mm_reload_button'>\r\n                    Reload (Caching {SettingsCache.getCacheMinutes()} minutes)\r\n                </span>\r\n                <CategoryList>\r\n                    {categoryList.map((categoryName, index) => <CategoryList.Block\r\n                        handleItemClick={handleItemClick}\r\n                        key={index}\r\n                        name={categoryName}\r\n                    />)}\r\n                </CategoryList>\r\n                <div className=\"pg_mm_view_popup_block\">\r\n                    <ViewPopup\r\n                        onDelete={() => setIsDisplayPopup(\"none\")}\r\n                        onEdit={(filePath) => props.onEdit(filePath)}\r\n                        onClose={handleClosePopups}\r\n                        source={dataView}\r\n                        display={isDisplayPopup}\r\n                    />\r\n                </div>\r\n            </Layout.MiddleContent >\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ContentRender } from \"../Utils/ContentRender\";\r\n\r\nexport default function CategoryInput(props) {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    const style = useSelector(state => state.style);\r\n    //\r\n    const nameInput = React.useRef(\"\");\r\n    const pathDataList = React.useRef([]);\r\n    const [categoryList, setCategoryList] = React.useState([]);\r\n    const [pathRenderList, setPathRenderList] = React.useState([]);\r\n    const [isFetching, setIsFetching] = React.useState(false);\r\n    const makeReturn = () => {\r\n        let category = \"\";\r\n        if (pathDataList.current && pathDataList.current.length > 0) {\r\n            category = pathDataList.current.map((item) => item.name).join(\"\");\r\n        }\r\n        return { category: category, title: nameInput.current.value }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        function makePathStr(list) {\r\n            if (list.length === 0) return \"\";\r\n\r\n            let path = \"\";\r\n            list.forEach(el => {\r\n                path += el.name;\r\n            });\r\n            return path;\r\n        }\r\n        // Set default title\r\n        nameInput.current.value = props.defaultTitle;\r\n        // Set default category\r\n        let categorys = props.defaultCategory.split(\"/\");\r\n        categorys = categorys.filter(p => p !== \"\");\r\n        let categoryPathList = [];\r\n        categorys.forEach(element => {\r\n            element = { name: element + \"/\" };\r\n            element = { ...element, path: makePathStr(categoryPathList) + element.name }\r\n            element = { ...element, subList: [] }\r\n            categoryPathList.push(element);\r\n        });\r\n        pathDataList.current = categoryPathList;\r\n        setPathRenderList(categoryPathList);\r\n\r\n        // Make category list\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        ContentRender.getAllCategoryList(\"\", signal).then((data) => {\r\n            // check unmount component\r\n            if (signal.aborted) return;\r\n            setCategoryList([...data]);\r\n        }).catch(err => {\r\n            // console.log(err);\r\n        });\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        };\r\n    }, [props]);\r\n\r\n    async function makeNewCategory(name, callback = function () { }) {\r\n        if (name !== \"/\" && name.endsWith(\"/\")) {\r\n            // Fetch sublist\r\n            let currentPath = pathRenderList.map((item) => item.name).join(\"\");\r\n            let newPath = {\r\n                name: name,\r\n                path: currentPath + name,\r\n                subList: [],\r\n            };\r\n            pathDataList.current = [...pathDataList.current, newPath];\r\n            setPathRenderList(pathDataList.current);\r\n            callback(true);\r\n\r\n\r\n            // Update sub list from API\r\n            setIsFetching(true);\r\n            refController.current = new AbortController();\r\n            let signal = refController.current.signal;\r\n            let tmpList = await makeSubListFromAPI(signal);\r\n            // Component is unmount\r\n            if (signal.aborted) return;\r\n            pathDataList.current = tmpList;\r\n            setPathRenderList(tmpList);\r\n            setIsFetching(false);\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    async function makeSubListFromAPI(signal) {\r\n        let lastItem = pathDataList.current.at(-1);\r\n        // fetch API\r\n        let subDataList = await ContentRender.getAllCategoryList(lastItem.path, signal);\r\n        // Remove last item in list\r\n        let tmpList = [...pathDataList.current];\r\n        tmpList.pop();\r\n        //\r\n        lastItem = { ...lastItem, subList: subDataList }\r\n        tmpList.push(lastItem);\r\n        return tmpList\r\n    }\r\n\r\n    function handleKeyInput(evt) {\r\n        let key = evt.which || evt.keyCode || evt.charCode;\r\n        if (/*key === 8 || */ key === 46 && pathDataList.current.length > 0) {\r\n            // let lastItem = pathDataList.current.at(-1);\r\n            // evt.target.value = lastItem.name.substring(0, lastItem.name.length - 1);\r\n            let tmpList = [...pathDataList.current];\r\n            tmpList.pop();\r\n            pathDataList.current = tmpList;\r\n            setPathRenderList(pathDataList.current);\r\n        } else {\r\n            makeNewCategory(evt.target.value, function (success = false) {\r\n                if (success) evt.target.value = \"\";\r\n                props.onChange(makeReturn());\r\n            });\r\n        }\r\n\r\n        evt.target.focus();\r\n    }\r\n\r\n    function setNameInputValue(val) {\r\n        makeNewCategory(val + \"/\", function () {\r\n            props.onChange(makeReturn());\r\n        });\r\n        // nameInput.current.value = \"\";\r\n        nameInput.current.focus();\r\n    }\r\n\r\n    function renderSubCategoryList() {\r\n        let currentCtgList = [];\r\n        let lastItem = pathRenderList.at(-1);\r\n        if (pathRenderList.length > 0) {\r\n            currentCtgList = [...lastItem.subList];\r\n        } else {\r\n            currentCtgList = categoryList;\r\n        }\r\n\r\n        if (isFetching) {\r\n            return (\r\n                <div style={{ position: \"absolute\", top: 6, zIndex: -1, color: \"#cdcdcd\" }}>\r\n                    <img height=\"20px\"\r\n                        src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                        alt=\"loadding...\"\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (currentCtgList.length === 0) {\r\n            let name = \"root/\";\r\n            if (lastItem && lastItem.name) {\r\n                name = \".../\" + lastItem.name;\r\n            }\r\n\r\n            return (\r\n                <div style={{ position: \"absolute\", top: 6, zIndex: -1, color: \"#cdcdcd\" }}>No category from {name}</div>\r\n            )\r\n        }\r\n\r\n        return currentCtgList.map((item, index) => (\r\n            <span\r\n                onClick={() => setNameInputValue(item)}\r\n                className=\"pg_mm_sublist_item\"\r\n                key={index}\r\n            >\r\n                {item}\r\n            </span>\r\n        ));\r\n    }\r\n\r\n    // console.log(\"Re-render CategoryInput.\");\r\n    return (\r\n        <div style={{ marginBottom: 50, height: 30 }}>\r\n            <div className=\"pg_mm_path_parent\">\r\n                <span className=\"pg_mm_selected_path_item\">/</span>\r\n                {/* Render path */}\r\n                {pathRenderList.map((item, index) => (\r\n                    <span className=\"pg_mm_selected_path_item\" key={index}>\r\n                        {item.name}\r\n                    </span>\r\n                ))}\r\n                {/* Input path */}\r\n                <input\r\n                    style={style.borderLine}\r\n                    placeholder=\"Press [DEL] to back to previous folder.\"\r\n                    ref={nameInput}\r\n                    className=\"pg_mm_name_input\"\r\n                    onKeyUp={(evt) => handleKeyInput(evt)}\r\n                />\r\n            </div>\r\n            <div className=\"sub_list_redered\" style={{ marginTop: 5, position: \"relative\" }}>\r\n                {renderSubCategoryList()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { getSingleton as LocalCache } from \"./CacheManager\";\r\n\r\nconst CACHE_KEY = \"pg_mm_content_writer\";\r\nconst writerCache = LocalCache(CACHE_KEY);\r\n\r\nconst ContentWriterCache = (function () {\r\n\r\n    function setTitle(title) {\r\n        writerCache.add(\"title\", title);\r\n    }\r\n\r\n    function getTitle() {\r\n        let title = writerCache.get(\"title\");\r\n        if (!title) return \"\";\r\n        return title;\r\n    }\r\n\r\n    function setContent(content) {\r\n        writerCache.add(\"content\", content);\r\n    }\r\n\r\n    function getContent() {\r\n        let content = writerCache.get(\"content\");\r\n        if (!content) return \"\";\r\n        return content;\r\n    }\r\n\r\n    function releaseCache() {\r\n        writerCache.add(\"title\", \"\");\r\n        writerCache.add(\"content\", \"\");\r\n        writerCache.add(\"path\", \"\");\r\n        writerCache.add(\"isUpdate\", false);\r\n    }\r\n\r\n    function setPath(path) {\r\n        writerCache.add(\"path\", path);\r\n    }\r\n\r\n    function getPath() {\r\n        let path = writerCache.get(\"path\");\r\n        if (!path) return \"\";\r\n        return path;\r\n    }\r\n\r\n    function getCategory() {\r\n        let path = writerCache.get(\"path\");\r\n        if (!path) return \"\";\r\n\r\n        if (!path.includes(\"/\")) return \"\";\r\n\r\n        return path.replace(/\\/[^/]+.md/gm, \"\");\r\n    }\r\n\r\n    function setIsUpdate(isUpdate) {\r\n        writerCache.add(\"isUpdate\", isUpdate);\r\n    }\r\n\r\n    function isUpdate() {\r\n        let isUpdate = writerCache.get(\"isUpdate\");\r\n        if (!isUpdate) return false;\r\n        return isUpdate;\r\n    }\r\n\r\n    return {\r\n        setTitle: setTitle,\r\n        getTitle: getTitle,\r\n        setContent: setContent,\r\n        getContent: getContent,\r\n        releaseCache: releaseCache,\r\n        setPath: setPath,\r\n        getPath: getPath,\r\n        getCategory: getCategory,\r\n        setIsUpdate: setIsUpdate,\r\n        isUpdate: isUpdate\r\n    };\r\n})();\r\n\r\nexport default ContentWriterCache;","import React, { useState, useRef } from 'react';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport Layout from './Layout';\r\nimport * as hub from '../Utils/GithubCRUD';\r\nimport { StringUtils } from '../Utils/StringUtils';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport CategoryInput from '../ViewComponents/CategoryInput';\r\n// import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\nimport { useSelector } from 'react-redux';\r\nimport ContentWriterCache from '../Utils/ContentWriterCache';\r\n// var fs = require('fs');\r\n\r\nexport default function WriterTab(props) {\r\n    // Use for control sync process\r\n    const refController = React.useRef(null);\r\n    // Use for store data\r\n    const mdParser = new MarkdownIt();\r\n    const [content, setContent] = useState(\"\");\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const title = useRef(\"\");\r\n    const category = useRef(\"\");\r\n\r\n    // Use for update file\r\n    const { updateAction } = props;\r\n    const { inputPath, clearPath } = updateAction;\r\n    const isCreateed = useRef(!inputPath);\r\n\r\n    const originData = useRef({\r\n        title: null,\r\n        category: null,\r\n        content: null\r\n    });\r\n\r\n    const style = useSelector(state => state.style);\r\n\r\n    React.useEffect(() => {\r\n        if (inputPath === ContentWriterCache.isUpdate() || isCreateed.current) {\r\n            title.current = ContentWriterCache.getTitle();\r\n            category.current = ContentWriterCache.getCategory();\r\n            setContent(ContentWriterCache.getContent());\r\n\r\n            isCreateed.current = !ContentWriterCache.isUpdate();\r\n            return;\r\n        }\r\n\r\n        // For update data\r\n        clearPath();\r\n        ContentWriterCache.setIsUpdate(true);\r\n        ContentWriterCache.setPath(inputPath);\r\n\r\n        // fetch API\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        ContentRender.makeContentObject(inputPath, signal).then(data => {\r\n            if (!data) return;\r\n            title.current = data.title;\r\n            category.current = data.category;\r\n            originData.current = {\r\n                title: data.title,\r\n                category: data.category,\r\n                originData: data.content\r\n            }\r\n            setContent(data.content);\r\n        });\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        }\r\n    }, [clearPath, inputPath])\r\n\r\n    function handleImageUpload(file, callback) {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            let fileName = new Date().getTime() + \"_\" + file.name;\r\n            let data = {\r\n                message: `Upload file ${fileName}`,\r\n                content: reader.result.substr(reader.result.indexOf(',') + 1)\r\n            }\r\n\r\n            hub.create(data, `Images/${fileName}`).then(res => {\r\n                if (res && res.content && res.content.download_url) {\r\n                    callback(res.content.download_url)\r\n                }\r\n            });\r\n        }\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    /**\r\n     * After click button submit collect data from form and call API\r\n     */\r\n    async function handleSubmit() {\r\n        if (StringUtils.trim(title.current, \"\") === \"\") {\r\n            NotificationManager.error(\"Please input title!!!\");\r\n            return;\r\n        }\r\n\r\n        if (StringUtils.trim(category.current, \"\") === \"\") {\r\n            NotificationManager.error(\"Please select category!!!\");\r\n            return;\r\n        }\r\n\r\n        if (StringUtils.trim(content, \"\") === \"\" || StringUtils.trim(content, \"\").length < 50) {\r\n            NotificationManager.error(\"Please input content than 50 charactor!!!\");\r\n            return;\r\n        }\r\n\r\n        // correct data\r\n        // make data from form data for API body\r\n        let id = new Date().getTime();\r\n        let titleFix = /*StringUtils.nonAccentVietnamese(title.current);*/title.current;\r\n        let filePath = `${category.current}/${StringUtils.truncateString(titleFix, 25)}.md`;\r\n        filePath = filePath.replaceAll(\"//\", \"/\");\r\n\r\n        // content of file md\r\n        let fileContent = \"\";\r\n        fileContent += `---\\n`;\r\n        fileContent += `id: ${id}\\n`;\r\n        fileContent += `title: ${title.current}\\n`;\r\n        fileContent += `category: ${category.current}\\n`;\r\n        fileContent += `---\\n\\n`;\r\n        fileContent += content;\r\n\r\n        let commitMsg = isCreateed.current\r\n            ? \"Create file \" + category.current + \"/\" + StringUtils.truncateString(titleFix, 25)\r\n            : \"Update file \" + inputPath;\r\n\r\n        let data = {\r\n            message: commitMsg,\r\n            content: StringUtils.base64Encode(fileContent)\r\n        }\r\n\r\n        store(data, filePath);\r\n    }\r\n\r\n    async function store(data, filePath) {\r\n        setIsProcessing(true);\r\n        if (isCreateed.current) {\r\n            let response = await hub.create(data, filePath);\r\n            if (response && response.commit) {\r\n                NotificationManager.info(response.commit.html_url, \"Commited\", 5000, function () {\r\n                    window.open(response.commit.html_url, '_blank').focus();\r\n                }, false);\r\n                setIsProcessing(false);\r\n                // release cache\r\n                ContentWriterCache.releaseCache();\r\n            }\r\n        } else {\r\n            if (title.current !== originData.current.title\r\n                || category.current !== originData.current.category) {\r\n                console.log(\"update path send...\")\r\n                await hub.move(\"main\", inputPath, filePath);\r\n            }\r\n\r\n            if (content !== originData.current.content) {\r\n                console.log(\"update content send...\")\r\n                await hub.update(data, filePath).catch(err => {\r\n                    NotificationManager.error(err + \"\");\r\n                });\r\n            }\r\n            setIsProcessing(false);\r\n            NotificationManager.info(\"Updated\");\r\n            // release cache\r\n            ContentWriterCache.releaseCache();\r\n        }\r\n    }\r\n\r\n    function handleChangeCategory(source = { category: \"\", title: \"\" }) {\r\n        title.current = source.title;\r\n        category.current = source.category;\r\n\r\n        //cache\r\n        ContentWriterCache.setContent(content);\r\n        ContentWriterCache.setTitle(source.title);\r\n        if (!StringUtils.isNullOrEmpty(source.title)) {\r\n            ContentWriterCache.setPath(source.category + source.title + \".md\");\r\n        } else {\r\n            ContentWriterCache.setPath(source.category);\r\n        }\r\n    }\r\n\r\n    function handleChangeConetnt({ html, text }) {\r\n        setContent(text)\r\n\r\n        //cache\r\n        ContentWriterCache.setContent(text);\r\n        ContentWriterCache.setTitle(title.current);\r\n    }\r\n\r\n    function handleClearForm() {\r\n        ContentWriterCache.releaseCache();\r\n        setContent(\"Loadding...\");\r\n\r\n        setTimeout(function () {\r\n            title.current = \"\";\r\n            category.current = \"\";\r\n            isCreateed.current = true;\r\n            setContent(\"\");\r\n        }, 500)\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            <Layout.MiddleContent>\r\n                <>\r\n                    <div style={{ width: \"85%\", height: 90, float: 'left' }}>\r\n                        <CategoryInput defaultTitle={title.current} defaultCategory={category.current} onChange={handleChangeCategory} />\r\n                    </div>\r\n                    {/* Save button  */}\r\n                    <button\r\n                        style={{ ...style.button, width: '9%', height: '40px', float: 'right', marginLeft: 2 }}\r\n                        className='pg_mm_write_button'\r\n                        onClick={handleSubmit}>\r\n                        {isCreateed.current ? \"Create\" : \"Update\"}\r\n                    </button>\r\n\r\n                    {\r\n                        !StringUtils.isNullOrEmpty(content)\r\n                            ?\r\n                            <button\r\n                                style={{ ...style.button, width: '5%', height: '40px', float: 'right', backgroundColor: '#dcdcdc' }}\r\n                                className='pg_mm_write_button'\r\n                                onClick={handleClearForm}>\r\n                                Cancel\r\n                            </button>\r\n                            : \"\"\r\n                    }\r\n                </>\r\n                <div style={{ marginTop: '5px' }}></div>\r\n                <MdEditor\r\n                    value={content}\r\n                    onImageUpload={handleImageUpload}\r\n                    style={{ height: 'calc(100vh - 160px', width: '100%' }}\r\n                    renderHTML={text => mdParser.render(text)}\r\n                    onChange={handleChangeConetnt}\r\n                />\r\n\r\n                {\r\n                    isProcessing ?\r\n                        <div className=\"pg_mm_loadding\">\r\n                            <img height=\"45px\"\r\n                                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                                alt=\"loadding...\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                        ''\r\n                }\r\n\r\n            </Layout.MiddleContent>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Layout from './Layout';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport './SettingsTab.css';\r\nimport { useSelector } from 'react-redux';\r\nimport SettingsCache from '../Utils/SettingsCache';\r\n\r\nexport default function SettingsTab() {\r\n    const urlRepositoryInput = React.useRef(null);\r\n    const cacheTimeDayInput = React.useRef(null);\r\n    const requestTimeoutInput = React.useRef(null);\r\n    const accessKeyInput = React.useRef(null);\r\n    const userNameInput = React.useRef(null);\r\n    const emailInput = React.useRef(null);\r\n\r\n    const style = useSelector(state => state.style);\r\n\r\n    React.useEffect(() => {\r\n        urlRepositoryInput.current.value = SettingsCache.getUrlRepository();\r\n        cacheTimeDayInput.current.value = SettingsCache.getCacheMinutes();\r\n        requestTimeoutInput.current.value = SettingsCache.getRequestTimeout();\r\n        accessKeyInput.current.value = SettingsCache.getAccessKey();\r\n        userNameInput.current.value = SettingsCache.getUserName();\r\n        emailInput.current.value = SettingsCache.getEmail();\r\n        return () => { }\r\n    }, [])\r\n\r\n\r\n    function handleSave() {\r\n        if (!window.confirm(\"Do you want to save?\") === true) {\r\n            return;\r\n        }\r\n\r\n        SettingsCache.setUrlRepository(urlRepositoryInput.current.value);\r\n        SettingsCache.setCacheTimeMinute(cacheTimeDayInput.current.value);\r\n        SettingsCache.setRequestTimeout(requestTimeoutInput.current.value);\r\n        SettingsCache.setAccessKey(accessKeyInput.current.value);\r\n        SettingsCache.setUserName(userNameInput.current.value);\r\n        SettingsCache.setEmail(emailInput.current.value);\r\n\r\n        NotificationManager.info(\"Success, reload after 2s.\");\r\n        setTimeout(function () {\r\n            window.location.reload();\r\n        }, 2000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            <Layout.MiddleContent >\r\n                <h3 className='pg_mm_settings_area'>Data settings</h3>\r\n                <input\r\n                    ref={urlRepositoryInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='URL to repository...'\r\n                    value=\"https://github.com/cuongphuong/memo_data\"\r\n                />\r\n                <span\r\n                    className='pg_mm_example'>\r\n                    Repo for save data ex: https://github.com/cuongphuong/memo_data\r\n                </span>\r\n\r\n                <br />\r\n                <input\r\n                    type=\"number\"\r\n                    ref={cacheTimeDayInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Cache time (ms)...'\r\n                    value=\"10\"\r\n                />\r\n                <span\r\n                    className='pg_mm_example'>\r\n                    Cache time (minutes) ex: 5 minutes\r\n                </span>\r\n\r\n                <br />\r\n                <input\r\n                    type=\"number\"\r\n                    ref={requestTimeoutInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Request timeout (ms)...'\r\n                    value=\"5000\"\r\n                />\r\n                <span\r\n                    className='pg_mm_example'>\r\n                    Request timeout (ms) ex: 5000 (5 seconds)\r\n                </span>\r\n\r\n                <h3 className='pg_mm_settings_area'>Github account setting</h3>\r\n                <input\r\n                    ref={accessKeyInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Access key (if private repository)...'\r\n                />\r\n                <span\r\n                    className='pg_mm_example'>\r\n                    Access key, get\r\n                    <a\r\n                        target=\"_blank\"\r\n                        href='https://github.com/settings/tokens'\r\n                        rel=\"noreferrer\"> here\r\n                    </a> ex: ghp_ILEBZ7OZbzmnMd33z8MwStkSvp6zQq1MDYHQ\r\n                </span>\r\n\r\n                <br />\r\n                <input\r\n                    ref={userNameInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Username github...'\r\n                />\r\n                <span\r\n                    className='pg_mm_example'>\r\n                    Github Username\r\n                </span>\r\n\r\n                <br />\r\n                <input\r\n                    ref={emailInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Email...'\r\n                />\r\n                <span\r\n                    className='pg_mm_example'>\r\n                    Email: xxx@gmail.com\r\n                </span>\r\n\r\n                <br />\r\n                <button\r\n                    style={style.button}\r\n                    onClick={handleSave}\r\n                    className='pg_mm_settings_submit'>\r\n                    Save\r\n                </button>\r\n            </Layout.MiddleContent>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as ReducerAction from '../Actions/StyleReducer';\r\nimport \"./StyleSettings.css\";\r\nimport SettingsCache from '../Utils/SettingsCache';\r\n\r\nexport default function StyleSettings() {\r\n    const dispatch = useDispatch();\r\n\r\n    function changeStyle(color) {\r\n        let action = null;\r\n        switch (color) {\r\n            case \"tomato\":\r\n                action = ReducerAction.changeToTomatoStyle();\r\n                SettingsCache.setTheme(\"tomato\");\r\n                dispatch(action);\r\n                break;\r\n            case \"blue\":\r\n                action = ReducerAction.changeToBlueStyle();\r\n                SettingsCache.setTheme(\"blue\");\r\n                dispatch(action);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='pg_mm_style_settings unselectable'>\r\n            <span onClick={() => changeStyle(\"tomato\")}></span>\r\n            <span onClick={() => changeStyle(\"blue\")}></span>\r\n        </div>\r\n    )\r\n}\r\n","export const changeToTomatoStyle = () => {\r\n    return {\r\n        type: \"CHANGE_TO_TOMATO_STYLE\"\r\n    }\r\n}\r\n\r\nexport const changeToBlueStyle = () => {\r\n    return {\r\n        type: \"CHANGE_TO_BLUE_STYLE\"\r\n    }\r\n}","import React from 'react'\nimport Layout from './LayoutComponents/Layout';\nimport QuickSearchTab from './LayoutComponents/QuickSearchTab';\nimport ListTab from './LayoutComponents/ListTab';\nimport WriterTab from './LayoutComponents/WriterTab';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport SettingsTab from './LayoutComponents/SettingsTab';\nimport { getSingleton as LocalCache } from \"./Utils/CacheManager.js\";\nimport StyleSettings from './ViewComponents/StyleSettings';\nimport SettingsCache from './Utils/SettingsCache';\nimport { useDispatch } from 'react-redux';\nimport * as ReducerAction from './Actions/StyleReducer';\n\nfunction App() {\n    const menuList = [\"Search\", \"List\", \"Write\"];\n    // state\n    const [selectedMenu, setSelectedMenu] = React.useState(menuList[0]);\n    const viewContentObj = React.useRef(null);\n    const editPath = React.useRef(null);\n    const setViewContentObj = (obj) => { viewContentObj.current = obj; }\n\n    // Cache\n    const CACHE_KEY = \"pg_mm_settings\";\n    const cache = React.useRef(LocalCache(CACHE_KEY));\n    const dispatch = useDispatch();\n\n    React.useEffect(() => {\n        function changeStyle(color) {\n            let action = null;\n            switch (color) {\n                case \"tomato\":\n                    action = ReducerAction.changeToTomatoStyle();\n                    SettingsCache.setTheme(\"tomato\");\n                    dispatch(action);\n                    break;\n                case \"blue\":\n                    action = ReducerAction.changeToBlueStyle();\n                    SettingsCache.setTheme(\"blue\");\n                    dispatch(action);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        changeStyle(SettingsCache.getTheme());\n    }, [dispatch]);\n\n    function onSubmitSuccess(obj) {\n        setViewContentObj(obj);\n        // Back to search component\n        setSelectedMenu(menuList[0]);\n    }\n\n    function onEditFile(filePath) {\n        editPath.current = filePath;\n        setSelectedMenu(menuList[2]);\n    }\n\n    const updateAction = {\n        inputPath: editPath.current,\n        clearPath: function () {\n            editPath.current = null;\n        }\n    }\n\n    function rederTabView() {\n        let items = cache.current.getAll();\n        if (cache.current.isExpired() || Object.keys(items).length === 0) {\n            return <SettingsTab />;\n        }\n\n        switch (selectedMenu) {\n            case \"Search\":\n                return <QuickSearchTab onEdit={onEditFile} defaultPost={viewContentObj.current} />;\n            case \"List\":\n                return <ListTab onEdit={onEditFile} />;\n            case \"Write\":\n                return <WriterTab updateAction={updateAction} actionSubmit={onSubmitSuccess} />\n            case \"Settings\":\n                return <SettingsTab />;\n            default:\n                return <QuickSearchTab />;\n        }\n    }\n\n    return (\n        <Layout>\n            <Layout.Header>\n                <Layout.Header.Item\n                    key=\"Settings\"\n                    selected={selectedMenu}\n                    onClick={(title) => setSelectedMenu(title)}\n                    title=\"Settings\"\n                />\n\n                {menuList.map(item => item !== \"Setting\" ? (\n                    <Layout.Header.Item\n                        key={item}\n                        selected={selectedMenu}\n                        onClick={(title) => setSelectedMenu(title)}\n                        title={item}\n                    />\n                ) : \"\")}\n            </Layout.Header>\n\n            <Layout.FullContent>\n                {rederTabView()}\n            </Layout.FullContent>\n            <NotificationContainer />\n            <StyleSettings />\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initState = {\r\n    // ListTab.js\r\n    categoryList: [],\r\n    // CategoryList.Block.js\r\n    blockCategoryObj: {}\r\n}\r\n\r\nconst ListTabReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CATEGORY_LIST': {\r\n            let newCategoryList = [...action.payload];\r\n            return { ...state, categoryList: newCategoryList };\r\n        }\r\n        case 'SET_BLOCK_CATEGORY_OBJECT': {\r\n            let newBlockCategoryObj = { ...action.payload };\r\n            return { ...state, blockCategoryObj: newBlockCategoryObj };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default ListTabReducer;","let initState = {\r\n    mdContent: null, // Content for show on view\r\n    searchResultList: [], // Search result API\r\n    activeId: null, // ActiveId\r\n    searchKeyWord: \"\"\r\n}\r\n\r\nconst SearchReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"SearchReducer/setActiveId\": {\r\n            return { ...state, activeId: action.payload };\r\n        }\r\n        case \"SearchReducer/setMdContent\": {\r\n            return { ...state, mdContent: action.payload };\r\n        }\r\n        case \"SearchReducer/setSearchResultList\": {\r\n            let searchResultList = [...action.payload];\r\n            return { ...state, searchResultList: searchResultList };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default SearchReducer;","const orangeStyle = {\r\n    headerMenu: {\r\n        backgroundColor: \"#eec0c6\",\r\n        backgroundImage: \"linear-gradient(315deg, #eec0c6 0%, #e58c8a 74%)\"\r\n    },\r\n    menuSelected: {\r\n        background: \"#ffd6d6\",\r\n        color: \"#333 !important\"\r\n    },\r\n    leftBackground: {\r\n        backgroundColor: \"#f0edd9\"\r\n    },\r\n    borderLine: {\r\n        border: \"solid tomato 1px\"\r\n    },\r\n    borderLineHover: {\r\n        border: \"solid 1px rgb(252, 139, 119)\",\r\n        boxShadow: \"1px 1px 5px 1px rgb(252, 139, 119)\"\r\n    },\r\n    button: {\r\n        backgroundColor: \"#e58c8a\",\r\n        color: \"#fff\"\r\n    },\r\n    input: {\r\n        outline: \"none\",\r\n        border: \"solid tomato 1px\"\r\n    }\r\n}\r\n\r\nconst blueStyle = {\r\n    headerMenu: { background: \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(102,228,210,1) 0%, rgba(80,193,184,1) 98%)\" },\r\n    menuSelected: {\r\n        background: \"#b0f4e9\",\r\n        color: \"#333 !important\"\r\n    },\r\n    leftBackground: {\r\n        backgroundColor: \"#e5f2f0\"\r\n    },\r\n    borderLine: {\r\n        border: \"solid #84d9cc 1px\"\r\n    },\r\n    borderLineHover: {\r\n        border: \"solid 1px #3dab9b\",\r\n        boxShadow: \"1px 1px 5px 1px #3dab9b\"\r\n    },\r\n    button: {\r\n        backgroundColor: \"#3dab9b\",\r\n        color: \"#fff\"\r\n    },\r\n    input: {\r\n        outline: \"none\",\r\n        border: \"solid tomato 1px\"\r\n    }\r\n}\r\n\r\nconst StyleReducer = (state = blueStyle, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_TO_TOMATO_STYLE': {\r\n            return orangeStyle;\r\n        }\r\n        case 'CHANGE_TO_BLUE_STYLE': {\r\n            return blueStyle;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default StyleReducer;","import { combineReducers } from \"redux\";\r\nimport ListTabReducer from \"./ListTabReducer\";\r\nimport SearchReducer from \"./SearchReducer\";\r\nimport StyleReducer from \"./StyleReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    style: StyleReducer,\r\n    listTabData: ListTabReducer,\r\n    searchData: SearchReducer\r\n});\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}