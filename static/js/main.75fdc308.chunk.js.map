{"version":3,"sources":["LayoutComponents/Layout.js","Utils/RequestAPI.js","Utils/StringUtils.js","Utils/CacheManager.js","Utils/SettingsCache.js","API/Github/Request.js","Utils/GithubCRUD.js","ViewComponents/Viewer.js","Utils/ContentRender.js","ViewComponents/List.js","Actions/SearchReducer.js","Utils/SearchHistoryCache.js","LayoutComponents/QuickSearchTab.js","Utils/CategoryListCache.js","ViewComponents/CategoryList.js","LayoutComponents/ViewPopup.js","Actions/ListTabReducer.js","LayoutComponents/ListTab.js","ViewComponents/CategoryInput.js","Utils/ContentWriterCache.js","LayoutComponents/WriterTab.js","LayoutComponents/SettingsTab.js","ViewComponents/StyleSettings.js","Actions/StyleReducer.js","LayoutComponents/GithubAuthenticate.js","App.js","reportWebVitals.js","Reducers/ListTabReducer.js","Reducers/SearchReducer.js","Reducers/StyleReducer.js","Reducers/index.js","store.js","index.js"],"names":["Layout","children","className","Header","style","useSelector","state","id","headerMenu","rederIcon","title","icon","faFeather","faTableList","faMagnifyingGlass","Item","onClick","selected","faGear","menuSelected","SiderBar","leftBackground","RightContent","MiddleContent","FullContent","Fooder","RequestAPI","baseUrl","timeout","headers","makeRequestConfig","inp","configs","method","signal","data","body","sendRequest","url","a","fetch","then","response","ok","Error","status","contentType","get","indexOf","json","text","catch","err","replaceAll","trim","encodeURI","requestConfig","add_config","base_url","in_headers","exe","StringUtils","str","EMPTY","Base64","encode","decode","defaultStr","ret","startsWith","substring","endsWith","length","trimL","toLowerCase","replace","num","slice","CacheManager","key","expire","this","items","getAll","value","store","hasOwnProperty","localStorage","setItem","JSON","stringify","Date","getTime","stored","getItem","isExpired","parse","whenCached","age","clear","removeItem","cache","getSingleton","settingsCache","LocalCache","SettingsCache","getCacheTime","has","setCacheTimeMinute","cacheTime","add","getUrlRepository","getRequestTimeout","setUrlRepository","urlRepository","setRequestTimeout","requestTimeout","getAccessKey","setAccessKey","accessKey","getUserName","setUserName","userName","getEmail","setEmail","email","getCacheMinutes","millis","toFixed","setTheme","theme","getTheme","setAvatarUrl","getAvatarUrl","releaseCache","REPOSITORY_SOURCE","TIME_OUT","TOKEN_KEY","USE_NAME","E_MAIL","config","Accept","isNullOrEmpty","Authorization","request","author","name","searchFromGitHub","console","log","result","readContentByPath","path","getUser","username","save","message","content","filePath","updateContent","sha","getRef","ref","object","getTree","tree","postTree","base_tree","payload","commit","parent","parents","updateHead","head","markdown","create","update","dataAPI","lastSha","deleteFile","move","branch","newPath","latestCommit","forEach","isDeleted","type","filter","p","rootTree","commit_msg","Viewer","props","refController","React","useRef","useState","setContent","isGithubMd","setIsGithubMd","source","window","confirm","NotificationManager","info","onDelete","location","protocol","host","substr","link","navigator","clipboard","writeText","useEffect","current","AbortController","htmlMd","aborted","printContent","abort","isPopupView","onEdit","onClose","marginLeft","cursor","src","width","alt","margin","renderHTML","remarkPlugins","remarkGfm","ContentRender","apiResult","total_count","warning","error","pathFileList","Set","postObjectList","Promise","all","map","item","makeContentObject","contentObject","apiContentResult","base64Content","decodeContent","index","DEFAULT_DELIMITER","cfgAreaStr","contentAreaStr","makeConfigFromResult","m","regex","exec","lastIndex","mathItems","split","configKey","configValue","Array","isArray","categoryList","resultObject","itemList","hasContnent","List","category","handleChooseItem","activeId","isActive","borderLineHover","setActiveId","setMdContent","mdContent","setSearchResultList","searchResultList","searchCache","SearchHistoryCache","getTopKeyWord","allItem","Object","keys","sort","b","insertKey","keysSorted","del","removeMinItem","QuickSearchTab","dispatch","useDispatch","searchData","isProcessing","setIsProcessing","searchCacheList","setSearchCacheList","inputObj","typingTimer","useParams","handleSearchChange","evt","clearTimeout","setTimeout","doneTyping","target","keyword","search","apiResultContentList","focus","cacheKeywordList","searchByPramater","history","replaceState","list","borderLine","onChange","placeholder","marginTop","height","position","top","isSuccess","newSearchList","alert","memo","categoryCache","CategoryListCache","setOrUpdateCache","trees","isCached","getMainCategory","element","includes","getElementByPath","elementPath","isExistedInPath","pathList","makeOutputList","updateDataIntoPath","newDataList","correctPath","newTree","push","mode","CategoryList","Row","handleItemClick","renderList","setRenderList","sourcePath","setSourcePath","isLoadding","setIsLoadding","fetchFromAPI","getAllItemFromPath","dataList","categoryObj","property","makeRenderList","gotoPath","tmpList","fixPathList","pop","renderPathList","onClickSubFolder","Block","dirList","fileList","renderItem","ViewPopup","stype","setStype","display","animationName","setCategoryList","ListTab","listTabData","isDisplayPopup","setIsDisplayPopup","dataView","setDataView","callback","onFailed","getTreeList","mainCategoryList","loadding","fetchTreesList","categoryName","CategoryInput","nameInput","pathDataList","pathRenderList","setPathRenderList","isFetching","setIsFetching","makeReturn","join","makeNewCategory","currentPath","subList","makeSubListFromAPI","lastItem","at","getAllCategoryList","subDataList","makePathStr","el","defaultTitle","categorys","defaultCategory","categoryPathList","marginBottom","onKeyUp","which","keyCode","charCode","handleKeyInput","currentCtgList","zIndex","color","renderSubCategoryList","writerCache","ContentWriterCache","setTitle","getTitle","getContent","setPath","getPath","getCategory","setIsUpdate","isUpdate","WriterTab","mdParser","MarkdownIt","updateAction","inputPath","clearPath","isCreateed","originData","titleFix","truncateString","fileContent","commitMsg","base64Encode","hub","html_url","open","isUpdated","float","button","backgroundColor","onImageUpload","file","reader","FileReader","onload","fileName","res","download_url","readAsDataURL","render","html","SettingsTab","urlRepositoryInput","cacheTimeDayInput","requestTimeoutInput","accessKeyInput","userNameInput","emailInput","avatarViewer","isView","setIsView","reload","tokenSet","defaultValue","faEye","faEyeSlash","faSave","faArrowAltCircleRight","href","faGithub","StyleSettings","changeStyle","action","GithubAuthenticate","setMessage","queryParams","URLSearchParams","code","formData","FormData","append","access_token","r","userInfomation","login","avatar_url","App","HomePage","menuList","selectedMenu","setSelectedMenu","viewContentObj","editPath","onSubmitSuccess","obj","setViewContentObj","onEditFile","defaultPost","actionSubmit","rederTabView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","blockCategoryObj","ListTabReducer","newCategoryList","newBlockCategoryObj","searchKeyWord","SearchReducer","orangeStyle","backgroundImage","background","border","boxShadow","marginRight","input","outline","blueStyle","violetStyle","StyleReducer","rootReducer","combineReducers","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.75fdc308.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport \"./Layout.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGear, faTableList, faFeather, faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Layout = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_grid-container\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Header = ({ children }) => {\r\n    const style = useSelector(state => state.style);\r\n    return (\r\n        <div className=\"pg_mm_header\" id=\"pg_mm_header-menu\">\r\n            <ul style={style.headerMenu}>\r\n                {children}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction rederIcon(title) {\r\n    if (title === \"Write\") {\r\n        return <FontAwesomeIcon icon={faFeather} />\r\n    }\r\n\r\n    if (title === \"List\") {\r\n        return <FontAwesomeIcon icon={faTableList} />\r\n    }\r\n\r\n    if (title === \"Search\") {\r\n        return <FontAwesomeIcon icon={faMagnifyingGlass} />\r\n    }\r\n}\r\n\r\nconst HeaderItem = ({ onClick, title, selected }) => {\r\n    const style = useSelector(state => state.style);\r\n\r\n    if (title === \"Settings\") {\r\n        return <p onClick={() => onClick(title)} className='pg_mm_settings_menu_item unselectable'><FontAwesomeIcon icon={faGear} /></p>\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <span\r\n                className=\"unselectable\"\r\n                style={selected === title ? style.menuSelected : {}}\r\n                onClick={() => onClick(title)}>\r\n                {rederIcon(title)}\r\n            </span>\r\n        </li>\r\n    );\r\n}\r\n\r\nHeader.Item = HeaderItem;\r\n\r\nconst SiderBar = ({ children }) => {\r\n    const style = useSelector(state => state.style);\r\n    return (\r\n        <div\r\n            style={style.leftBackground}\r\n            className=\"pg_mm_left pg_mm_scroll\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst RightContent = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_right pg_mm_scroll\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MiddleContent = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_mid pg_mm_scroll\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst FullContent = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_content_full\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Fooder = () => {\r\n\r\n}\r\n\r\nLayout.Header = Header;\r\nLayout.SiderBar = SiderBar;\r\nLayout.RightContent = RightContent;\r\nLayout.MiddleContent = MiddleContent;\r\nLayout.FullContent = FullContent;\r\nLayout.Fooder = Fooder;\r\nexport default Layout;\r\n","export const RequestAPI = (function () {\r\n    let baseUrl = null;\r\n    let timeout = 10000;\r\n    let headers = {};\r\n\r\n    function makeRequestConfig(inp) {\r\n        if (!inp) return {};\r\n\r\n        let configs = {\r\n            headers: headers,\r\n            method: inp.method\r\n        }\r\n\r\n        if (inp.signal) {\r\n            configs = { ...configs, signal: inp.signal };\r\n        }\r\n\r\n        if (inp.data) {\r\n            configs = { ...configs, body: inp.data };\r\n        }\r\n        return configs;\r\n    }\r\n\r\n    async function sendRequest(url, configs) {\r\n        let json = await fetch(url, configs, timeout).then(function (response) {\r\n            if (!response.ok) {\r\n                throw new Error(response.status);\r\n            }\r\n\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (contentType && contentType.indexOf(\"application/json\") !== -1) {\r\n                return response.json();\r\n            }\r\n\r\n            return response.text();\r\n\r\n        }).catch(err => {\r\n            throw new Error(err);\r\n        });\r\n        return json;\r\n    }\r\n\r\n    function config(configs = { base_url: \"\", timeout: 10000, in_headers: {} }) {\r\n        baseUrl = configs.base_url;\r\n        timeout = configs.timeout;\r\n        headers = configs.in_headers;\r\n    }\r\n\r\n    async function request(inp) {\r\n        // Make config request\r\n        let url = baseUrl + inp.url.replaceAll(\"//\", \"/\");\r\n        url = url.trim();\r\n        url = encodeURI(url);\r\n        let requestConfig = makeRequestConfig(inp);\r\n\r\n        return await sendRequest(url, requestConfig);\r\n    }\r\n\r\n    return {\r\n        add_config: config,\r\n        exe: request\r\n    };\r\n})();","import { Base64 } from 'js-base64';\r\n\r\nexport class StringUtils {\r\n    static EMPTY = \"\";\r\n\r\n    /**\r\n     * Check whether a string is null or empty.\r\n     * @param str value\r\n     * @returns true : if string is null or empty\r\n     */\r\n    static isNullOrEmpty(str) {\r\n        if (!str || str === null || str === StringUtils.EMPTY) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Encoding str to Base64\r\n     * @param str value\r\n     * @returns Base64 str\r\n     */\r\n    static base64Encode(str) {\r\n        if (!str || str === null) {\r\n            return null;\r\n        } else {\r\n            return Base64.encode(str);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Decode Base64 to str\r\n     * @param Base64 str\r\n     * @returns Value decode\r\n     */\r\n    static base64decode(str) {\r\n        if (!str || str === null) {\r\n            return null;\r\n        } else {\r\n            return Base64.decode(str);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Removes \" \", \"　\", and \\t from the beginning of the 'str'. Returns 'defaultStr' if 'str' is null\r\n     * or trimmed string is \"\".\r\n     *\r\n     * @param str\r\n     * @param defaultStr\r\n     * @return trimmed string\r\n     */\r\n    static trimL(str, defaultStr) {\r\n\r\n        let ret = str;\r\n\r\n        if (!ret || ret === null) {\r\n            ret = \"\";\r\n        }\r\n        // remove ' ', '　', '\\t'\r\n        while (ret.startsWith(\" \") || ret.startsWith(\"　\") || ret.startsWith(\"\\t\") || ret.startsWith(\"\\n\")) {\r\n            ret = ret.substring(1);\r\n        }\r\n\r\n        if (ret === \"\") {\r\n            ret = defaultStr;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Removes \" \", \"　\", and \\t from the end of the 'str'. Returns 'defaultStr' if 'str' is null or\r\n     * trimmed string is \"\".\r\n     *\r\n     * @param str\r\n     * @param defaultStr\r\n     * @return trimmed string\r\n     */\r\n    static trimR(str, defaultStr) {\r\n\r\n        let ret = str;\r\n\r\n        if (!ret || ret === null) {\r\n            ret = \"\";\r\n        }\r\n        // Delete \" \", \"　\", and \\t\r\n        while (ret.endsWith(\" \") || ret.endsWith(\"　\") || ret.endsWith(\"\\t\")) {\r\n            ret = ret.substring(0, ret.length() - 1);\r\n        }\r\n\r\n        if (ret === \"\") {\r\n            ret = defaultStr;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Removes \" \", \"　\", and \\t from both ends of the 'str'. Returns 'defaultStr' if 'str' is null or\r\n     * trimmed string is \"\".\r\n     *\r\n     * @param str\r\n     * @param defaultStr\r\n     * @return trimmed string\r\n     */\r\n    static trim(str, defaultStr) {\r\n\r\n        let ret = str;\r\n        // Delete \" \", \"　\", and \\t\r\n        ret = StringUtils.trimL(ret, defaultStr);\r\n        //ret = StringUtils.trimR(ret, defaultStr);\r\n\r\n        return ret;\r\n    }\r\n\r\n    static nonAccentVietnamese(str) {\r\n        str = str.toLowerCase();\r\n        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\r\n        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\r\n        str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\r\n        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\r\n        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\r\n        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\r\n        str = str.replace(/đ/g, \"d\");\r\n        // Some system encode vietnamese combining accent as individual utf-8 characters\r\n        str = str.replace(/\\u0300|\\u0301|\\u0303|\\u0309|\\u0323/g, \"\"); // Huyền sắc hỏi ngã nặng\r\n        str = str.replace(/\\u02C6|\\u0306|\\u031B/g, \"\"); // Â, Ê, Ă, Ơ, Ư\r\n        str = str.replace(/\\s/g, \"-\");\r\n        return str;\r\n    }\r\n\r\n    static truncateString(str, num) {\r\n        if (str.length > num) {\r\n            return str.slice(0, num) + \"...\";\r\n        } else {\r\n            return str;\r\n        }\r\n    }\r\n}","class CacheManager {\r\n    constructor(key, expire = null) {\r\n        this.key = key;\r\n        this.expire = expire;\r\n        this.items = this.getAll();\r\n    }\r\n\r\n    add(key, value) {\r\n        if (key) {\r\n            this.items = { ...this.items, [key]: value }\r\n            // console.log('[CacheManager] add: ', key, this.items);\r\n        }\r\n        this.store();\r\n    }\r\n\r\n    del(key) {\r\n        if (key) {\r\n            delete this.items[key];\r\n        }\r\n        this.store();\r\n    }\r\n\r\n    has(key) {\r\n        return this.items.hasOwnProperty(key);\r\n    }\r\n\r\n    store() {\r\n        localStorage.setItem(this.key, JSON.stringify(this.items));\r\n        localStorage.setItem(this.key + ':ts', new Date().getTime());\r\n    }\r\n\r\n    get(key) {\r\n        let all = this.getAll();\r\n        return all[key];\r\n    }\r\n\r\n    getAll() {\r\n        let stored = localStorage.getItem(this.key);\r\n        return (this.isExpired() || !stored) ?\r\n            {} :\r\n            JSON.parse(stored);\r\n    }\r\n\r\n    isExpired() {\r\n        let whenCached = localStorage.getItem(this.key + ':ts')\r\n        let age = (new Date().getTime() - whenCached);\r\n\r\n        if (this.expire && age > this.expire) {\r\n            this.clear();\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        localStorage.removeItem(this.key)\r\n        localStorage.removeItem(this.key + ':ts')\r\n    }\r\n}\r\n\r\n/**\r\n * Caches objects as singletons. Alternative, can ignore this.items and just load\r\n * always from localStorage.\r\n * @type {Object}\r\n */\r\n\r\nlet cache = {};\r\n/**\r\n * [getSingleton description]\r\n * @method getSingleton\r\n * @param  {string}     key           Key for localStorage\r\n * @param  {Number}     [expire=null] Expiration time in seconds\r\n * @param  {String}     [sep=',']     separator in case. Default: ,\r\n * @return {CacheManager}             A singleton of CacheCollection\r\n */\r\nfunction getSingleton(key, expire = null) {\r\n    if (!cache.hasOwnProperty(key)) {\r\n        cache[key] = new CacheManager(key, expire);\r\n    }\r\n    return cache[key];\r\n}\r\nexport { getSingleton, CacheManager };","import { getSingleton as LocalCache } from \"./CacheManager\";\r\n\r\nconst CACHE_KEY = \"pg_mm_settings\";\r\nconst settingsCache = LocalCache(CACHE_KEY);\r\n\r\nconst SettingsCache = (function () {\r\n\r\n    function getCacheTime() {\r\n        if (settingsCache.has(\"cacheTime\"))\r\n            return settingsCache.get(\"cacheTime\");\r\n        else\r\n            return 1200000;\r\n    }\r\n\r\n    function setCacheTimeMinute(cacheTime) {\r\n        settingsCache.add(\"cacheTime\", (cacheTime * 60000));\r\n    }\r\n\r\n    function getUrlRepository() {\r\n        if (settingsCache.has(\"urlRepository\"))\r\n            return settingsCache.get(\"urlRepository\");\r\n        else\r\n            return \"https://github.com/cuongphuong/memo_data\";\r\n    }\r\n\r\n    function setUrlRepository(urlRepository) {\r\n        settingsCache.add(\"urlRepository\", urlRepository);\r\n    }\r\n\r\n    function getRequestTimeout() {\r\n        if (settingsCache.has(\"requestTimeout\"))\r\n            return settingsCache.get(\"requestTimeout\");\r\n        else\r\n            return 5000;\r\n    }\r\n\r\n    function setRequestTimeout(requestTimeout) {\r\n        settingsCache.add(\"requestTimeout\", requestTimeout);\r\n    }\r\n\r\n    function getAccessKey() {\r\n        if (settingsCache.has(\"accessKey\"))\r\n            return settingsCache.get(\"accessKey\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setAccessKey(accessKey) {\r\n        settingsCache.add(\"accessKey\", accessKey);\r\n    }\r\n\r\n    function getUserName() {\r\n        if (settingsCache.has(\"userName\"))\r\n            return settingsCache.get(\"userName\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setUserName(userName) {\r\n        settingsCache.add(\"userName\", userName);\r\n    }\r\n\r\n    function getEmail() {\r\n        if (settingsCache.has(\"email\"))\r\n            return settingsCache.get(\"email\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setEmail(email) {\r\n        settingsCache.add(\"email\", email);\r\n    }\r\n\r\n    function getCacheMinutes() {\r\n        let millis = getCacheTime();\r\n        if (!millis) return 0;\r\n        return (millis / 60000).toFixed();\r\n    }\r\n\r\n    function setTheme(theme) {\r\n        settingsCache.add(\"theme\", theme);\r\n    }\r\n\r\n    function getTheme() {\r\n        if (settingsCache.has(\"theme\"))\r\n            return settingsCache.get(\"theme\");\r\n        else\r\n            return \"violet\";\r\n    }\r\n\r\n    function getAvatarUrl() {\r\n        if (settingsCache.has(\"avatar\"))\r\n            return settingsCache.get(\"avatar\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setAvatarUrl(url) {\r\n        settingsCache.add(\"avatar\", url);\r\n    }\r\n\r\n    function releaseCache() {\r\n        settingsCache.clear();\r\n    }\r\n\r\n    return {\r\n        getCacheTime: getCacheTime,\r\n        setCacheTimeMinute: setCacheTimeMinute,\r\n        getUrlRepository: getUrlRepository,\r\n        getRequestTimeout: getRequestTimeout,\r\n        setUrlRepository: setUrlRepository,\r\n        setRequestTimeout: setRequestTimeout,\r\n        getAccessKey: getAccessKey,\r\n        setAccessKey: setAccessKey,\r\n        getUserName: getUserName,\r\n        setUserName: setUserName,\r\n        getEmail: getEmail,\r\n        setEmail: setEmail,\r\n        getCacheMinutes: getCacheMinutes,\r\n        setTheme: setTheme,\r\n        getTheme: getTheme,\r\n        setAvatarUrl: setAvatarUrl,\r\n        getAvatarUrl: getAvatarUrl,\r\n        releaseCache: releaseCache\r\n    };\r\n})();\r\n\r\nexport default SettingsCache;","import { RequestAPI as request } from '../../Utils/RequestAPI';\r\nimport { StringUtils } from '../../Utils/StringUtils';\r\nimport SettingsCache from '../../Utils/SettingsCache';\r\n\r\nconst REPOSITORY_SOURCE = SettingsCache.getUrlRepository().replaceAll(\"https://github.com/\", \"\");\r\nconst TIME_OUT = SettingsCache.getRequestTimeout();\r\nconst TOKEN_KEY = SettingsCache.getAccessKey();\r\nconst USE_NAME = SettingsCache.getUserName();\r\nconst E_MAIL = SettingsCache.getEmail();\r\n\r\nlet config = {\r\n    base_url: \"https://api.github.com\",\r\n    timeout: TIME_OUT,\r\n    in_headers: {\r\n        Accept: \"application/vnd.github.v3+json\",\r\n    }\r\n};\r\n\r\nif (TOKEN_KEY && !StringUtils.isNullOrEmpty(TOKEN_KEY)) {\r\n    config = {\r\n        ...config,\r\n        in_headers: {\r\n            ...config.in_headers,\r\n            Authorization: \"Token \" + TOKEN_KEY\r\n        }\r\n    }\r\n}\r\n\r\n// Request config\r\nrequest.add_config(config);\r\n\r\nconst author = {\r\n    name: USE_NAME,\r\n    email: E_MAIL\r\n}\r\n\r\n// Export API\r\n/**\r\n * Search file match keyword result from Github repository\r\n * @param {String} key Keyword for search code\r\n * @returns Object Search file and infomation file\r\n */\r\nexport async function searchFromGitHub(key, signal) {\r\n    let result = await request.exe({\r\n        url: `/search/code?q=${key}+repo:${REPOSITORY_SOURCE}`,\r\n        method: \"GET\",\r\n        signal: signal\r\n    }).catch(err => {\r\n        console.log(err);\r\n        return [];\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Get all infomation from path resource\r\n * @param {String} path Path to resource\r\n * @returns Object\r\n */\r\nexport async function readContentByPath(path, signal) {\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${path}`,\r\n        method: \"GET\",\r\n        signal: signal\r\n    }).catch(err => {\r\n        throw err;\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n *  Get user information from token Github\r\n * @returns tree \r\n */\r\nexport async function getUserInfomation() {\r\n    var url = '/user';\r\n    let result = await request.exe({\r\n        url: url,\r\n        method: \"GET\",\r\n    }).catch(err => {\r\n        return null;\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n *  Get user information from Github\r\n * @param username\r\n * @returns tree \r\n */\r\nexport async function getUser(username) {\r\n    var url = username ? '/users/' + username : '/user';\r\n    let result = await request.exe({\r\n        url: url,\r\n        method: \"GET\",\r\n    }).catch(err => {\r\n        return null;\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Save a file into Git repository\r\n * @param {Object} data Content of file, encode Base64 \r\n * @param {String} filePath Path to file location\r\n * @returns \r\n */\r\nexport function save(data = {\r\n    message: 'Add file',\r\n    content: 'KEVtcHR5KQ==', // (Empty)\r\n}, filePath) {\r\n    return request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${filePath}`,\r\n        method: \"PUT\",\r\n        data: JSON.stringify(data)\r\n    });\r\n}\r\n\r\n/**\r\n * Update content of file in Github\r\n * @param {Object} data Content of file, encode Base64 \r\n * @param {String} filePath Path to file location\r\n * @returns \r\n */\r\nexport function updateContent(data = {\r\n    message: 'Update content', // (Empty)\r\n    content: 'KEVtcHR5KQ==',\r\n    sha: ''\r\n}, filePath) {\r\n    return request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${filePath}`,\r\n        method: \"PUT\",\r\n        data: JSON.stringify(data)\r\n    });\r\n}\r\n\r\n/**\r\n * Get a particular reference\r\n * @param {*} ref heads/branch\r\n * @returns sha\r\n */\r\nexport async function getRef(ref = \"heads/main\") {\r\n    // repos/cuongphuong/memo_data/git/refs/heads/main\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/refs/${ref}`,\r\n        method: \"GET\"\r\n    });\r\n\r\n    return result.object.sha;\r\n};\r\n\r\n/**\r\n * Retrieve the tree a commit points to\r\n * @param {String} sha  ex: 76ba6ba67867c6069cbb9c377a0a2c909145c778?recursive=true\r\n * @returns tree \r\n */\r\nexport async function getTree(sha = \"\") {\r\n    // repos/cuongphuong/memo_data/git/trees/76ba6ba67867c6069cbb9c377a0a2c909145c778\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/trees/${sha}`,\r\n        method: \"GET\"\r\n    });\r\n\r\n    return result.tree;\r\n};\r\n\r\n/**\r\n *  Post a new tree object having a file path pointer replaced with a new blob SHA getting a tree SHA back\r\n * @param {Array} tree  Tree\r\n * @returns tree \r\n */\r\nexport async function postTree(tree, base_tree) {\r\n    if (!tree) return;\r\n\r\n    let payload = { tree: tree };\r\n\r\n    if (base_tree) payload = {...payload, base_tree: base_tree }\r\n\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/trees`,\r\n        method: \"POST\",\r\n        data: JSON.stringify(payload)\r\n    });\r\n    return result.sha;\r\n};\r\n\r\n/**\r\n * Create a new commit object with the current commit SHA as the parent and the new tree SHA, getting a commit SHA back\r\n * \r\n */\r\nexport async function commit(parent, tree, message) {\r\n    let userData = getUser(author.name);\r\n    if (!userData) return;\r\n    let data = {\r\n        message: message,\r\n        author: author,\r\n        parents: [\r\n            parent\r\n        ],\r\n        tree: tree\r\n    }\r\n\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/commits`,\r\n        method: 'POST',\r\n        data: JSON.stringify(data)\r\n    }).catch(err => {\r\n        return null;\r\n    });\r\n    return result.sha;\r\n}\r\n\r\nexport async function updateHead(head, commit) {\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/refs/heads/` + head,\r\n        method: 'PATCH',\r\n        data: JSON.stringify({\r\n            sha: commit\r\n        })\r\n    }).catch(err => {\r\n        return null;\r\n    });\r\n    return result;\r\n}\r\n\r\nexport async function deleteAppAuthorization(client_id) {\r\n    let result = await request.exe({\r\n        url: `/applications/${client_id}/grant`,\r\n        method: 'DELETE'\r\n    }).catch(err => {\r\n        throw err;\r\n    });\r\n    return result;\r\n}\r\n\r\nexport async function markdown(str, signal) {\r\n    let result = await request.exe({\r\n        url: \"/markdown\",\r\n        method: 'POST',\r\n        signal: signal,\r\n        data: JSON.stringify({\r\n            \"text\": str\r\n        })\r\n    }).catch(err => {\r\n        throw err;\r\n    });\r\n\r\n    return result;\r\n}","import * as request from \"../API/Github/Request\";\r\nimport { StringUtils } from \"./StringUtils\";\r\n\r\n/**\r\n * Get all infomation from path resource\r\n * @param {String} path Path to resource\r\n * @returns Object\r\n */\r\nexport function readContent(path) {\r\n    return request.readContentByPath(path);\r\n}\r\n\r\n/**\r\n * Save a file into Git repository\r\n * @param {Object} data Content of file, encode Base64\r\n * @param {String} filePath Path to file location\r\n * @returns\r\n */\r\nexport function create(data = {\r\n    message: 'Add file',\r\n    content: 'KEVtcHR5KQ==', // (Empty)\r\n}, filePath) {\r\n    return request.save(data, filePath);\r\n}\r\n\r\n/**\r\n * Update content of file in Github\r\n * @param {Object} data Content of file, encode Base64\r\n * @param {String} filePath Path to file location\r\n * @returns\r\n */\r\nexport async function update(data = {\r\n    message: 'Add file',\r\n    content: 'KEVtcHR5KQ==', // (Empty)\r\n}, filePath) {\r\n\r\n    // Get last SHA version on Github\r\n    let dataAPI = await request.readContentByPath(filePath);\r\n    if (dataAPI === null) return;\r\n    let lastSha = dataAPI.sha;\r\n    data.sha = lastSha;\r\n    return request.updateContent(data, filePath);\r\n}\r\n\r\n/**\r\n * Delete a file \r\n * @param {String} filePath path to file will delete\r\n */\r\nexport function deleteFile(filePath) {\r\n    return move(\"main\", filePath);\r\n}\r\n\r\n/**\r\n * Move || remove a file to a new location\r\n * @param {String} branch master \r\n * @param {String} path \r\n * @param {String} newPath not existed then remove path\r\n * @returns true if move successfully\r\n */\r\nexport async function move(branch = \"main\", path, newPath) {\r\n    // Get last SHA of main branch\r\n    let latestCommit = await request.getRef(\"heads/main\");\r\n    // Get tree by last SHA\r\n    let tree = await request.getTree(latestCommit + '?recursive=true');\r\n    // Update tree\r\n    tree.forEach(function (ref) {\r\n        if ((!newPath || StringUtils.isNullOrEmpty(newPath)) && ref.path === path) {\r\n            ref.isDeleted = true;\r\n        } else {\r\n            if (ref.path === path) ref.path = newPath;\r\n        }\r\n\r\n        if (ref.type === \"tree\") {\r\n            ref.isDeleted = true;\r\n        }\r\n    });\r\n\r\n    tree = tree.filter(p => !p.isDeleted);\r\n    // Post update tree to API\r\n    let rootTree = await request.postTree(tree);\r\n    // Create a commit\r\n    let commit_msg = (!newPath || StringUtils.isNullOrEmpty(newPath))\r\n        ? \"Remove \" + path\r\n        : \"Move \" + path + \" to \" + newPath;\r\n    let commit = await request.commit(latestCommit, rootTree, commit_msg);\r\n    // Update HEAD to new commit\r\n    let result = await request.updateHead(branch, commit);\r\n    return result != null;\r\n}","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { deleteFile } from '../Utils/GithubCRUD';\r\nimport renderHTML from 'react-render-html';\r\nimport { markdown } from '../API/Github/Request';\r\nimport \"./Viewer.css\";\r\nimport \"./markdown.css\";\r\nimport { StringUtils } from '../Utils/StringUtils';\r\n\r\nexport default function Viewer(props) {\r\n\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    const [content, setContent] = React.useState(\"\");\r\n    const [isGithubMd, setIsGithubMd] = React.useState(false);\r\n    let { source } = props;\r\n\r\n    React.useEffect(() => {\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n\r\n        async function printContent() {\r\n            // fetch API\r\n            let htmlMd = await markdown(source.content, signal).catch(err => console.log(err));\r\n            if (!signal.aborted && !StringUtils.isNullOrEmpty(htmlMd)) {\r\n                setContent(htmlMd);\r\n                setIsGithubMd(true);\r\n            }\r\n        }\r\n        setIsGithubMd(false);\r\n        printContent();\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        }\r\n    }, [props.isPopupView, source.content])\r\n\r\n    function onEdit() {\r\n        props.onEdit(props.source.filePath);\r\n    }\r\n\r\n    async function onDelete() {\r\n        if (!window.confirm(\"Do you want to delete \" + props.source.filePath) === true) {\r\n            return;\r\n        }\r\n        try {\r\n            await deleteFile(props.source.filePath);\r\n            NotificationManager.info(\"Deleted.\");\r\n            props.onDelete(true);\r\n        } catch (err) {\r\n            props.onDelete(false);\r\n        }\r\n    }\r\n\r\n    async function handleCopyLink() {\r\n        // Make link\r\n        let url = window.location.protocol + '//' + window.location.host;\r\n        let id = source.filePath.replaceAll(\"/\", \"+\");\r\n        id = id.substr(0, id.length - 3);\r\n        id = encodeURI(id);\r\n        let link = url + \"/memo/#/get/\" + id;\r\n\r\n        await navigator.clipboard.writeText(link);\r\n        NotificationManager.info(\"Copied: \" + link);\r\n    }\r\n\r\n    console.log(\"rerender\", isGithubMd)\r\n    return (\r\n        <section className=\"section sec-html visible markdown-section\">\r\n            <span onClick={onEdit} className=\"pg_mm_view_edit_button\">Edit [/]</span>\r\n            <span onClick={onDelete} className=\"pg_mm_view_delete_button\">Delete [#]</span>\r\n            {\r\n                props.isPopupView ?\r\n                    <span onClick={() => { props.onClose() }} className=\"pg_mm_view_cls_button\">Close [x]</span>\r\n                    :\r\n                    \"\"\r\n            }\r\n            <div className=\"section-container html-wrap\">\r\n                <div className=\"custom-html-style\">\r\n                    <h2 className='pg_mm_title'>\r\n                        {source.title}\r\n                        <img onClick={handleCopyLink}\r\n                            style={{ marginLeft: 10, cursor: 'pointer' }}\r\n                            src='/memo/icon/copy.png'\r\n                            width={20}\r\n                            alt='copy'\r\n                        />\r\n                    </h2>\r\n                    {source.title ? <hr style={{ margin: '10px 0' }} /> : ''}\r\n                    <div className='pg_mm_view_content'>\r\n                        {isGithubMd ? renderHTML(content) : <ReactMarkdown children={source.content} remarkPlugins={[remarkGfm]} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import { searchFromGitHub, readContentByPath } from \"../API/Github/Request\";\r\nimport { StringUtils } from \"./StringUtils\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { NotificationManager } from 'react-notifications';\r\nexport class ContentRender {\r\n    // Delimiter between config and content\r\n    static DEFAULT_DELIMITER = \"---\";\r\n\r\n    /**\r\n     * Get content list from keyword search\r\n     * @param {String} str Keyword for search\r\n     * @returns List of content search\r\n     */\r\n    static async search(str, signal) {\r\n        if (StringUtils.isNullOrEmpty(str)) {\r\n            console.log(\"Search keyword is empty\");\r\n            return;\r\n        }\r\n\r\n        let apiResult\r\n        try {\r\n            apiResult = await searchFromGitHub(str, signal);\r\n            let totalCount = apiResult.total_count;\r\n\r\n            if (!totalCount) {\r\n                console.log(`No file mapping result key [${str}]`);\r\n                NotificationManager.info(`No file mapping result key [${str}]`);\r\n                return;\r\n            }\r\n        } catch (error) {\r\n            NotificationManager.console.warning(\"Not response data from API.\");\r\n            console.error(\"Not response data from API.\");\r\n            return;\r\n        }\r\n\r\n        let items = apiResult.items;\r\n        let pathFileList = new Set();\r\n        let postObjectList = [];\r\n\r\n        await Promise.all(items.map(async (item) => {\r\n            if (pathFileList.has(item.path)) {\r\n                return;\r\n            }\r\n\r\n            pathFileList.add(item.path);\r\n            let contentObject = await ContentRender.makeContentObject(item.path);\r\n            if (contentObject !== null) {\r\n                postObjectList = [...postObjectList, contentObject];\r\n            }\r\n        }));\r\n\r\n        return postObjectList;\r\n    }\r\n\r\n    /**\r\n     * Call to github content for get content file from file path\r\n     * @param {String} filePath Path to file on Github\r\n     * @returns Content object from JSON content\r\n     */\r\n    static async makeContentObject(filePath, signal) {\r\n        // Is invalid path\r\n        if (!filePath) {\r\n            return;\r\n        }\r\n\r\n        filePath = filePath.trim();\r\n        let apiContentResult = await readContentByPath(filePath, signal);\r\n        let contentObject = {};\r\n        if (apiContentResult && !StringUtils.isNullOrEmpty(apiContentResult.content)) {\r\n            let base64Content = apiContentResult.content;\r\n            let decodeContent = Base64.decode(base64Content);\r\n\r\n            // Get index of str delimiter config and content\r\n            let index = decodeContent.indexOf(ContentRender.DEFAULT_DELIMITER, 1);\r\n            if (index === -1) {\r\n                console.log(`Content file ${filePath} is invalid.`)\r\n                return null;\r\n            }\r\n            let cfgAreaStr = decodeContent.substring(0, index + ContentRender.DEFAULT_DELIMITER.length);\r\n            let contentAreaStr = decodeContent.substring(index + ContentRender.DEFAULT_DELIMITER.length);\r\n\r\n            let configs = ContentRender.makeConfigFromResult(cfgAreaStr);\r\n            let content = StringUtils.trim(contentAreaStr);\r\n            contentObject = { ...configs, content };\r\n            contentObject = { ...contentObject, filePath: filePath };\r\n\r\n            return contentObject;\r\n        } else {\r\n            console.log(\"Can't load data for \" + filePath);\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Make config object from content file result from API\r\n     * @param {Strng} str Config area from API result to objectt\r\n     * @returns Object configs\r\n     */\r\n    static makeConfigFromResult(str) {\r\n        const regex = /^[a-zA-Z]+:(.*)$/gm;\r\n        let m;\r\n\r\n        let configs = {};\r\n        while ((m = regex.exec(str)) !== null) {\r\n            if (m.index === regex.lastIndex) {\r\n                regex.lastIndex++;\r\n            }\r\n\r\n            let mathItems = m[0].split(\":\");\r\n            let configKey = StringUtils.trim(mathItems[0]);\r\n            let configValue = StringUtils.trim(mathItems[1]);\r\n\r\n            configs = { ...configs, [configKey]: configValue };\r\n        }\r\n        return configs;\r\n    }\r\n\r\n    /**\r\n     * Get on category level 1 on Github repository\r\n     * @param {String} path path to resource\r\n     * @returns Array All categorys on level 1\r\n     */\r\n    static async getAllCategoryList(path, signal) {\r\n        let result = await readContentByPath(path, signal);\r\n        if (!result || !Array.isArray(result) || result.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        let categoryList = [];\r\n        result.forEach(item => {\r\n            if (item.type === \"dir\" && !StringUtils.isNullOrEmpty(item.name)) {\r\n                categoryList = [...categoryList, item.name];\r\n            }\r\n        });\r\n\r\n        return categoryList;\r\n    }\r\n\r\n    /**\r\n     * Get file, dir from path resource in Git repository\r\n     * @param {String} path Path to resource for get data\r\n     * @returns Object File and Dir from resource\r\n     */\r\n    static async getAllItemFromPath(path) {\r\n        let result = await readContentByPath(path);\r\n\r\n        if (!result || !Array.isArray(result) || result.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        let resultObject = {\r\n            itemList: []\r\n        };\r\n\r\n        result.forEach(item => {\r\n            if (item.type === \"dir\" && !StringUtils.isNullOrEmpty(item.name)) {\r\n                resultObject = { ...resultObject, [item.name]: { hasContnent: false } }\r\n            }\r\n\r\n            if (item.type === \"file\" && !StringUtils.isNullOrEmpty(item.name)) {\r\n                resultObject = {\r\n                    ...resultObject, itemList: [...resultObject.itemList, {\r\n                        name: item.name,\r\n                        path: item.path\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n        return resultObject;\r\n    }\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction List({ children }) {\r\n    return (\r\n        <div className=\"pg_mm_list\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ListItem({ source = {\r\n    title: \"n/a\",\r\n    content: \"n/a\",\r\n    id: \"n/a\",\r\n    category: \"n/a\"\r\n}, handleChooseItem, activeId }) {\r\n    const style = useSelector(state => state.style);\r\n\r\n    function handleClick() {\r\n        handleChooseItem(source);\r\n    }\r\n\r\n    function isActive() {\r\n        if (activeId === source.id) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function truncPathListItem(strPath) {\r\n        // let tmpPathList = strPath.split(\"/\");\r\n        // tmpPathList = tmpPathList.filter(p => !StringUtils.isNullOrEmpty(p));\r\n        // return tmpPathList.pop();\r\n        return strPath;\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={isActive() ? style.borderLineHover : {}}\r\n            className={isActive() ? \"pg_mm_list_item pg_mm_list_item_active\" : \"pg_mm_list_item\"}\r\n            onClick={handleClick}\r\n        >\r\n            <h3 className=\"pg_mm_trunc\">{source.title}</h3>\r\n            <p className=\"pg_mm_trunc\">{source.content}</p>\r\n            <div className=\"pg_mm_list_item_info\">\r\n                {/* <span className=\"pg_mm_trunc\">{`${source.id}`}</span> */}\r\n                <span\r\n                    style={style.category}\r\n                    className=\"pg_mm_trunc\">{truncPathListItem(source.category)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nList.Item = ListItem;\r\nexport default List;","export const setActiveId = (activeId) => {\r\n    return {\r\n        type: \"SearchReducer/setActiveId\",\r\n        payload: activeId\r\n    }\r\n}\r\n\r\nexport const setMdContent = (mdContent) => {\r\n    return {\r\n        type: \"SearchReducer/setMdContent\",\r\n        payload: mdContent\r\n    }\r\n}\r\n\r\nexport const setSearchResultList = (searchResultList) => {\r\n    return {\r\n        type: \"SearchReducer/setSearchResultList\",\r\n        payload: searchResultList\r\n    }\r\n}","import { getSingleton as LocalCache } from \"./CacheManager\";\r\n\r\nconst SEARCH_CACHE_KEY = \"pg_mm_search\";\r\nconst searchCache = LocalCache(SEARCH_CACHE_KEY, null);\r\n\r\nconst SearchHistoryCache = (function () {\r\n    function getTopKeyWord() {\r\n        let allItem = searchCache.getAll();\r\n        let keysSorted = Object.keys(allItem).sort(function (a, b) {\r\n            return allItem[b] - allItem[a]\r\n        });\r\n        return keysSorted;\r\n    }\r\n\r\n    function insertKey(key) {\r\n        let allItem = searchCache.getAll();\r\n        if (Object.keys(allItem).length >= 10) {\r\n            removeMinItem(allItem);\r\n        }\r\n\r\n        if (searchCache.has(key)) {\r\n            let value = searchCache.get(key);\r\n            searchCache.add(key, ++value);\r\n        } else {\r\n            searchCache.add(key, 1);\r\n        }\r\n    }\r\n\r\n    function removeMinItem(allItem) {\r\n        let keysSorted = Object.keys(allItem).sort(function (a, b) {\r\n            return allItem[a] - allItem[b]\r\n        });\r\n        console.log(keysSorted[0]);\r\n        searchCache.del(keysSorted[0]);\r\n    }\r\n\r\n    return {\r\n        getTopKeyWord: getTopKeyWord,\r\n        insertKey: insertKey\r\n    };\r\n})();\r\n\r\nexport default SearchHistoryCache;","import React, { useState, useRef, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport Viewer from '../ViewComponents/Viewer';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\nimport List from '../ViewComponents/List';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setActiveId, setMdContent, setSearchResultList } from '../Actions/SearchReducer';\r\nimport SearchHistoryCache from '../Utils/SearchHistoryCache';\r\nimport { StringUtils } from '../Utils/StringUtils';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction QuickSearchTab(props) {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    const style = useSelector(state => state.style);\r\n\r\n    // Logic state\r\n    const dispatch = useDispatch();\r\n    const searchResultList = useSelector(state => state.searchData.searchResultList);\r\n    const mdContent = useSelector(state => state.searchData.mdContent);\r\n    const activeId = useSelector(state => state.searchData.activeId);\r\n\r\n    // UI state\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [searchCacheList, setSearchCacheList] = useState([]);\r\n    const inputObj = useRef(null);\r\n    const typingTimer = useRef(null); // timer identifier \r\n    let doneTypingInterval = 600;  // time in ms (600ms)\r\n\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        async function searchByPramater() {\r\n\r\n            /** Check url search */\r\n            if (StringUtils.isNullOrEmpty(id)) {\r\n                inputObj.current.focus();\r\n                return;\r\n            }\r\n\r\n            setIsProcessing(true);\r\n            let path = id;\r\n            path = path.replaceAll(\"+\", \"/\");\r\n            if (!path.endsWith(\".md\")) {\r\n                path = path + \".md\";\r\n            }\r\n\r\n            let contentObject = null;\r\n            try {\r\n                refController.current = new AbortController();\r\n                let signal = refController.current.signal;\r\n                contentObject = await ContentRender.makeContentObject(path, signal);\r\n            } catch (err) {\r\n                console.log(err);\r\n                setIsProcessing(false);\r\n            }\r\n\r\n            if (!contentObject) {\r\n                return;\r\n            }\r\n\r\n            let tmpList = [];\r\n            dispatch(setSearchResultList([...tmpList, contentObject]));\r\n            dispatch(setActiveId(contentObject.id));\r\n            dispatch(setMdContent(contentObject));\r\n            setIsProcessing(false);\r\n        }\r\n\r\n        refController.current = new AbortController();\r\n        // Load cache\r\n        let cacheKeywordList = SearchHistoryCache.getTopKeyWord();\r\n        setSearchCacheList(cacheKeywordList);\r\n\r\n        searchByPramater();\r\n\r\n        return () => {\r\n            window.history.replaceState(\"\", \"\", \"/memo\");\r\n            refController.current.abort();\r\n        }\r\n    }, [dispatch, id])\r\n\r\n    function handleSearchChange(evt) {\r\n        clearTimeout(typingTimer.current);\r\n        //\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        typingTimer.current = setTimeout(function () {\r\n            if (signal.aborted) {\r\n                return;\r\n            }\r\n            dispatch(setSearchResultList([]));\r\n            doneTyping(evt.target.value)\r\n        }, doneTypingInterval);\r\n    }\r\n\r\n    async function doneTyping(keyword) {\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        // fetch API\r\n        setIsProcessing(true);\r\n        let apiResultContentList = await ContentRender.search(keyword, signal);\r\n        if (apiResultContentList && apiResultContentList.length > 0) {\r\n            SearchHistoryCache.insertKey(keyword);\r\n            dispatch(setSearchResultList(apiResultContentList));\r\n\r\n            if (apiResultContentList.length > 0) {\r\n                handleChooseItem(apiResultContentList[0]);\r\n            }\r\n        }\r\n        setIsProcessing(false);\r\n    }\r\n\r\n    function handleChooseItem(source) {\r\n        dispatch(setActiveId(source.id));\r\n        dispatch(setMdContent(source));\r\n    }\r\n\r\n    function onEdit(filePath) {\r\n        props.onEdit(filePath);\r\n    }\r\n\r\n    function onDelete(isSuccess) {\r\n        if (!isSuccess) {\r\n            alert(\"403 :((\");\r\n            return;\r\n        }\r\n\r\n        let newSearchList = searchResultList.filter(p => p.id !== mdContent.id);\r\n        dispatch(setMdContent(null));\r\n        dispatch(setSearchResultList(newSearchList));\r\n    }\r\n\r\n    function renderSearchList() {\r\n        return (\r\n            <>\r\n                {\r\n                    searchResultList.length > 0 ?\r\n                        <List>\r\n                            {searchResultList.map((item, index) => <List.Item activeId={activeId}\r\n                                handleChooseItem={handleChooseItem}\r\n                                key={index}\r\n                                source={item}\r\n                            />)}\r\n                        </List>\r\n                        :\r\n                        <img className='unselectable' width=\"100%\"\r\n                            src=\"/memo/icon/empty.png\"\r\n                            alt=\"empty\"\r\n                        />\r\n                }\r\n\r\n                {\r\n                    isProcessing ?\r\n                        <div className=\"pg_mm_search_loadding\">\r\n                            <img height=\"45px\"\r\n                                style={{ position: 'absolute', top: 110 }}\r\n                                src=\"/memo/icon/blue_loading.gif\"\r\n                                alt=\"loadding...\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                        ''\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            <Layout.SiderBar>\r\n                <input\r\n                    list=\"cacheList\"\r\n                    style={style.borderLine}\r\n                    ref={inputObj}\r\n                    onChange={(evt) => { handleSearchChange(evt) }}\r\n                    type=\"text\"\r\n                    className=\"pg_mm_search_input\"\r\n                    placeholder=\"Type for search...\"\r\n                />\r\n                <img onClick={() => inputObj.current.value = \"\"}\r\n                    src='/memo/icon/clear.png'\r\n                    width={25}\r\n                    alt='copy'\r\n                    className='pg_mm_fixed_clearinput'\r\n                />\r\n                <datalist id=\"cacheList\">\r\n                    {searchCacheList.map((item, index) => <option key={index} value={item} />)}\r\n                </datalist>\r\n                <div style={{ marginTop: '5px' }}></div>\r\n                {renderSearchList()}\r\n            </Layout.SiderBar>\r\n            <Layout.RightContent>\r\n                {\r\n                    mdContent !== null ?\r\n                        <Viewer\r\n                            onEdit={onEdit}\r\n                            onDelete={onDelete}\r\n                            source={mdContent}\r\n                        /> : \"\"\r\n                }\r\n\r\n                <div className='pg_mm_logo unselectable'>\r\n                    <img width=\"350px\"\r\n                        src=\"/memo/icon/logo.png\"\r\n                        alt=\"loadding...\"\r\n                    />\r\n                </div>\r\n            </Layout.RightContent>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(QuickSearchTab);","import { getSingleton as LocalCache } from \"./CacheManager\";\r\nimport SettingsCache from \"./SettingsCache\";\r\nimport { StringUtils } from \"./StringUtils\";\r\n\r\nconst CATEGORY_CACHE_KEY = \"pg_mm_category_cache\";\r\nlet categoryCache = LocalCache(CATEGORY_CACHE_KEY, SettingsCache.getCacheTime());\r\nconsole.log(\"Category Cache Time: \", SettingsCache.getCacheTime());\r\n\r\nconst CategoryListCache = (function () {\r\n\r\n    /**\r\n     * Check category is cached\r\n     * @returns true if has item in cache\r\n     */\r\n    function isCached() {\r\n        let trees = categoryCache.get(\"tree\");\r\n        return trees && trees.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Store trees from Github API into cache\r\n     * @param {Arrays} trees Using fetch tree Github API\r\n     */\r\n    function setOrUpdateCache(trees) {\r\n        if (trees) {\r\n            trees = trees.filter(p => !p.path.startsWith(\"Images/\") && p.path !== \"Images\");\r\n        }\r\n\r\n        categoryCache.add(\"tree\", trees);\r\n    }\r\n\r\n    /**\r\n     * Make main category list (root) from trees list\r\n     * @returns {Arrays} mainCategoryList \r\n     */\r\n    function getMainCategory() {\r\n        let trees = categoryCache.get(\"tree\");\r\n        if (!trees) return [];\r\n\r\n        let mainCategoryList = trees.filter(p => isMainCategory(p));\r\n        return mainCategoryList.map(p => p.path);\r\n    }\r\n\r\n    /**\r\n   * Make category list from input path in trees list\r\n   * @returns {Arrays} categoryList \r\n   */\r\n    function getElementByPath(path) {\r\n        let trees = categoryCache.get(\"tree\");\r\n        if (!trees) return [];\r\n\r\n        let categoryList = trees.filter(p => isExistedInPath(p, path));\r\n        return makeOutputList(categoryList);\r\n    }\r\n\r\n    // Private method\r\n    function isMainCategory(element) {\r\n        return !element.path.includes(\"/\") && element.type === \"tree\";\r\n    }\r\n\r\n    function isExistedInPath(element, path) {\r\n        let elementPath = element.path;\r\n\r\n        if (!elementPath.startsWith(path)) {\r\n            return false;\r\n        }\r\n\r\n        elementPath = elementPath.replace(path, \"\");\r\n        if (elementPath.startsWith(\"/\")) {\r\n            elementPath = elementPath.substring(1, elementPath.length);\r\n        }\r\n\r\n        if (StringUtils.isNullOrEmpty(elementPath) || elementPath.includes(\"/\")) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function makeOutputList(list) {\r\n        let categoryList = [];\r\n\r\n        list.forEach(element => {\r\n            let pathList = element.path.split(\"/\");\r\n\r\n            let item = {\r\n                name: pathList[pathList.length - 1], // last item\r\n                path: element.path,\r\n                type: element.type === \"tree\" ? \"dir\" : \"file\"\r\n            }\r\n            categoryList = [...categoryList, item];\r\n        });\r\n\r\n        categoryList = categoryList.sort((a, b) => a.type.length - b.type.length);\r\n        return categoryList;\r\n    }\r\n\r\n    function updateDataIntoPath(path, newDataList) {\r\n        let correctPath = path + \"/\";\r\n        let trees = categoryCache.get(\"tree\");\r\n        if (!trees) trees = [];\r\n\r\n        let newTree = trees.filter(p => !p.path.startsWith(correctPath));\r\n        newDataList.forEach(element => {\r\n            newTree.push({\r\n                mode: \"\",\r\n                path: element.path,\r\n                sha: \"\",\r\n                type: element.type === \"dir\" ? \"tree\" : \"blob\",\r\n                url: \"\"\r\n            });\r\n        });\r\n\r\n        setOrUpdateCache(newTree);\r\n    }\r\n\r\n    return {\r\n        isCached: isCached,\r\n        setOrUpdateCache: setOrUpdateCache,\r\n        getMainCategory: getMainCategory,\r\n        getElementByPath: getElementByPath,\r\n        updateDataIntoPath: updateDataIntoPath\r\n    };\r\n})();\r\n\r\nexport default CategoryListCache;","import React from 'react';\r\nimport \"./CategoryList.css\";\r\n// import * as request from \"../API/Github/Request\";\r\nimport CategoryListCache from '../Utils/CategoryListCache';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\n\r\n/**\r\n * CategoryListr\n */\r\nfunction CategoryList({ children }) {\r\n\r\n    return (\r\n        <div className=\"pg_mm_category_list_main\">\r\n            <div className=\"section\" id=\"J1\" >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * Blockr\n */\r\nfunction Block(props) {\r\n    const [renderList, setRenderList] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let categoryList = CategoryListCache.getElementByPath(props.name);\r\n        setRenderList(categoryList);\r\n\r\n        return () => {\r\n        }\r\n    }, [props.name])\r\n\r\n    function renderItem() {\r\n        let dirList = renderList.filter(p => p.type === \"dir\");\r\n        let fileList = renderList.filter(p => p.type === \"file\");\r\n\r\n        return (\r\n            <>\r\n                {dirList.map((item, index) => <Row\r\n                    handleItemClick={props.handleItemClick}\r\n                    key={index}\r\n                    source={item}\r\n                />)}\r\n\r\n                {\r\n                    fileList.length > 0 ?\r\n                        <dl className=\"link-list\">\r\n                            {fileList.map((item, index) => <Item\r\n                                key={index}\r\n                                name={item.name}\r\n                                type={item.type}\r\n                                path={item.path}\r\n                                handleItemClick={props.handleItemClick}\r\n                            />)}\r\n                        </dl>\r\n                        :\r\n                        \"\"\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"section-inner\">\r\n                <h3 className=\"hd\">{props.name}</h3>\r\n                {renderItem()}\r\n            </div>\r\n            <div className=\"clear_float\"></div>\r\n        </>\r\n    )\r\n}\r\n\r\n/**\r\n * Rowr\n */\r\nfunction Row({ source = { name: \"\", path: \"\", type: \"\" }, handleItemClick }) {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    //\r\n    const [renderList, setRenderList] = React.useState([]);\r\n    const [sourcePath, setSourcePath] = React.useState(source.path);\r\n    const [isLoadding, setIsLoadding] = React.useState(true);\r\n    const pathList = React.useRef([source.path]);\r\n\r\n    React.useEffect(() => {\r\n        refController.current = new AbortController();\r\n        let categoryList = CategoryListCache.getElementByPath(source.path);\r\n        setRenderList(categoryList);\r\n        setIsLoadding(false);\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        }\r\n    }, [source.path]);\r\n\r\n    function fetchFromAPI(path) {\r\n        // fetch API\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n\r\n        setIsLoadding(true);\r\n        ContentRender.getAllItemFromPath(path).then(data => {\r\n            if (signal.aborted) return;\r\n\r\n            console.log(\"updated\");\r\n            let dataList = makeRenderList(data, path);\r\n            setSourcePath(path);\r\n            setRenderList(dataList);\r\n            setIsLoadding(false);\r\n\r\n            CategoryListCache.updateDataIntoPath(path, dataList)\r\n        }).catch(err => {\r\n            console.log(\"Fail to fetch data.\", err);\r\n            // check unmount component\r\n            if (signal.aborted) return;\r\n            setRenderList([]);\r\n            setIsLoadding(false);\r\n        });\r\n    }\r\n\r\n    function gotoPath(path) {\r\n        let index = pathList.current.indexOf(path);\r\n        let tmpList = pathList.current.filter(p => pathList.current.indexOf(p) <= index);\r\n        pathList.current = tmpList;\r\n        setIsLoadding(true);\r\n        // load from cache\r\n        let categoryList = CategoryListCache.getElementByPath(path);\r\n\r\n        // request is reload or cache is empty\r\n        if (path === sourcePath || categoryList.length === 0) {\r\n            fetchFromAPI(path);\r\n            return;\r\n        }\r\n        setRenderList(categoryList);\r\n        setSourcePath(path);\r\n        setIsLoadding(false);\r\n    }\r\n\r\n    function onClickSubFolder(name) {\r\n        pathList.current = [...pathList.current, sourcePath + \"/\" + name];\r\n        gotoPath(sourcePath + \"/\" + name)\r\n    }\r\n\r\n    function renderPathList() {\r\n        let fixPathList = pathList.current.map(path => truncPathListItem(path));\r\n        return (\r\n            <>\r\n                {fixPathList.map((item, index) => <span className=\"pg_mm_path_item\"\r\n                    key={index}\r\n                    onClick={() => gotoPath(pathList.current[index])}>\r\n                    {item}\r\n                </span>)}\r\n            </>\r\n        )\r\n    }\r\n\r\n    function renderItem() {\r\n        if (isLoadding) {\r\n            return (<img\r\n                height=\"20px\"\r\n                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                alt=\"loadding...\"\r\n            />);\r\n        }\r\n\r\n        return renderList.map((item, index) => <Item\r\n            key={index}\r\n            name={item.name}\r\n            type={item.type}\r\n            path={item.path}\r\n            handleItemClick={handleItemClick}\r\n            onClickSubFolder={(name) => onClickSubFolder(name)}\r\n        />);\r\n    }\r\n\r\n    return (\r\n        <dl className=\"link-list\">\r\n            <dt\r\n                className=\"link-hd\"\r\n                onClick={() => gotoPath(pathList.current[pathList.current.length - 1])}>{renderPathList()}\r\n            </dt>\r\n            <dd className=\"link-bd\">\r\n                {renderItem()}\r\n            </dd>\r\n        </dl>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * Itemr\n */\r\nfunction Item(props) {\r\n    if (props.type === \"file\") {\r\n        let title = props.name.replace(\".md\", \"\");\r\n        return (\r\n            <p\r\n                onClick={() => props.handleItemClick(props.path)}\r\n                title={title} >\r\n                {title}\r\n            </p>);\r\n    }\r\n\r\n    if (props.type === \"dir\") {\r\n        return (<span\r\n            onClick={() => props.onClickSubFolder(props.name)}\r\n            title=\"\" >\r\n            {props.name}\r\n        </span>);\r\n    }\r\n}\r\n\r\n\r\nfunction makeRenderList(categoryObj, sourcePath) {\r\n    let renderList = [];\r\n    for (const property in categoryObj) {\r\n        if (typeof categoryObj[property] === \"object\" && property !== \"itemList\") {\r\n            renderList = [...renderList, {\r\n                name: property,\r\n                path: `${sourcePath}/${property}`,\r\n                type: \"dir\"\r\n            }]\r\n        }\r\n    }\r\n\r\n    if (categoryObj.itemList) {\r\n        categoryObj.itemList.forEach(item => {\r\n            item = { ...item, type: \"file\" }\r\n            renderList = [...renderList, item];\r\n        });\r\n    }\r\n    return renderList;\r\n}\r\n\r\nfunction truncPathListItem(strPath) {\r\n    let tmpPathList = strPath.split(\"/\");\r\n    return tmpPathList.pop();\r\n}\r\n\r\nCategoryList.Block = Block;\r\nexport default CategoryList;","import React from 'react';\r\nimport Viewer from '../ViewComponents/Viewer';\r\nimport \"./ViewPopup.css\";\r\n\r\nexport default function ViewPopup(props) {\r\n    const [stype, setStype] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        setStype({\r\n            display: props.display\r\n        });\r\n\r\n        return () => {\r\n        }\r\n    }, [props.display])\r\n\r\n    function onClosePopup() {\r\n        props.onClose();\r\n    }\r\n\r\n    function onEdit(filePath) {\r\n        props.onEdit(filePath);\r\n    }\r\n\r\n    async function onDelete(isSuccess) {\r\n        if (!isSuccess) {\r\n            props.onDelete(isSuccess);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={stype} className=\"pg_mm_view_popup\">\r\n            {props.source ?\r\n                <Viewer\r\n                    isPopupView\r\n                    source={props.source}\r\n                    onDelete={onDelete}\r\n                    onClose={onClosePopup}\r\n                    onEdit={onEdit}\r\n                />\r\n                : stype && !stype.animationName\r\n                    ?\r\n                    <img\r\n                        className=\"pg_mm_loadding\"\r\n                        height=\"50px\"\r\n                        src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                        alt=\"loadding...\"\r\n                    /> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n","export const setCategoryList = (categoryList) => {\r\n    return {\r\n        type: \"SET_CATEGORY_LIST\",\r\n        payload: categoryList\r\n    }\r\n}\r\n\r\nexport const setBlockCategoryObject = (categoryObject) => {\r\n    return {\r\n        type: \"SET_BLOCK_CATEGORY_OBJECT\",\r\n        payload: categoryObject\r\n    }\r\n}","import React from 'react';\r\nimport Layout from './Layout';\r\nimport CategoryList from '../ViewComponents/CategoryList';\r\nimport ViewPopup from './ViewPopup';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCategoryList } from '../Actions/ListTabReducer';\r\nimport CategoryListCache from '../Utils/CategoryListCache';\r\nimport * as request from '../API/Github/Request';\r\nimport SettingsCache from '../Utils/SettingsCache';\r\n\r\nexport default function ListTab(props) {\r\n    const dispatch = useDispatch();\r\n    //\r\n    const categoryList = useSelector(state => state.listTabData.categoryList);\r\n    const [isDisplayPopup, setIsDisplayPopup] = React.useState(\"none\");\r\n    const [dataView, setDataView] = React.useState(null);\r\n    const [isLoadding, setIsLoadding] = React.useState(false);\r\n\r\n    async function fetchTreesList(callback = function () { }) {\r\n        try {\r\n            let latestCommit = await request.getRef(\"heads/main\");\r\n            let trees = await request.getTree(latestCommit + '?recursive=true');\r\n            callback(trees);\r\n        } catch (err) {\r\n            // Redirect to Setting screen.\r\n            props.onFailed(\"Settings\");\r\n        };\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        async function getTreeList(callback = function () { }) {\r\n            try {\r\n                let latestCommit = await request.getRef(\"heads/main\");\r\n                let trees = await request.getTree(latestCommit + '?recursive=true');\r\n                callback(trees);\r\n            } catch (err) {\r\n                // Redirect to Setting screen.\r\n                props.onFailed(\"Settings\");\r\n            };\r\n        }\r\n\r\n        // Checking cache\r\n        if (!CategoryListCache.isCached()) {\r\n            setIsLoadding(true);\r\n            getTreeList(function (trees) {\r\n                // Re-update cache\r\n                CategoryListCache.setOrUpdateCache(trees);\r\n                dispatch(setCategoryList(CategoryListCache.getMainCategory()));\r\n                setIsLoadding(false);\r\n            });\r\n        }\r\n\r\n        let mainCategoryList = CategoryListCache.getMainCategory();\r\n        dispatch(setCategoryList(mainCategoryList));\r\n        return () => {\r\n            setDataView(null);\r\n        }\r\n    }, [dispatch, props]);\r\n\r\n    function handleItemClick(path) {\r\n        setIsDisplayPopup(\"block\");\r\n        ContentRender.makeContentObject(path).then(data => {\r\n            setDataView(data);\r\n        });\r\n    }\r\n\r\n    function handleClosePopups() {\r\n        setTimeout(function () {\r\n            setIsDisplayPopup(\"none\");\r\n        }, 100)\r\n        setDataView(null);\r\n    }\r\n\r\n    function handleReloadDataCache() {\r\n        CategoryListCache.setOrUpdateCache(null);\r\n        setIsLoadding(true);\r\n        dispatch(setCategoryList([]));\r\n        fetchTreesList(function (trees) {\r\n            // Re-update cache\r\n            setTimeout(function () {\r\n                CategoryListCache.setOrUpdateCache(trees);\r\n                dispatch(setCategoryList(CategoryListCache.getMainCategory()));\r\n                setIsLoadding(false);\r\n            }, 500);\r\n        });\r\n    }\r\n\r\n    function loadding() {\r\n        if (isLoadding) {\r\n            return (\r\n                <img className='pg_mm_list_loadding unselectable' width=\"50px\"\r\n                    src=\"/memo/icon/blue_loading.gif\"\r\n                    alt=\"empty\"\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            {loadding()}\r\n            <Layout.MiddleContent >\r\n\r\n                {/* Category header */}\r\n                <span\r\n                    onClick={handleReloadDataCache}\r\n                    className='pg_mm_reload_button'>\r\n                    Reload (Caching {SettingsCache.getCacheMinutes()} minutes)\r\n                </span>\r\n\r\n                {/* Category content view */}\r\n                <CategoryList>\r\n                    {\r\n                        categoryList.map((categoryName, index) => <CategoryList.Block\r\n                            handleItemClick={handleItemClick}\r\n                            key={index}\r\n                            name={categoryName}\r\n                        />)\r\n                    }\r\n                </CategoryList>\r\n\r\n                {/* Popup view */}\r\n                <div className=\"pg_mm_view_popup_block\">\r\n                    <ViewPopup\r\n                        onDelete={(isSuccess) => isSuccess ? setIsDisplayPopup(\"none\") : props.onFailed(\"Settings\")}\r\n                        onEdit={(filePath) => props.onEdit(filePath)}\r\n                        onClose={handleClosePopups}\r\n                        source={dataView}\r\n                        display={isDisplayPopup}\r\n                    />\r\n                </div>\r\n\r\n            </Layout.MiddleContent >\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ContentRender } from \"../Utils/ContentRender\";\r\n\r\nexport default function CategoryInput(props) {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    const style = useSelector(state => state.style);\r\n    //\r\n    const nameInput = React.useRef(\"\");\r\n    const pathDataList = React.useRef([]);\r\n    const [categoryList, setCategoryList] = React.useState([]);\r\n    const [pathRenderList, setPathRenderList] = React.useState([]);\r\n    const [isFetching, setIsFetching] = React.useState(false);\r\n    const makeReturn = () => {\r\n        let category = \"\";\r\n        if (pathDataList.current && pathDataList.current.length > 0) {\r\n            category = pathDataList.current.map((item) => item.name).join(\"\");\r\n        }\r\n        return { category: category, title: nameInput.current.value }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        function makePathStr(list) {\r\n            if (list.length === 0) return \"\";\r\n\r\n            let path = \"\";\r\n            list.forEach(el => {\r\n                path += el.name;\r\n            });\r\n            return path;\r\n        }\r\n        // Set default title\r\n        nameInput.current.value = props.defaultTitle;\r\n        // Set default category\r\n        let categorys = props.defaultCategory.split(\"/\");\r\n        categorys = categorys.filter(p => p !== \"\");\r\n        let categoryPathList = [];\r\n        categorys.forEach(element => {\r\n            element = { name: element + \"/\" };\r\n            element = { ...element, path: makePathStr(categoryPathList) + element.name }\r\n            element = { ...element, subList: [] }\r\n            categoryPathList.push(element);\r\n        });\r\n        pathDataList.current = categoryPathList;\r\n        setPathRenderList(categoryPathList);\r\n\r\n        // Make category list\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        ContentRender.getAllCategoryList(\"\", signal).then((data) => {\r\n            // check unmount component\r\n            if (signal.aborted) return;\r\n            setCategoryList([...data]);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        };\r\n    }, [props]);\r\n\r\n    async function makeNewCategory(name, callback = function () { }) {\r\n        if (name !== \"/\" && name.endsWith(\"/\")) {\r\n            // Fetch sublist\r\n            let currentPath = pathRenderList.map((item) => item.name).join(\"\");\r\n            let newPath = {\r\n                name: name,\r\n                path: currentPath + name,\r\n                subList: [],\r\n            };\r\n            pathDataList.current = [...pathDataList.current, newPath];\r\n            setPathRenderList(pathDataList.current);\r\n            callback(true);\r\n\r\n\r\n            // Update sub list from API\r\n            setIsFetching(true);\r\n            refController.current = new AbortController();\r\n            let signal = refController.current.signal;\r\n            let tmpList = await makeSubListFromAPI(signal);\r\n            // Component is unmount\r\n            if (signal.aborted) return;\r\n            pathDataList.current = tmpList;\r\n            setPathRenderList(tmpList);\r\n            setIsFetching(false);\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    async function makeSubListFromAPI(signal) {\r\n        let lastItem = pathDataList.current.at(-1);\r\n        // fetch API\r\n        let subDataList = await ContentRender.getAllCategoryList(lastItem.path, signal);\r\n        // Remove last item in list\r\n        let tmpList = [...pathDataList.current];\r\n        tmpList.pop();\r\n        //\r\n        lastItem = { ...lastItem, subList: subDataList }\r\n        tmpList.push(lastItem);\r\n        return tmpList\r\n    }\r\n\r\n    function handleKeyInput(evt) {\r\n        let key = evt.which || evt.keyCode || evt.charCode;\r\n        if (/*key === 8 || */ key === 46 && pathDataList.current.length > 0) {\r\n            // let lastItem = pathDataList.current.at(-1);\r\n            // evt.target.value = lastItem.name.substring(0, lastItem.name.length - 1);\r\n            let tmpList = [...pathDataList.current];\r\n            tmpList.pop();\r\n            pathDataList.current = tmpList;\r\n            setPathRenderList(pathDataList.current);\r\n        } else {\r\n            makeNewCategory(evt.target.value, function (success = false) {\r\n                if (success) evt.target.value = \"\";\r\n                props.onChange(makeReturn());\r\n            });\r\n        }\r\n\r\n        evt.target.focus();\r\n    }\r\n\r\n    function setNameInputValue(val) {\r\n        makeNewCategory(val + \"/\", function () {\r\n            props.onChange(makeReturn());\r\n        });\r\n        // nameInput.current.value = \"\";\r\n        nameInput.current.focus();\r\n    }\r\n\r\n    function renderSubCategoryList() {\r\n        let currentCtgList = [];\r\n        let lastItem = pathRenderList.at(-1);\r\n        if (pathRenderList.length > 0) {\r\n            currentCtgList = [...lastItem.subList];\r\n        } else {\r\n            currentCtgList = categoryList;\r\n        }\r\n\r\n        if (isFetching) {\r\n            return (\r\n                <div style={{ position: \"absolute\", top: 6, zIndex: -1, color: \"#cdcdcd\" }}>\r\n                    <img height=\"20px\"\r\n                        src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                        alt=\"loadding...\"\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (currentCtgList.length === 0) {\r\n            let name = \"root/\";\r\n            if (lastItem && lastItem.name) {\r\n                name = \".../\" + lastItem.name;\r\n            }\r\n\r\n            return (\r\n                <div style={{ position: \"absolute\", top: 6, zIndex: -1, color: \"#cdcdcd\" }}>No category from {name}</div>\r\n            )\r\n        }\r\n\r\n        return currentCtgList.map((item, index) => (\r\n            <span\r\n                onClick={() => setNameInputValue(item)}\r\n                className=\"pg_mm_sublist_item\"\r\n                key={index}\r\n            >\r\n                {item}\r\n            </span>\r\n        ));\r\n    }\r\n\r\n    // console.log(\"Re-render CategoryInput.\");\r\n    return (\r\n        <div style={{ marginBottom: 50, height: 30 }}>\r\n            <div className=\"pg_mm_path_parent\">\r\n                <span className=\"pg_mm_selected_path_item\">/</span>\r\n                {/* Render path */}\r\n                {pathRenderList.map((item, index) => (\r\n                    <span className=\"pg_mm_selected_path_item\" key={index}>\r\n                        {item.name}\r\n                    </span>\r\n                ))}\r\n                {/* Input path */}\r\n                <input\r\n                    style={style.borderLine}\r\n                    placeholder=\"Press [DEL] to back to previous folder.\"\r\n                    ref={nameInput}\r\n                    className=\"pg_mm_name_input\"\r\n                    onKeyUp={(evt) => handleKeyInput(evt)}\r\n                />\r\n            </div>\r\n            <div className=\"sub_list_redered\" style={{ marginTop: 5, position: \"relative\" }}>\r\n                {renderSubCategoryList()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { getSingleton as LocalCache } from \"./CacheManager\";\r\n\r\nconst CACHE_KEY = \"pg_mm_content_writer\";\r\nconst writerCache = LocalCache(CACHE_KEY);\r\n\r\nconst ContentWriterCache = (function () {\r\n\r\n    function setTitle(title) {\r\n        writerCache.add(\"title\", title);\r\n    }\r\n\r\n    function getTitle() {\r\n        let title = writerCache.get(\"title\");\r\n        if (!title) return \"\";\r\n        return title;\r\n    }\r\n\r\n    function setContent(content) {\r\n        writerCache.add(\"content\", content);\r\n    }\r\n\r\n    function getContent() {\r\n        let content = writerCache.get(\"content\");\r\n        if (!content) return \"\";\r\n        return content;\r\n    }\r\n\r\n    function releaseCache() {\r\n        writerCache.add(\"title\", \"\");\r\n        writerCache.add(\"content\", \"\");\r\n        writerCache.add(\"path\", \"\");\r\n        writerCache.add(\"isUpdate\", false);\r\n    }\r\n\r\n    function setPath(path) {\r\n        writerCache.add(\"path\", path);\r\n    }\r\n\r\n    function getPath() {\r\n        let path = writerCache.get(\"path\");\r\n        if (!path) return \"\";\r\n        return path;\r\n    }\r\n\r\n    function getCategory() {\r\n        let path = writerCache.get(\"path\");\r\n        if (!path) return \"\";\r\n\r\n        if (!path.includes(\"/\")) return \"\";\r\n\r\n        return path.replace(/\\/[^/]+.md/gm, \"\");\r\n    }\r\n\r\n    function setIsUpdate(isUpdate) {\r\n        writerCache.add(\"isUpdate\", isUpdate);\r\n    }\r\n\r\n    function isUpdate() {\r\n        let isUpdate = writerCache.get(\"isUpdate\");\r\n        if (!isUpdate) return false;\r\n        return isUpdate;\r\n    }\r\n\r\n    return {\r\n        setTitle: setTitle,\r\n        getTitle: getTitle,\r\n        setContent: setContent,\r\n        getContent: getContent,\r\n        releaseCache: releaseCache,\r\n        setPath: setPath,\r\n        getPath: getPath,\r\n        getCategory: getCategory,\r\n        setIsUpdate: setIsUpdate,\r\n        isUpdate: isUpdate\r\n    };\r\n})();\r\n\r\nexport default ContentWriterCache;","import React, { useState, useRef } from 'react';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport Layout from './Layout';\r\nimport * as hub from '../Utils/GithubCRUD';\r\nimport { StringUtils } from '../Utils/StringUtils';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport CategoryInput from '../ViewComponents/CategoryInput';\r\nimport { getSingleton as LocalCache } from '../Utils/CacheManager';\r\n// import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\nimport { useSelector } from 'react-redux';\r\nimport ContentWriterCache from '../Utils/ContentWriterCache';\r\n// var fs = require('fs');\r\n\r\nexport default function WriterTab(props) {\r\n    // Use for control sync process\r\n    const refController = React.useRef(null);\r\n    // Use for store data\r\n    const mdParser = new MarkdownIt();\r\n    const [content, setContent] = useState(\"\");\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const title = useRef(\"\");\r\n    const category = useRef(\"\");\r\n\r\n    // Use for update file\r\n    const { updateAction } = props;\r\n    const { inputPath, clearPath } = updateAction;\r\n    const isCreateed = useRef(!inputPath);\r\n\r\n    const originData = useRef({\r\n        title: null,\r\n        category: null,\r\n        content: null\r\n    });\r\n\r\n    const style = useSelector(state => state.style);\r\n\r\n    React.useEffect(() => {\r\n        // Check settings\r\n        const CACHE_KEY = \"pg_mm_settings\";\r\n        const cache = LocalCache(CACHE_KEY);\r\n        const TOKEN_KEY = cache.has(\"accessKey\") ? cache.get(\"accessKey\") : \"\";\r\n\r\n        if (StringUtils.isNullOrEmpty(TOKEN_KEY)) {\r\n            props.onFailed(\"Settings\");\r\n            return;\r\n        }\r\n\r\n        if (inputPath === ContentWriterCache.isUpdate() || isCreateed.current) {\r\n            title.current = ContentWriterCache.getTitle();\r\n            category.current = ContentWriterCache.getCategory();\r\n            setContent(ContentWriterCache.getContent());\r\n\r\n            isCreateed.current = !ContentWriterCache.isUpdate();\r\n            return;\r\n        }\r\n\r\n        // For update data\r\n        clearPath();\r\n        ContentWriterCache.setIsUpdate(true);\r\n        ContentWriterCache.setPath(inputPath);\r\n\r\n        // fetch API\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        ContentRender.makeContentObject(inputPath, signal).then(data => {\r\n            if (!data) return;\r\n            title.current = data.title;\r\n            category.current = data.category;\r\n            originData.current = {\r\n                title: data.title,\r\n                category: data.category,\r\n                originData: data.content\r\n            }\r\n            setContent(data.content);\r\n        });\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        }\r\n    }, [clearPath, inputPath, props])\r\n\r\n    function handleImageUpload(file, callback) {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            let fileName = new Date().getTime() + \"_\" + file.name;\r\n            let data = {\r\n                message: `Upload file ${fileName}`,\r\n                content: reader.result.substr(reader.result.indexOf(',') + 1)\r\n            }\r\n\r\n            hub.create(data, `Images/${fileName}`).then(res => {\r\n                if (res && res.content && res.content.download_url) {\r\n                    callback(res.content.download_url)\r\n                }\r\n            });\r\n        }\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    /**\r\n     * After click button submit collect data from form and call API\r\n     */\r\n    async function handleSubmit() {\r\n        if (StringUtils.trim(title.current, \"\") === \"\") {\r\n            NotificationManager.error(\"Please input title!!!\");\r\n            return;\r\n        }\r\n\r\n        if (StringUtils.trim(category.current, \"\") === \"\") {\r\n            NotificationManager.error(\"Please select category!!!\");\r\n            return;\r\n        }\r\n\r\n        if (StringUtils.trim(content, \"\") === \"\" || StringUtils.trim(content, \"\").length < 50) {\r\n            NotificationManager.error(\"Please input content than 50 charactor!!!\");\r\n            return;\r\n        }\r\n\r\n        // correct data\r\n        // make data from form data for API body\r\n        let id = new Date().getTime();\r\n        let titleFix = /*StringUtils.nonAccentVietnamese(title.current);*/title.current;\r\n        let filePath = `${category.current}/${StringUtils.truncateString(titleFix, 25)}.md`;\r\n        filePath = filePath.replaceAll(\"//\", \"/\");\r\n\r\n        // content of file md\r\n        let fileContent = \"\";\r\n        fileContent += `---\\n`;\r\n        fileContent += `id: ${id}\\n`;\r\n        fileContent += `title: ${title.current}\\n`;\r\n        fileContent += `category: ${category.current}\\n`;\r\n        fileContent += `---\\n\\n`;\r\n        fileContent += content;\r\n\r\n        let commitMsg = isCreateed.current\r\n            ? \"Create file \" + category.current + \"/\" + StringUtils.truncateString(titleFix, 25)\r\n            : \"Update file \" + inputPath;\r\n\r\n        let data = {\r\n            message: commitMsg,\r\n            content: StringUtils.base64Encode(fileContent)\r\n        }\r\n\r\n        store(data, filePath);\r\n    }\r\n\r\n    async function store(data, filePath) {\r\n        setIsProcessing(true);\r\n        if (isCreateed.current) {\r\n\r\n            let response\r\n            try {\r\n                response = await hub.create(data, filePath);\r\n            } catch (err) {\r\n                setIsProcessing(false);\r\n                NotificationManager.error(err + \"\");\r\n            }\r\n\r\n            if (response && response.commit) {\r\n                NotificationManager.info(response.commit.html_url, \"Commited\", 5000, function () {\r\n                    window.open(response.commit.html_url, '_blank').focus();\r\n                }, false);\r\n                setIsProcessing(false);\r\n                // release cache\r\n                ContentWriterCache.releaseCache();\r\n            }\r\n        } else {\r\n            if (title.current !== originData.current.title\r\n                || category.current !== originData.current.category) {\r\n\r\n                try {\r\n                    await hub.move(\"main\", inputPath, filePath);\r\n                } catch (err) {\r\n                    setIsProcessing(false);\r\n                    NotificationManager.error(err + \"\");\r\n                }\r\n            }\r\n\r\n            if (content !== originData.current.content) {\r\n                let isUpdated = true;\r\n                await hub.update(data, filePath).catch(err => {\r\n                    NotificationManager.error(err + \"\");\r\n                    isUpdated = false;\r\n                });\r\n\r\n                if (isUpdated) {\r\n                    NotificationManager.info(\"Updated\");\r\n                    // release cache\r\n                    ContentWriterCache.releaseCache();\r\n                }\r\n                setIsProcessing(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleChangeCategory(source = { category: \"\", title: \"\" }) {\r\n        title.current = source.title;\r\n        category.current = source.category;\r\n\r\n        //cache\r\n        ContentWriterCache.setContent(content);\r\n        ContentWriterCache.setTitle(source.title);\r\n        if (!StringUtils.isNullOrEmpty(source.title)) {\r\n            ContentWriterCache.setPath(source.category + source.title + \".md\");\r\n        } else {\r\n            ContentWriterCache.setPath(source.category);\r\n        }\r\n    }\r\n\r\n    function handleChangeConetnt({ html, text }) {\r\n        setContent(text)\r\n\r\n        //cache\r\n        ContentWriterCache.setContent(text);\r\n        ContentWriterCache.setTitle(title.current);\r\n    }\r\n\r\n    function handleClearForm() {\r\n        ContentWriterCache.releaseCache();\r\n        setContent(\"Loadding...\");\r\n\r\n        setTimeout(function () {\r\n            title.current = \"\";\r\n            category.current = \"\";\r\n            isCreateed.current = true;\r\n            setContent(\"\");\r\n        }, 500)\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            <Layout.MiddleContent>\r\n                <>\r\n                    <div style={{ width: \"85%\", height: 90, float: 'left' }}>\r\n                        <CategoryInput\r\n                            defaultTitle={title.current}\r\n                            defaultCategory={category.current}\r\n                            onChange={handleChangeCategory}\r\n                        />\r\n                    </div>\r\n                    {/* Save button  */}\r\n                    <button\r\n                        style={{ ...style.button, width: '9%', height: '40px', float: 'right', marginLeft: 2 }}\r\n                        className='pg_mm_write_button'\r\n                        onClick={handleSubmit}>\r\n                        {isCreateed.current ? \"Create\" : \"Update\"}\r\n                    </button>\r\n\r\n                    {\r\n                        !StringUtils.isNullOrEmpty(content)\r\n                            ?\r\n                            <button\r\n                                style={{ ...style.button, width: '5%', height: '40px', float: 'right', backgroundColor: '#dcdcdc' }}\r\n                                className='pg_mm_write_button'\r\n                                onClick={handleClearForm}>\r\n                                Cancel\r\n                            </button>\r\n                            : \"\"\r\n                    }\r\n                </>\r\n                <div style={{ marginTop: '5px' }}></div>\r\n                <MdEditor\r\n                    value={content}\r\n                    onImageUpload={handleImageUpload}\r\n                    style={{ height: 'calc(100vh - 160px', width: '100%' }}\r\n                    renderHTML={text => mdParser.render(text)}\r\n                    onChange={handleChangeConetnt}\r\n                />\r\n\r\n                {\r\n                    isProcessing ?\r\n                        <div className=\"pg_mm_loadding\">\r\n                            <img height=\"45px\"\r\n                                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                                alt=\"loadding...\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                        ''\r\n                }\r\n\r\n            </Layout.MiddleContent>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Layout from './Layout';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport './SettingsTab.css';\r\nimport { useSelector } from 'react-redux';\r\nimport SettingsCache from '../Utils/SettingsCache';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\"\r\nimport { faArrowAltCircleRight, faSave, faEyeSlash, faEye } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nexport default function SettingsTab() {\r\n    const urlRepositoryInput = React.useRef(null);\r\n    const cacheTimeDayInput = React.useRef(null);\r\n    const requestTimeoutInput = React.useRef(null);\r\n    const accessKeyInput = React.useRef(null);\r\n    const userNameInput = React.useRef(null);\r\n    const emailInput = React.useRef(null);\r\n    const avatarViewer = React.useRef(null);\r\n\r\n    const style = useSelector(state => state.style);\r\n    const app_id = \"95da9e48d369117d17bb\";\r\n    const [isView, setIsView] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        urlRepositoryInput.current.value = SettingsCache.getUrlRepository();\r\n        cacheTimeDayInput.current.value = SettingsCache.getCacheMinutes();\r\n        requestTimeoutInput.current.value = SettingsCache.getRequestTimeout();\r\n        if (SettingsCache.getAccessKey()) {\r\n            let tokenSet = SettingsCache.getAccessKey();\r\n            accessKeyInput.current.value = tokenSet;\r\n        }\r\n\r\n        userNameInput.current.value = SettingsCache.getUserName();\r\n        emailInput.current.value = SettingsCache.getEmail();\r\n        if (SettingsCache.getAvatarUrl())\r\n            avatarViewer.current.src = SettingsCache.getAvatarUrl();\r\n        return () => { }\r\n    }, [])\r\n\r\n\r\n    function handleSave() {\r\n        if (!window.confirm(\"Do you want to save?\") === true) {\r\n            return;\r\n        }\r\n\r\n        SettingsCache.setUrlRepository(urlRepositoryInput.current.value);\r\n        SettingsCache.setCacheTimeMinute(cacheTimeDayInput.current.value);\r\n        SettingsCache.setRequestTimeout(requestTimeoutInput.current.value);\r\n        SettingsCache.setAccessKey(accessKeyInput.current.value);\r\n        SettingsCache.setUserName(userNameInput.current.value);\r\n        SettingsCache.setEmail(emailInput.current.value);\r\n\r\n        NotificationManager.info(\"Success, reload after 2s.\");\r\n        setTimeout(function () {\r\n            window.location.reload();\r\n        }, 2000);\r\n    }\r\n\r\n    function handleAuthen() {\r\n        window.location.href = \"https://github.com/login/oauth/authorize?client_id=\" + app_id\r\n            + \"&scope=public_repo\";\r\n    }\r\n\r\n    async function logout() {\r\n        try {\r\n            // deleteAppAuthorization(app_id);\r\n            SettingsCache.releaseCache();\r\n            NotificationManager.info(\"Success\");\r\n            setTimeout(function () {\r\n                window.location.reload();\r\n            }, 1000);\r\n        } catch (err) {\r\n            NotificationManager.err(\"err\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            <Layout.MiddleContent >\r\n                <h3 className='pg_mm_settings_area'>Data settings</h3>\r\n                <input\r\n                    ref={urlRepositoryInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='URL to repository...'\r\n                    defaultValue=\"https://github.com/cuongphuong/memo_data\"\r\n                />\r\n\r\n                <br />\r\n                <input\r\n                    type=\"number\"\r\n                    ref={cacheTimeDayInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Cache time (ms)...'\r\n                    defaultValue=\"10\"\r\n                />\r\n\r\n                <br />\r\n                <input\r\n                    type=\"number\"\r\n                    ref={requestTimeoutInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Request timeout (ms)...'\r\n                    defaultValue=\"5000\"\r\n                />\r\n\r\n                <h3 className='pg_mm_settings_area'>Github account setting</h3>\r\n\r\n                <input\r\n                    type={isView ? \"text\" : \"password\"}\r\n                    ref={accessKeyInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Access key (if private repository)...'\r\n                />\r\n                <span className='pg_mm_show_accesskey'>\r\n                    {\r\n                        !isView ?\r\n                            <FontAwesomeIcon icon={faEyeSlash} onClick={() => setIsView(true)} />\r\n                            :\r\n                            <FontAwesomeIcon icon={faEye} onClick={() => setIsView(false)} />\r\n                    }\r\n                </span>\r\n\r\n                <br />\r\n                <input\r\n                    ref={userNameInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Username github...'\r\n                />\r\n\r\n                <br />\r\n                <input\r\n                    ref={emailInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Email...'\r\n                />\r\n\r\n                {/*  Avatar */}\r\n                {SettingsCache.getAvatarUrl() ? <> <br /><img style={style.button} width={50} ref={avatarViewer} alt=\"avatar\"></img></> : \"\"}\r\n                <br />\r\n                <button\r\n                    style={style.button}\r\n                    onClick={handleSave}\r\n                    className='pg_mm_settings_submit'>\r\n                    <FontAwesomeIcon icon={faSave} />\r\n                    <span>  Save</span>\r\n                </button>\r\n\r\n                {SettingsCache.getAccessKey() ?\r\n                    <button\r\n                        style={style.button}\r\n                        onClick={(logout)}\r\n                        className='pg_mm_settings_submit'>\r\n                        <FontAwesomeIcon icon={faArrowAltCircleRight} />\r\n                        <span>  Logout</span>\r\n                    </button>\r\n                    :\r\n                    <button\r\n                        style={style.button}\r\n                        onClick={(handleAuthen)}\r\n                        className='pg_mm_settings_submit'>\r\n                        <FontAwesomeIcon icon={faGithub} />\r\n                        <span>  GitHub identity</span>\r\n                    </button>\r\n                }\r\n                <font color=\"#ddd\">(©2022 CuongPV10 - v1.0.1)</font>\r\n            </Layout.MiddleContent>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as ReducerAction from '../Actions/StyleReducer';\r\nimport \"./StyleSettings.css\";\r\nimport SettingsCache from '../Utils/SettingsCache';\r\n\r\nexport default function StyleSettings() {\r\n    const dispatch = useDispatch();\r\n\r\n    function changeStyle(color) {\r\n        let action = null;\r\n        switch (color) {\r\n            case \"tomato\":\r\n                action = ReducerAction.changeToTomatoStyle();\r\n                SettingsCache.setTheme(\"tomato\");\r\n                dispatch(action);\r\n                break;\r\n            case \"blue\":\r\n                action = ReducerAction.changeToBlueStyle();\r\n                SettingsCache.setTheme(\"blue\");\r\n                dispatch(action);\r\n                break;\r\n            case \"violet\":\r\n                action = ReducerAction.changeToVioletStyle();\r\n                SettingsCache.setTheme(\"violet\");\r\n                dispatch(action);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='pg_mm_style_settings unselectable'>\r\n            <span onClick={() => changeStyle(\"tomato\")}></span>\r\n            <span onClick={() => changeStyle(\"blue\")}></span>\r\n            <span onClick={() => changeStyle(\"violet\")}></span>\r\n        </div>\r\n    )\r\n}\r\n","export const changeToTomatoStyle = () => {\r\n    return {\r\n        type: \"CHANGE_TO_TOMATO_STYLE\"\r\n    }\r\n}\r\n\r\nexport const changeToBlueStyle = () => {\r\n    return {\r\n        type: \"CHANGE_TO_BLUE_STYLE\"\r\n    }\r\n}\r\n\r\nexport const changeToVioletStyle = () => {\r\n    return {\r\n        type: \"CHANGE_TO_VIOLET_STYLE\"\r\n    }\r\n}","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport SettingsCache from '../Utils/SettingsCache';\r\nimport { StringUtils } from '../Utils/StringUtils';\r\n\r\nexport default function GithubAuthenticate() {\r\n    const DEFAULT_AUTH_SERVICE = 'https://bdsdb.000webhostapp.com/auth.php/';\r\n    const [message, setMessage] = React.useState(\"Waiting for check infomation...\")\r\n\r\n    useEffect(() => {\r\n        const queryParams = new URLSearchParams(window.location.search);\r\n        /** Ủy quyền login */\r\n        let code = queryParams.get('code');\r\n\r\n        if (!StringUtils.isNullOrEmpty(code)) {\r\n            let formData = new FormData();\r\n            formData.append('code', code);\r\n\r\n            fetch(DEFAULT_AUTH_SERVICE, {\r\n                method: \"POST\",\r\n                headers: { \"Accept\": \"application/json\" },\r\n                body: formData\r\n            }).then(res => res.json())\r\n                .then(async (data) => {\r\n                    SettingsCache.setAccessKey(data.access_token);\r\n                    setMessage(\"Get success token, wait for back to home page...\");\r\n\r\n                    // Get infomation\r\n                    fetch(\"https://api.github.com/user\", {\r\n                        headers: {\r\n                            Accept: \"application/vnd.github.v3+json\",\r\n                            Authorization: `Token ${data.access_token}`\r\n                        }\r\n                    }).then(r => r.json())\r\n                        .then(userInfomation => {\r\n                            if (userInfomation) {\r\n                                let userName = userInfomation.login;\r\n                                let email = userInfomation.email;\r\n                                let avatar_url = userInfomation.avatar_url;\r\n\r\n                                SettingsCache.setUserName(userName);\r\n                                SettingsCache.setEmail(email);\r\n                                SettingsCache.setAvatarUrl(avatar_url);\r\n                            }\r\n\r\n                            window.location.href = \"/memo\";\r\n                        })\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    setMessage(\"Ohh oh :(((\");\r\n                });\r\n        } else {\r\n            setMessage(queryParams.get('error_description'));\r\n            setTimeout(() => {\r\n                window.location.href = \"/memo\";\r\n            }, 1000);\r\n        }\r\n        return () => {\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>{message}</div>\r\n    )\r\n}\r\n","import React from 'react'\nimport Layout from './LayoutComponents/Layout';\nimport QuickSearchTab from './LayoutComponents/QuickSearchTab';\nimport ListTab from './LayoutComponents/ListTab';\nimport WriterTab from './LayoutComponents/WriterTab';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport SettingsTab from './LayoutComponents/SettingsTab';\nimport StyleSettings from './ViewComponents/StyleSettings';\nimport SettingsCache from './Utils/SettingsCache';\nimport { useDispatch } from 'react-redux';\nimport * as ReducerAction from './Actions/StyleReducer';\nimport { StringUtils } from './Utils/StringUtils';\nimport { Routes, Route, useParams } from 'react-router-dom'\nimport GithubAuthenticate from './LayoutComponents/GithubAuthenticate';\n\n\nexport default function App() {\n    return (\n        <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/auth\" element={<GithubAuthenticate />} />\n            <Route path=\"/get/:id\" element={<HomePage />} />\n        </Routes>\n    )\n}\n\nfunction HomePage() {\n    const menuList = [\"Search\", \"List\", \"Write\"];\n    // state\n    const [selectedMenu, setSelectedMenu] = React.useState(menuList[1]);\n    const viewContentObj = React.useRef(null);\n    const editPath = React.useRef(null);\n    const setViewContentObj = (obj) => { viewContentObj.current = obj; }\n    const dispatch = useDispatch();\n    let { id } = useParams();\n\n    React.useEffect(() => {\n        /** Set type */\n        changeStyle(SettingsCache.getTheme());\n\n        /** Check url search */\n        if (!StringUtils.isNullOrEmpty(id)) {\n            setSelectedMenu(\"Search\");\n        }\n\n        /*--------------- Define function inside useEffect -------------------*/\n        function changeStyle(color) {\n            let action = null;\n            switch (color) {\n                case \"tomato\":\n                    action = ReducerAction.changeToTomatoStyle();\n                    SettingsCache.setTheme(\"tomato\");\n                    dispatch(action);\n                    break;\n                case \"blue\":\n                    action = ReducerAction.changeToBlueStyle();\n                    SettingsCache.setTheme(\"blue\");\n                    dispatch(action);\n                    break;\n                case \"violet\":\n                    action = ReducerAction.changeToVioletStyle();\n                    SettingsCache.setTheme(\"violet\");\n                    dispatch(action);\n                    break;\n                default:\n                    break;\n            }\n        }\n        /*--------------- /Define function inside useEffect -------------------*/\n\n\n    }, [dispatch, id]);\n\n    function onSubmitSuccess(obj) {\n        setViewContentObj(obj);\n        // Back to search component\n        setSelectedMenu(menuList[0]);\n    }\n\n    function onEditFile(filePath) {\n        editPath.current = filePath;\n        setSelectedMenu(menuList[2]);\n    }\n\n    const updateAction = {\n        inputPath: editPath.current,\n        clearPath: function () {\n            editPath.current = null;\n        }\n    }\n\n    function rederTabView() {\n        switch (selectedMenu) {\n            case \"Search\":\n                return <QuickSearchTab\n                    onEdit={onEditFile}\n                    defaultPost={viewContentObj.current}\n                />;\n            case \"List\":\n                return <ListTab\n                    onEdit={onEditFile}\n                    onFailed={setSelectedMenu}\n                />;\n            case \"Write\":\n                return <WriterTab\n                    updateAction={updateAction}\n                    actionSubmit={onSubmitSuccess}\n                    onFailed={setSelectedMenu}\n                />\n            case \"Settings\":\n                return <SettingsTab />;\n            default:\n                return <QuickSearchTab />;\n        }\n    }\n\n    return (\n        <Layout>\n            <Layout.Header>\n                <Layout.Header.Item\n                    key=\"Settings\"\n                    selected={selectedMenu}\n                    onClick={(title) => setSelectedMenu(title)}\n                    title=\"Settings\"\n                />\n\n                {menuList.map(item => item !== \"Setting\" ? (\n                    <Layout.Header.Item\n                        key={item}\n                        selected={selectedMenu}\n                        onClick={(title) => setSelectedMenu(title)}\n                        title={item}\n                    />\n                ) : \"\")}\n            </Layout.Header>\n\n            <Layout.FullContent>\n                {rederTabView()}\n            </Layout.FullContent>\n            <NotificationContainer />\n            <StyleSettings />\n        </Layout>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initState = {\r\n    // ListTab.js\r\n    categoryList: [],\r\n    // CategoryList.Block.js\r\n    blockCategoryObj: {}\r\n}\r\n\r\nconst ListTabReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CATEGORY_LIST': {\r\n            let newCategoryList = [...action.payload];\r\n            return { ...state, categoryList: newCategoryList };\r\n        }\r\n        case 'SET_BLOCK_CATEGORY_OBJECT': {\r\n            let newBlockCategoryObj = { ...action.payload };\r\n            return { ...state, blockCategoryObj: newBlockCategoryObj };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default ListTabReducer;","let initState = {\r\n    mdContent: null, // Content for show on view\r\n    searchResultList: [], // Search result API\r\n    activeId: null, // ActiveId\r\n    searchKeyWord: \"\"\r\n}\r\n\r\nconst SearchReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"SearchReducer/setActiveId\": {\r\n            return { ...state, activeId: action.payload };\r\n        }\r\n        case \"SearchReducer/setMdContent\": {\r\n            return { ...state, mdContent: action.payload };\r\n        }\r\n        case \"SearchReducer/setSearchResultList\": {\r\n            let searchResultList = [...action.payload];\r\n            return { ...state, searchResultList: searchResultList };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default SearchReducer;","const orangeStyle = {\r\n    headerMenu: {\r\n        backgroundColor: \"#eec0c6\",\r\n        backgroundImage: \"linear-gradient(315deg, #eec0c6 0%, #e58c8a 74%)\"\r\n    },\r\n    category: { \"background\": \"linear-gradient(102deg, rgba(2,0,36,1) 0%, rgba(102,228,210,1) 0%, rgba(255,157,135,0.8434971400669643) 0%, rgba(244,123,58,0.35890330253195024) 100%, rgba(244,124,60,0.5157660476299895) 100%, rgba(80,193,184,1) 100%)\" },\r\n    menuSelected: {\r\n        background: \"#ffd6d6\",\r\n        color: \"#333 !important\"\r\n    },\r\n    leftBackground: {\r\n        backgroundColor: \"#fdfdf9\"\r\n    },\r\n    borderLine: {\r\n        border: \"solid tomato 1px\"\r\n    },\r\n    borderLineHover: {\r\n        border: \"solid 1px rgb(252, 139, 119)\",\r\n        boxShadow: \"1px 1px 5px 1px rgb(252, 139, 119)\"\r\n    },\r\n    button: {\r\n        backgroundColor: \"#e58c8a\",\r\n        color: \"#fff\",\r\n        marginRight: 5\r\n    },\r\n    input: {\r\n        outline: \"none\",\r\n        border: \"solid tomato 1px\"\r\n    }\r\n}\r\n\r\nconst blueStyle = {\r\n    headerMenu: {\r\n        background: \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(102,228,210,1) 0%, rgba(80,193,184,1) 98%)\"\r\n    },\r\n    category: { \"background\": \"linear-gradient(102deg, rgba(2,0,36,1) 0%, rgba(84,203,204,0.8519005014115021) 0%, rgba(90,204,195,0.4149257114955357) 100%, rgba(244,123,58,0.35890330253195024) 100%, rgba(244,124,60,0.5157660476299895) 100%, rgba(71,217,196,1) 100%)\" },\r\n    menuSelected: {\r\n        background: \"#b0f4e9\",\r\n        color: \"#333 !important\"\r\n    },\r\n    leftBackground: {\r\n        backgroundColor: \"#f5fafa\"\r\n    },\r\n    borderLine: {\r\n        border: \"solid #84d9cc 1px\"\r\n    },\r\n    borderLineHover: {\r\n        border: \"solid 1px #68d4c4\",\r\n        boxShadow: \"1px 1px 5px 1px #68d4c4\"\r\n    },\r\n    button: {\r\n        backgroundColor: \"#3dab9b\",\r\n        color: \"#fff\",\r\n        marginRight: 5\r\n    },\r\n    input: {\r\n        outline: \"none\",\r\n        border: \"solid tomato 1px\"\r\n    }\r\n}\r\n\r\nconst violetStyle = {\r\n    headerMenu: { \"background\": \"radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%)\" },\r\n    category: { \"background\": \"radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(235,174,203,0.5493794930081408) 0%, rgba(148,187,233,0.4989593249409139) 100%)\" },\r\n    menuSelected: {\r\n        background: \"#ebaecb\",\r\n        color: \"#333 !important\"\r\n    },\r\n    leftBackground: {\r\n        backgroundColor: \"#e5f2f0\"\r\n    },\r\n    borderLine: {\r\n        border: \"solid #ebaecb 1px\"\r\n    },\r\n    borderLineHover: {\r\n        border: \"solid 1px #ebaecb\",\r\n        boxShadow: \"1px 1px 5px 1px #ebaecb\"\r\n    },\r\n    button: {\r\n        backgroundColor: \"#ebaecb\",\r\n        color: \"#fff\",\r\n        marginRight: 5\r\n    },\r\n    input: {\r\n        outline: \"none\",\r\n        border: \"solid tomato 1px\"\r\n    }\r\n}\r\n\r\nconst StyleReducer = (state = violetStyle, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_TO_TOMATO_STYLE': {\r\n            return orangeStyle;\r\n        }\r\n        case 'CHANGE_TO_BLUE_STYLE': {\r\n            return blueStyle;\r\n        }\r\n        case 'CHANGE_TO_VIOLET_STYLE': {\r\n            return violetStyle;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default StyleReducer;","import { combineReducers } from \"redux\";\r\nimport ListTabReducer from \"./ListTabReducer\";\r\nimport SearchReducer from \"./SearchReducer\";\r\nimport StyleReducer from \"./StyleReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    style: StyleReducer,\r\n    listTabData: ListTabReducer,\r\n    searchData: SearchReducer\r\n});\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}