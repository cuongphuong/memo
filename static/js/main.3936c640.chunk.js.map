{"version":3,"sources":["LayoutComponents/Layout.js","Utils/RequestAPI.js","Utils/CacheManager.js","Utils/StringUtils.js","API/Github/Request.js","Utils/GithubCRUD.js","ViewComponents/Viewer.js","Utils/ContentRender.js","ViewComponents/List.js","Actions/SearchReducer.js","Utils/SearchHistoryCache.js","LayoutComponents/QuickSearchTab.js","Utils/SettingsCache.js","Utils/CategoryListCache.js","ViewComponents/CategoryList.js","LayoutComponents/ViewPopup.js","Actions/ListTabReducer.js","LayoutComponents/ListTab.js","ViewComponents/CategoryInput.js","Utils/ContentWriterCache.js","LayoutComponents/WriterTab.js","LayoutComponents/SettingsTab.js","ViewComponents/StyleSettings.js","Actions/StyleReducer.js","App.js","reportWebVitals.js","Reducers/ListTabReducer.js","Reducers/SearchReducer.js","Reducers/StyleReducer.js","Reducers/index.js","store.js","index.js"],"names":["Layout","children","className","Header","style","useSelector","state","id","headerMenu","Item","onClick","title","selected","menuSelected","SiderBar","leftBackground","RightContent","MiddleContent","FullContent","Fooder","RequestAPI","baseUrl","timeout","headers","makeRequestConfig","inp","configs","method","signal","data","body","sendRequest","url","a","fetch","then","response","ok","json","Error","status","catch","err","replaceAll","trim","encodeURI","requestConfig","add_config","base_url","in_headers","console","log","exe","CacheManager","key","expire","this","items","getAll","value","store","hasOwnProperty","localStorage","setItem","JSON","stringify","Date","getTime","stored","getItem","isExpired","parse","whenCached","age","clear","removeItem","cache","getSingleton","StringUtils","str","EMPTY","Base64","encode","decode","defaultStr","ret","startsWith","substring","endsWith","length","trimL","toLowerCase","replace","num","slice","LocalCache","REPOSITORY_SOURCE","has","get","TIME_OUT","TOKEN_KEY","USE_NAME","E_MAIL","config","Accept","isNullOrEmpty","Authorization","request","author","name","email","searchFromGitHub","result","readContentByPath","path","getUser","username","save","message","content","filePath","updateContent","sha","getRef","ref","object","getTree","tree","postTree","base_tree","payload","commit","parent","parents","updateHead","head","create","update","dataAPI","lastSha","deleteFile","move","branch","newPath","latestCommit","forEach","isDeleted","type","filter","p","rootTree","commit_msg","Viewer","props","source","window","confirm","NotificationManager","info","onDelete","link","document","URL","navigator","clipboard","writeText","React","useEffect","isPopupView","onEdit","onClose","margin","marginLeft","cursor","src","width","alt","remarkPlugins","remarkGfm","ContentRender","apiResult","total_count","warning","error","pathFileList","Set","postObjectList","Promise","all","map","item","add","makeContentObject","contentObject","apiContentResult","base64Content","decodeContent","index","indexOf","DEFAULT_DELIMITER","cfgAreaStr","contentAreaStr","makeConfigFromResult","m","regex","exec","lastIndex","mathItems","split","configKey","configValue","Array","isArray","categoryList","resultObject","itemList","hasContnent","List","category","handleChooseItem","activeId","isActive","borderLineHover","setActiveId","setMdContent","mdContent","setSearchResultList","searchResultList","searchCache","SearchHistoryCache","getTopKeyWord","allItem","Object","keys","sort","b","insertKey","keysSorted","del","removeMinItem","QuickSearchTab","refController","useRef","dispatch","useDispatch","searchData","useState","isProcessing","setIsProcessing","searchCacheList","setSearchCacheList","inputObj","typingTimer","handleSearchChange","evt","clearTimeout","current","AbortController","setTimeout","aborted","doneTyping","target","keyword","search","apiResultContentList","queryParams","URLSearchParams","location","toUpperCase","focus","cacheKeywordList","searchByPramater","history","replaceState","abort","list","borderLine","onChange","placeholder","marginTop","height","position","top","isSuccess","newSearchList","alert","memo","settingsCache","SettingsCache","getCacheTime","setCacheTimeMinute","cacheTime","getUrlRepository","getRequestTimeout","setUrlRepository","urlRepository","setRequestTimeout","requestTimeout","getAccessKey","setAccessKey","accessKey","getUserName","setUserName","userName","getEmail","setEmail","getCacheMinutes","millis","toFixed","setTheme","theme","getTheme","categoryCache","CategoryListCache","setOrUpdateCache","trees","isCached","getMainCategory","element","includes","getElementByPath","elementPath","isExistedInPath","pathList","makeOutputList","updateDataIntoPath","newDataList","correctPath","newTree","push","mode","CategoryList","Row","handleItemClick","renderList","setRenderList","sourcePath","setSourcePath","isLoadding","setIsLoadding","fetchFromAPI","getAllItemFromPath","dataList","categoryObj","property","makeRenderList","gotoPath","tmpList","fixPathList","pop","renderPathList","onClickSubFolder","Block","dirList","fileList","renderItem","ViewPopup","stype","setStype","display","animationName","setCategoryList","ListTab","listTabData","isDisplayPopup","setIsDisplayPopup","dataView","setDataView","callback","onFailed","getTreeList","mainCategoryList","loadding","fetchTreesList","categoryName","CategoryInput","nameInput","pathDataList","pathRenderList","setPathRenderList","isFetching","setIsFetching","makeReturn","join","makeNewCategory","currentPath","subList","makeSubListFromAPI","lastItem","at","getAllCategoryList","subDataList","makePathStr","el","defaultTitle","categorys","defaultCategory","categoryPathList","marginBottom","onKeyUp","which","keyCode","charCode","handleKeyInput","currentCtgList","zIndex","color","renderSubCategoryList","writerCache","ContentWriterCache","setTitle","getTitle","setContent","getContent","releaseCache","setPath","getPath","getCategory","setIsUpdate","isUpdate","WriterTab","mdParser","MarkdownIt","updateAction","inputPath","clearPath","isCreateed","originData","titleFix","truncateString","fileContent","commitMsg","base64Encode","hub","html_url","open","float","button","backgroundColor","onImageUpload","file","reader","FileReader","onload","fileName","substr","res","download_url","readAsDataURL","renderHTML","text","render","html","SettingsTab","urlRepositoryInput","cacheTimeDayInput","requestTimeoutInput","accessKeyInput","userNameInput","emailInput","defaultValue","href","rel","reload","StyleSettings","changeStyle","action","App","menuList","selectedMenu","setSelectedMenu","viewContentObj","editPath","onSubmitSuccess","obj","setViewContentObj","onEditFile","defaultPost","actionSubmit","rederTabView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","blockCategoryObj","ListTabReducer","newCategoryList","newBlockCategoryObj","searchKeyWord","SearchReducer","orangeStyle","backgroundImage","background","border","boxShadow","input","outline","blueStyle","violetStyle","StyleReducer","rootReducer","combineReducers","createStore","ReactDOM","getElementById"],"mappings":"6NAIMA,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACI,qBAAKC,UAAU,uBAAf,SACKD,KAKPE,EAAS,SAAC,GAAkB,IAAhBF,EAAe,EAAfA,SACRG,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SACzC,OACI,qBAAKF,UAAU,eAAeK,GAAG,oBAAjC,SACI,oBAAIH,MAAOA,EAAMI,WAAjB,SACKP,OAyBjBE,EAAOM,KAnBY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC5BR,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAEzC,MAAc,aAAVO,EACO,mBAAGD,QAAS,kBAAMA,EAAQC,IAAQT,UAAU,wCAA5C,oBAIP,6BACI,sBACIA,UAAU,eACVE,MAAOQ,IAAaD,EAAQP,EAAMS,aAAe,GACjDH,QAAS,kBAAMA,EAAQC,IAH3B,SAIKA,OAgDjBX,EAAOG,OAASA,EAChBH,EAAOc,SAzCU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SACVG,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SACzC,OACI,qBACIA,MAAOA,EAAMW,eACbb,UAAU,0BAFd,SAGKD,KAoCbD,EAAOgB,aA/Bc,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SACpB,OACI,qBAAKC,UAAU,2BAAf,SACKD,KA6BbD,EAAOiB,cAxBe,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SACrB,OACI,qBAAKC,UAAU,yBAAf,SACKD,KAsBbD,EAAOkB,YAhBa,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SACnB,OACI,qBAAKC,UAAU,qBAAf,SACKD,KAcbD,EAAOmB,OATQ,aAUAnB,Q,wDC1FFoB,EAAc,WACvB,IAAIC,EAAU,KACVC,EAAU,IACVC,EAAU,GAEd,SAASC,EAAkBC,GACvB,IAAKA,EAAK,MAAO,GAEjB,IAAIC,EAAU,CACVH,QAASA,EACTI,OAAQF,EAAIE,QAUhB,OAPIF,EAAIG,SACJF,EAAO,2BAAQA,GAAR,IAAiBE,OAAQH,EAAIG,UAGpCH,EAAII,OACJH,EAAO,2BAAQA,GAAR,IAAiBI,KAAML,EAAII,QAE/BH,EApBwB,SAuBpBK,EAvBoB,gFAuBnC,WAA2BC,EAAKN,GAAhC,eAAAO,EAAA,sEACqBC,MAAMF,EAAKN,EAASJ,GAASa,MAAK,SAAUC,GACzD,GAAKA,EAASC,GAGV,OAAOD,EAASE,OAFhB,MAAM,IAAIC,MAAMH,EAASI,WAI9BC,OAAM,SAAAC,GACL,MAAM,IAAIH,MAAMG,MARxB,cACQJ,EADR,yBAUWA,GAVX,4CAvBmC,kEA4CnC,WAAuBb,GAAvB,iBAAAQ,EAAA,6DAGID,GADIA,EAAMX,EAAUI,EAAIO,IAAIW,WAAW,KAAM,MACnCC,OACVZ,EAAMa,UAAUb,GACZc,EAAgBtB,EAAkBC,GAL1C,SAOiBM,EAAYC,EAAKc,GAPlC,oFA5CmC,sBAsDnC,MAAO,CACHC,WAnBJ,WAA6E,IAA7DrB,EAA4D,uDAAlD,CAAEsB,SAAU,GAAI1B,QAAS,IAAO2B,WAAY,IAClE5B,EAAUK,EAAQsB,SAClB1B,EAAUI,EAAQJ,QAClBC,EAAUG,EAAQuB,WAElBC,QAAQC,IAAI,kBAAmB9B,EAASC,IAexC8B,IAxD+B,6CAAZ,G,uBCArBC,E,WACF,WAAYC,GAAqB,IAAhBC,EAAe,uDAAN,KAAM,oBAC5BC,KAAKF,IAAMA,EACXE,KAAKD,OAASA,EACdC,KAAKC,MAAQD,KAAKE,S,uCAGtB,SAAIJ,EAAKK,GACDL,IACAE,KAAKC,MAAL,2BAAkBD,KAAKC,OAAvB,kBAA+BH,EAAMK,KAGzCH,KAAKI,U,iBAGT,SAAIN,GACIA,UACOE,KAAKC,MAAMH,GAEtBE,KAAKI,U,iBAGT,SAAIN,GACA,OAAOE,KAAKC,MAAMI,eAAeP,K,mBAGrC,WACIQ,aAAaC,QAAQP,KAAKF,IAAKU,KAAKC,UAAUT,KAAKC,QACnDK,aAAaC,QAAQP,KAAKF,IAAM,OAAO,IAAIY,MAAOC,a,iBAGtD,SAAIb,GAEA,OADUE,KAAKE,SACJJ,K,oBAGf,WACI,IAAIc,EAASN,aAAaO,QAAQb,KAAKF,KACvC,OAAQE,KAAKc,cAAgBF,EACzB,GACAJ,KAAKO,MAAMH,K,uBAGnB,WACI,IAAII,EAAaV,aAAaO,QAAQb,KAAKF,IAAM,OAC7CmB,GAAO,IAAIP,MAAOC,UAAYK,EAElC,SAAIhB,KAAKD,QAAUkB,EAAMjB,KAAKD,UAC1BC,KAAKkB,SACE,K,mBAMf,WACIZ,aAAaa,WAAWnB,KAAKF,KAC7BQ,aAAaa,WAAWnB,KAAKF,IAAM,W,KAUvCsB,EAAQ,GASZ,SAASC,EAAavB,GAAqB,IAAhBC,EAAe,uDAAN,KAIhC,OAHKqB,EAAMf,eAAeP,KACtBsB,EAAMtB,GAAO,IAAID,EAAaC,EAAKC,IAEhCqB,EAAMtB,G,YC9EJwB,EAAb,kGAQI,SAAqBC,GACjB,OAAKA,GAAe,OAARA,GAAgBA,IAAQD,EAAYE,QATxD,0BAoBI,SAAoBD,GAChB,OAAKA,GAAe,OAARA,EAGDE,IAAOC,OAAOH,GAFd,OAtBnB,0BAiCI,SAAoBA,GAChB,OAAKA,GAAe,OAARA,EAGDE,IAAOE,OAAOJ,GAFd,OAnCnB,mBAmDI,SAAaA,EAAKK,GAEd,IAAIC,EAAMN,EAMV,IAJKM,GAAe,OAARA,IACRA,EAAM,IAGHA,EAAIC,WAAW,MAAQD,EAAIC,WAAW,WAAQD,EAAIC,WAAW,OAASD,EAAIC,WAAW,OACxFD,EAAMA,EAAIE,UAAU,GAMxB,MAHY,KAARF,IACAA,EAAMD,GAEHC,IAlEf,mBA6EI,SAAaN,EAAKK,GAEd,IAAIC,EAAMN,EAMV,IAJKM,GAAe,OAARA,IACRA,EAAM,IAGHA,EAAIG,SAAS,MAAQH,EAAIG,SAAS,WAAQH,EAAIG,SAAS,OAC1DH,EAAMA,EAAIE,UAAU,EAAGF,EAAII,SAAW,GAM1C,MAHY,KAARJ,IACAA,EAAMD,GAEHC,IA5Ff,kBAuGI,SAAYN,EAAKK,GAEb,IAAIC,EAAMN,EAKV,OAHAM,EAAMP,EAAYY,MAAML,EAAKD,KA3GrC,iCAiHI,SAA2BL,GAavB,OADAA,GADAA,GADAA,GAFAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAMA,EAAIY,eACAC,QAAQ,kHAAsC,MAC9CA,QAAQ,0EAA0B,MAClCA,QAAQ,kCAAc,MACtBA,QAAQ,kHAAsC,MAC9CA,QAAQ,4EAA0B,MAClCA,QAAQ,oCAAc,MACtBA,QAAQ,UAAM,MAEdA,QAAQ,sCAAuC,KAC/CA,QAAQ,wBAAyB,KACjCA,QAAQ,MAAO,OA7HjC,4BAiII,SAAsBb,EAAKc,GACvB,OAAId,EAAIU,OAASI,EACNd,EAAIe,MAAM,EAAGD,GAAO,MAEpBd,MArInB,KAAaD,EACFE,MAAQ,GCCnB,IACMJ,EAAQmB,EADI,kBAEZC,EAAoBpB,EAAMqB,IAAI,iBAC9BrB,EAAMsB,IAAI,iBAAiBvD,WAAW,sBAAuB,IAC7D,GAEAwD,EAAWvB,EAAMqB,IAAI,kBAAoB,SAAWrB,EAAMsB,IAAI,kBAAoB,GAClFE,EAAYxB,EAAMqB,IAAI,aAAerB,EAAMsB,IAAI,aAAe,GAC9DG,EAAWzB,EAAMqB,IAAI,YAAc,SAAWrB,EAAMsB,IAAI,YAAc,GACtEI,EAAS1B,EAAMqB,IAAI,SAAW,SAAWrB,EAAMsB,IAAI,SAAW,GAEhEK,EAAS,CACTvD,SAAU,yBACV1B,QAAS6E,EACTlD,WAAY,CACRuD,OAAQ,mCAIZJ,IAActB,EAAY2B,cAAcL,KACxCG,EAAM,2BACCA,GADD,IAEFtD,WAAW,2BACJsD,EAAOtD,YADJ,IAENyD,cAAe,SAAWN,OAItClD,QAAQC,IAAI,WAAYoD,GAGxBI,EAAQ5D,WAAWwD,GAEnB,IAAMK,EAAS,CACXC,KAAMR,EACNS,MAAOR,GASJ,SAAeS,EAAtB,oC,4CAAO,WAAgCzD,EAAK1B,GAArC,eAAAK,EAAA,sEACgB0E,EAAQvD,IAAI,CAC3BpB,IAAI,kBAAD,OAAoBsB,EAApB,iBAAgC0C,GACnCrE,OAAQ,MACRC,OAAQA,IACTa,OAAM,SAAAC,GAEL,OADAQ,QAAQC,IAAIT,GACL,MAPR,cACCsE,EADD,yBAUIA,GAVJ,4C,sBAkBA,SAAeC,EAAtB,oC,4CAAO,WAAiCC,EAAMtF,GAAvC,eAAAK,EAAA,sEACgB0E,EAAQvD,IAAI,CAC3BpB,IAAI,UAAD,OAAYgE,EAAZ,qBAA0CkB,GAC7CvF,OAAQ,MACRC,OAAQA,IACTa,OAAM,SAAAC,GACL,MAAMA,KANP,cACCsE,EADD,yBASIA,GATJ,4C,sBAiBA,SAAeG,EAAtB,kC,4CAAO,WAAuBC,GAAvB,iBAAAnF,EAAA,6DACCD,EAAMoF,EAAW,UAAYA,EAAW,QADzC,SAEgBT,EAAQvD,IAAI,CAC3BpB,IAAKA,EACLL,OAAQ,QACTc,OAAM,SAAAC,GACL,OAAO,QANR,cAECsE,EAFD,yBASIA,GATJ,4C,sBAkBA,SAASK,IAGF,IAHOxF,EAGR,uDAHe,CACxByF,QAAS,WACTC,QAAS,gBACVC,EAAU,uCACT,OAAOb,EAAQvD,IAAI,CACfpB,IAAI,UAAD,OAAYgE,EAAZ,qBAA0CwB,GAC7C7F,OAAQ,MACRE,KAAMmC,KAAKC,UAAUpC,KAUtB,SAAS4F,IAIF,IAJgB5F,EAIjB,uDAJwB,CACjCyF,QAAS,iBACTC,QAAS,eACTG,IAAK,IACNF,EAAU,uCACT,OAAOb,EAAQvD,IAAI,CACfpB,IAAI,UAAD,OAAYgE,EAAZ,qBAA0CwB,GAC7C7F,OAAQ,MACRE,KAAMmC,KAAKC,UAAUpC,KAStB,SAAe8F,IAAtB,+B,4CAAO,0CAAA1F,EAAA,6DAAsB2F,EAAtB,+BAA4B,aAA5B,SAEgBjB,EAAQvD,IAAI,CAC3BpB,IAAI,UAAD,OAAYgE,EAAZ,qBAA0C4B,GAC7CjG,OAAQ,QAJT,cAECqF,EAFD,yBAOIA,EAAOa,OAAOH,KAPlB,2C,wBAeA,SAAeI,IAAtB,+B,4CAAO,0CAAA7F,EAAA,6DAAuByF,EAAvB,+BAA6B,GAA7B,SAEgBf,EAAQvD,IAAI,CAC3BpB,IAAI,UAAD,OAAYgE,EAAZ,sBAA2C0B,GAC9C/F,OAAQ,QAJT,cAECqF,EAFD,yBAOIA,EAAOe,MAPX,2C,wBAeA,SAAeC,EAAtB,oC,4CAAO,WAAwBD,EAAME,GAA9B,iBAAAhG,EAAA,yDACE8F,EADF,wDAGCG,EAAU,CAAEH,KAAMA,GAElBE,IAAWC,EAAO,2BAAQA,GAAR,IAAiBD,UAAWA,KAL/C,SAOgBtB,EAAQvD,IAAI,CAC3BpB,IAAI,UAAD,OAAYgE,EAAZ,cACHrE,OAAQ,OACRE,KAAMmC,KAAKC,UAAUiE,KAVtB,cAOClB,EAPD,yBAYIA,EAAOU,KAZX,4C,sBAmBA,SAAeS,EAAtB,sC,4CAAO,WAAsBC,EAAQL,EAAMT,GAApC,iBAAArF,EAAA,yDACYkF,EAAQP,EAAOC,MAD3B,wDAGChF,EAAO,CACPyF,QAASA,EACTV,OAAQA,EACRyB,QAAS,CACLD,GAEJL,KAAMA,GATP,SAYgBpB,EAAQvD,IAAI,CAC3BpB,IAAI,UAAD,OAAYgE,EAAZ,gBACHrE,OAAQ,OACRE,KAAMmC,KAAKC,UAAUpC,KACtBY,OAAM,SAAAC,GACL,OAAO,QAjBR,cAYCsE,EAZD,yBAmBIA,EAAOU,KAnBX,4C,sBAsBA,SAAeY,EAAtB,qC,8CAAO,WAA0BC,EAAMJ,GAAhC,eAAAlG,EAAA,sEACgB0E,EAAQvD,IAAI,CAC3BpB,IAAK,iBAAUgE,EAAV,oBAAgDuC,EACrD5G,OAAQ,QACRE,KAAMmC,KAAKC,UAAU,CACjByD,IAAKS,MAEV1F,OAAM,SAAAC,GACL,OAAO,QARR,cACCsE,EADD,yBAUIA,GAVJ,4C,sBC5LA,SAASwB,KAGF,IAHS3G,EAGV,uDAHiB,CAC1ByF,QAAS,WACTC,QAAS,gBACVC,EAAU,uCACT,OAAOb,EAAa9E,EAAM2F,GASvB,SAAeiB,KAAtB,gC,8CAAO,8CAAAxG,EAAA,6DAAsBJ,EAAtB,+BAA6B,CAChCyF,QAAS,WACTC,QAAS,gBACVC,EAHI,gCAMiBb,EAA0Ba,GAN3C,UAOa,QADZkB,EAND,gEAQCC,EAAUD,EAAQhB,IACtB7F,EAAK6F,IAAMiB,EATR,kBAUIhC,EAAsB9E,EAAM2F,IAVhC,4C,yBAiBA,SAASoB,GAAWpB,GACvB,OAAOqB,GAAK,OAAQrB,GAUjB,SAAeqB,KAAtB,gC,8CAAO,wDAAA5G,EAAA,6DAAoB6G,EAApB,+BAA6B,OAAQ5B,EAArC,uBAA2C6B,EAA3C,gCAEsBpC,EAAe,cAFrC,cAECqC,EAFD,gBAIcrC,EAAgBqC,EAAe,mBAJ7C,cAICjB,EAJD,QAMEkB,SAAQ,SAAUrB,GACbmB,IAAWjE,EAAY2B,cAAcsC,IAAanB,EAAIV,OAASA,EAG7DU,EAAIV,OAASA,IAAMU,EAAIV,KAAO6B,GAFlCnB,EAAIsB,WAAY,EAKH,SAAbtB,EAAIuB,OACJvB,EAAIsB,WAAY,MAIxBnB,EAAOA,EAAKqB,QAAO,SAAAC,GAAC,OAAKA,EAAEH,aAlBxB,UAoBkBvC,EAAiBoB,GApBnC,eAoBCuB,EApBD,OAsBCC,GAAeR,GAAWjE,EAAY2B,cAAcsC,GAClD,UAAY7B,EACZ,QAAUA,EAAO,OAAS6B,EAxB7B,UAyBgBpC,EAAeqC,EAAcM,EAAUC,GAzBvD,eAyBCpB,EAzBD,iBA2BgBxB,EAAmBmC,EAAQX,GA3B3C,eA2BCnB,EA3BD,yBA4Bc,MAAVA,GA5BJ,4C,+BCpDQ,SAASwC,GAAOC,GAE3B,IAAMC,EAAWD,EAAXC,OAF4B,4CAalC,sBAAAzH,EAAA,0DAC8E,KAArE0H,OAAOC,QAAQ,yBAA2BH,EAAMC,OAAOlC,UADhE,0EAKcoB,GAAWa,EAAMC,OAAOlC,UALtC,OAMQqC,sBAAoBC,KAAK,YACzBL,EAAMM,UAAS,GAPvB,gDASQN,EAAMM,UAAS,GATvB,0DAbkC,kEA0BlC,4BAAA9H,EAAA,6DAEQ+H,EAAOC,SAASC,IAAM,QAAUR,EAAOnJ,GAF/C,SAIU4J,UAAUC,UAAUC,UAAUL,GAJxC,OAKIH,sBAAoBC,KAAK,WAAaE,GAL1C,4CA1BkC,sBAkClC,OA9BAM,IAAMC,WAAU,WACZ,OAAO,eAER,CAACd,EAAMe,cA4BN,0BAAStK,UAAU,2BAAnB,UACI,sBAAMQ,QA3Bd,WACI+I,EAAMgB,OAAOhB,EAAMC,OAAOlC,WA0BCtH,UAAU,yBAAjC,sBACA,sBAAMQ,QArCoB,2CAqCDR,UAAU,2BAAnC,wBAEIuJ,EAAMe,YACF,sBAAM9J,QAAS,WAAQ+I,EAAMiB,WAAaxK,UAAU,wBAApD,uBAEA,GAER,qBAAKA,UAAU,8BAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,qBAAIE,MAAO,CAAEuK,OAAQ,SAArB,UACKjB,EAAO/I,MACR,qBAAKD,QAhDS,2CAiDVN,MAAO,CAAEwK,WAAY,GAAIC,OAAQ,WACjCC,IAAI,sBACJC,MAAO,GACPC,IAAI,YAGXtB,EAAO/I,MAAQ,oBAAIP,MAAO,CAAEuK,OAAQ,YAAiB,GACtD,qBAAKzK,UAAU,qBAAf,SACI,cAAC,IAAD,CAAeD,SAAUyJ,EAAOnC,QAAS0D,cAAe,CAACC,iB,YC5DpEC,GAAb,kIASI,WAAoBpG,EAAKnD,GAAzB,iFACQkD,EAAY2B,cAAc1B,GADlC,uBAEQ7B,QAAQC,IAAI,2BAFpB,mDAQ0B4D,EAAiBhC,EAAKnD,GARhD,UAQQwJ,EARR,OASyBA,EAAUC,YATnC,wBAYYnI,QAAQC,IAAR,sCAA2C4B,EAA3C,MACA8E,sBAAoBC,KAApB,sCAAwD/E,EAAxD,MAbZ,oFAiBQ8E,sBAAoB3G,QAAQoI,QAAQ,+BACpCpI,QAAQqI,MAAM,+BAlBtB,kCAsBQ9H,EAAQ2H,EAAU3H,MAClB+H,EAAe,IAAIC,IACnBC,EAAiB,GAxBzB,UA0BUC,QAAQC,IAAInI,EAAMoI,IAAN,uCAAU,WAAOC,GAAP,eAAA7J,EAAA,0DACpBuJ,EAAavF,IAAI6F,EAAK5E,MADF,wDAKxBsE,EAAaO,IAAID,EAAK5E,MALE,SAMEiE,EAAca,kBAAkBF,EAAK5E,MANvC,OAOF,QADlB+E,EANoB,UAQpBP,EAAc,uBAAOA,GAAP,CAAuBO,KARjB,2CAAV,wDA1BtB,iCAsCWP,GAtCX,0DATJ,+HAuDI,WAA+BlE,EAAU5F,GAAzC,0FAES4F,EAFT,wDAMIA,EAAWA,EAAS5E,OANxB,SAOiCqE,EAAkBO,EAAU5F,GAP7D,UAOQsK,EAPR,OAQQD,EAAgB,IAChBC,GAAqBpH,EAAY2B,cAAcyF,EAAiB3E,SATxE,oBAUY4E,EAAgBD,EAAiB3E,QACjC6E,EAAgBnH,IAAOE,OAAOgH,IAInB,KADXE,EAAQD,EAAcE,QAAQnB,EAAcoB,kBAAmB,IAd3E,wBAgBYrJ,QAAQC,IAAR,uBAA4BqE,EAA5B,iBAhBZ,kBAiBmB,MAjBnB,eAmBYgF,EAAaJ,EAAc7G,UAAU,EAAG8G,EAAQlB,EAAcoB,kBAAkB9G,QAChFgH,EAAiBL,EAAc7G,UAAU8G,EAAQlB,EAAcoB,kBAAkB9G,QAEjF/D,EAAUyJ,EAAcuB,qBAAqBF,GAC7CjF,EAAUzC,EAAYlC,KAAK6J,GAC/BR,EAAa,2BAAQvK,GAAR,IAAiB6F,YAC9B0E,EAAa,2BAAQA,GAAR,IAAuBzE,SAAUA,IAzBtD,kBA2BeyE,GA3Bf,QA6BQ/I,QAAQC,IAAI,uBAAyBqE,GA7B7C,iCA+BW,MA/BX,4CAvDJ,2FA+FI,SAA4BzC,GAKxB,IAJA,IACI4H,EADEC,EAAQ,qBAGVlL,EAAU,GACmB,QAAzBiL,EAAIC,EAAMC,KAAK9H,KAAgB,CAC/B4H,EAAEN,QAAUO,EAAME,WAClBF,EAAME,YAGV,IAAIC,EAAYJ,EAAE,GAAGK,MAAM,KACvBC,EAAYnI,EAAYlC,KAAKmK,EAAU,IACvCG,EAAcpI,EAAYlC,KAAKmK,EAAU,IAE7CrL,EAAO,2BAAQA,GAAR,kBAAkBuL,EAAYC,IAEzC,OAAOxL,IA/Gf,uEAuHI,WAAgCwF,EAAMtF,GAAtC,yFACuBqF,EAAkBC,EAAMtF,GAD/C,WACQoF,EADR,SAEoBmG,MAAMC,QAAQpG,IAA6B,IAAlBA,EAAOvB,OAFpD,yCAGe,IAHf,cAMQ4H,EAAe,GACnBrG,EAAOiC,SAAQ,SAAA6C,GACO,QAAdA,EAAK3C,MAAmBrE,EAAY2B,cAAcqF,EAAKjF,QACvDwG,EAAY,uBAAOA,GAAP,CAAqBvB,EAAKjF,WATlD,kBAaWwG,GAbX,2CAvHJ,gIA4II,WAAgCnG,GAAhC,yFACuBD,EAAkBC,GADzC,WACQF,EADR,SAGoBmG,MAAMC,QAAQpG,IAA6B,IAAlBA,EAAOvB,OAHpD,yCAIe,IAJf,cAOQ6H,EAAe,CACfC,SAAU,IAGdvG,EAAOiC,SAAQ,SAAA6C,GACO,QAAdA,EAAK3C,MAAmBrE,EAAY2B,cAAcqF,EAAKjF,QACvDyG,EAAY,2BAAQA,GAAR,kBAAuBxB,EAAKjF,KAAO,CAAE2G,aAAa,MAGhD,SAAd1B,EAAK3C,MAAoBrE,EAAY2B,cAAcqF,EAAKjF,QACxDyG,EAAY,2BACLA,GADK,IACSC,SAAS,GAAD,oBAAMD,EAAaC,UAAnB,CAA6B,CAClD1G,KAAMiF,EAAKjF,KACXK,KAAM4E,EAAK5E,cApB/B,kBAyBWoG,GAzBX,2CA5IJ,8DCDA,SAASG,GAAT,GAA6B,IAAbxN,EAAY,EAAZA,SACZ,OACI,qBAAKC,UAAU,aAAf,SACKD,IDFAkL,GAEFoB,kBAAoB,MCkD/BkB,GAAKhN,KA7CL,YAKkC,IAAD,IALbiJ,cAKa,MALJ,CACzB/I,MAAO,MACP4G,QAAS,MACThH,GAAI,MACJmN,SAAU,OACmB,EAA9BC,EAA8B,EAA9BA,iBAAkBC,EAAY,EAAZA,SACXxN,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAMzC,SAASyN,IACL,OAAID,IAAalE,EAAOnJ,GAa5B,OACI,sBACIH,MAAOyN,IAAazN,EAAM0N,gBAAkB,GAC5C5N,UAAW2N,IAAa,yCAA2C,kBACnEnN,QAtBR,WACIiN,EAAiBjE,IAkBjB,UAKI,oBAAIxJ,UAAU,cAAd,SAA6BwJ,EAAO/I,QACpC,mBAAGT,UAAU,cAAb,SAA4BwJ,EAAOnC,UACnC,qBAAKrH,UAAU,uBAAf,SAEI,sBACIE,MAAOA,EAAMsN,SACbxN,UAAU,cAFd,SAE+CwJ,EAAOgE,iBAQvDD,UCzDFM,GAAc,SAACH,GACxB,MAAO,CACHzE,KAAM,4BACNjB,QAAS0F,IAIJI,GAAe,SAACC,GACzB,MAAO,CACH9E,KAAM,6BACNjB,QAAS+F,IAIJC,GAAsB,SAACC,GAChC,MAAO,CACHhF,KAAM,oCACNjB,QAASiG,ICdXC,GAAcrI,EADK,eACwB,MAuClCsI,GANJ,CACHC,cA/BJ,WACI,IAAIC,EAAUH,GAAY1K,SAI1B,OAHiB8K,OAAOC,KAAKF,GAASG,MAAK,SAAUzM,EAAG0M,GACpD,OAAOJ,EAAQI,GAAKJ,EAAQtM,OA6BhC2M,UAxBJ,SAAmBtL,GACf,IAAIiL,EAAUH,GAAY1K,SAK1B,GAJI8K,OAAOC,KAAKF,GAAS9I,QAAU,IAYvC,SAAuB8I,GACnB,IAAIM,EAAaL,OAAOC,KAAKF,GAASG,MAAK,SAAUzM,EAAG0M,GACpD,OAAOJ,EAAQtM,GAAKsM,EAAQI,MAEhCzL,QAAQC,IAAI0L,EAAW,IACvBT,GAAYU,IAAID,EAAW,IAhBvBE,CAAcR,GAGdH,GAAYnI,IAAI3C,GAAM,CACtB,IAAIK,EAAQyK,GAAYlI,IAAI5C,GAC5B8K,GAAYrC,IAAIzI,IAAOK,QAEvByK,GAAYrC,IAAIzI,EAAK,KCbjC,SAAS0L,GAAevF,GAEpB,IAAMwF,EAAgB3E,IAAM4E,OAAO,MAC7B9O,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAGnC+O,EAAWC,cACXjB,EAAmB9N,aAAY,SAAAC,GAAK,OAAIA,EAAM+O,WAAWlB,oBACzDF,EAAY5N,aAAY,SAAAC,GAAK,OAAIA,EAAM+O,WAAWpB,aAClDL,EAAWvN,aAAY,SAAAC,GAAK,OAAIA,EAAM+O,WAAWzB,YAGvD,EAAwC0B,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACMC,EAAWT,iBAAO,MAClBU,EAAcV,iBAAO,MAkD3B,SAASW,EAAmBC,GACxBC,aAAaH,EAAYI,SAEzBf,EAAce,QAAU,IAAIC,gBAC5B,IAAIrO,EAASqN,EAAce,QAAQpO,OACnCgO,EAAYI,QAAUE,YAAW,WACzBtO,EAAOuO,UAGXhB,EAASjB,GAAoB,KA1EV,oCA2EnBkC,CAAWN,EAAIO,OAAO1M,UA3DL,KAhBE,4CA+E3B,WAA0B2M,GAA1B,iBAAArO,EAAA,6DACIgN,EAAce,QAAU,IAAIC,gBACxBrO,EAASqN,EAAce,QAAQpO,OAEnC4N,GAAgB,GAJpB,SAKqCrE,GAAcoF,OAAOD,EAAS1O,GALnE,QAKQ4O,EALR,SAMgCA,EAAqB/K,OAAS,IACtD4I,GAAmBO,UAAU0B,GAC7BnB,EAASjB,GAAoBsC,IAEzBA,EAAqB/K,OAAS,GAC9BkI,EAAiB6C,EAAqB,KAG9ChB,GAAgB,GAdpB,4CA/E2B,sBAgG3B,SAAS7B,EAAiBjE,GACtByF,EAASpB,GAAYrE,EAAOnJ,KAC5B4O,EAASnB,GAAatE,IAqD1B,OArIAa,qBAAU,WAAM,4CACZ,kCAAAtI,EAAA,6DACUwO,EAAc,IAAIC,gBAAgB/G,OAAOgH,SAASJ,SACpDD,EAAUG,EAAYvK,IAAI,SAGfoK,EAAQM,cAActL,WAAW,SAC5CgL,EAAUA,EAAQ/K,UAAU,IAG3BT,EAAY2B,cAAc6J,KAC3BX,EAASK,QAAQrM,MAAQ,MAAQ2M,GAIrCrB,EAAce,QAAU,IAAIC,gBACxBrO,EAASqN,EAAce,QAAQpO,OAEnC4N,GAAgB,GAjBpB,SAkBqCrE,GAAcoF,OAAOD,EAAS1O,GAlBnE,QAkBQ4O,EAlBR,SAmBgCA,EAAqB/K,OAAS,IACtD4I,GAAmBO,UAAU0B,GAC7BnB,EAASjB,GAAoBsC,IAEzBA,EAAqB/K,OAAS,IAC9B0J,EAASpB,GAAYyC,EAAqB,GAAGjQ,KAC7C4O,EAASnB,GAAawC,EAAqB,OAGnDhB,GAAgB,GA5BpB,6CADY,sBAgCZP,EAAce,QAAU,IAAIC,gBAC5BN,EAASK,QAAQa,QAGjB,IAAIC,EAAmBzC,GAAmBC,gBAK1C,OAJAoB,EAAmBoB,GArCN,WAAD,wBAuCZC,GAEO,WACHpH,OAAOqH,QAAQC,aAAa,GAAI,GAAI,IACpChC,EAAce,QAAQkB,WAE3B,CAAC/B,IAyFA,sBAAKjP,UAAU,kBAAf,UACI,eAAC,EAAOY,SAAR,WACI,uBACIqQ,KAAK,YACL/Q,MAAOA,EAAMgR,WACbxJ,IAAK+H,EACL0B,SAAU,SAACvB,GAAUD,EAAmBC,IACxC3G,KAAK,OACLjJ,UAAU,qBACVoR,YAAY,uBAEhB,qBAAK5Q,QAAS,kBAAMiP,EAASK,QAAQrM,MAAQ,IACzCmH,IAAI,uBACJC,MAAO,GACPC,IAAI,OACJ9K,UAAU,2BAEd,0BAAUK,GAAG,YAAb,SACKkP,EAAgB5D,KAAI,SAACC,EAAMO,GAAP,OAAiB,wBAAoB1I,MAAOmI,GAAdO,QAEvD,qBAAKjM,MAAO,CAAEmR,UAAW,SAtD7B,qCAEQpD,EAAiB1I,OAAS,EACtB,cAAC,GAAD,UACK0I,EAAiBtC,KAAI,SAACC,EAAMO,GAAP,OAAiB,cAAC,GAAK5L,KAAN,CAAWmN,SAAUA,EACxDD,iBAAkBA,EAElBjE,OAAQoC,GADHO,QAKb,qBAAKnM,UAAU,eAAe6K,MAAM,OAChCD,IAAI,kFACJE,IAAI,UAKZuE,EACI,qBAAKrP,UAAU,wBAAf,SACI,qBAAKsR,OAAO,OACRpR,MAAO,CAAEqR,SAAU,WAAYC,IAAK,KACpC5G,IAAI,yFACJE,IAAI,kBAIZ,SA8BZ,eAAC,EAAOhK,aAAR,WAEsB,OAAdiN,EACI,cAAC,GAAD,CACIxD,OA9ExB,SAAgBjD,GACZiC,EAAMgB,OAAOjD,IA8EOuC,SA3ExB,SAAkB4H,GACd,GAAKA,EAAL,CAKA,IAAIC,EAAgBzD,EAAiB/E,QAAO,SAAAC,GAAC,OAAIA,EAAE9I,KAAO0N,EAAU1N,MACpE4O,EAASnB,GAAa,OACtBmB,EAASjB,GAAoB0D,SANzBC,MAAM,YA0EUnI,OAAQuE,IACP,GAGb,qBAAK/N,UAAU,0BAAf,SACI,qBAAK6K,MAAM,QACPD,IAAI,iFACJE,IAAI,wBAQbV,WAAMwH,KAAK9C,IC5MpB+C,I,MAAgBhM,EADJ,mBA2GHiM,GAxGQ,WAEnB,SAASC,IACL,OAAIF,GAAc9L,IAAI,aACX8L,GAAc7L,IAAI,aAElB,KA+Ef,MAAO,CACH+L,aAAcA,EACdC,mBA9EJ,SAA4BC,GACxBJ,GAAchG,IAAI,YAA0B,IAAZoG,IA8EhCC,iBA3EJ,WACI,OAAIL,GAAc9L,IAAI,iBACX8L,GAAc7L,IAAI,iBAElB,MAwEXmM,kBAjEJ,WACI,OAAIN,GAAc9L,IAAI,kBACX8L,GAAc7L,IAAI,kBAElB,MA8DXoM,iBAtEJ,SAA0BC,GACtBR,GAAchG,IAAI,gBAAiBwG,IAsEnCC,kBA5DJ,SAA2BC,GACvBV,GAAchG,IAAI,iBAAkB0G,IA4DpCC,aAzDJ,WACI,OAAIX,GAAc9L,IAAI,aACX8L,GAAc7L,IAAI,aAElB,MAsDXyM,aAnDJ,SAAsBC,GAClBb,GAAchG,IAAI,YAAa6G,IAmD/BC,YAhDJ,WACI,OAAId,GAAc9L,IAAI,YACX8L,GAAc7L,IAAI,YAElB,MA6CX4M,YA1CJ,SAAqBC,GACjBhB,GAAchG,IAAI,WAAYgH,IA0C9BC,SAvCJ,WACI,OAAIjB,GAAc9L,IAAI,SACX8L,GAAc7L,IAAI,SAElB,MAoCX+M,SAjCJ,SAAkBnM,GACdiL,GAAchG,IAAI,QAASjF,IAiC3BoM,gBA9BJ,WACI,IAAIC,EAASlB,IACb,OAAKkB,GACGA,EAAS,KAAOC,UADJ,GA6BpBC,SAzBJ,SAAkBC,GACdvB,GAAchG,IAAI,QAASuH,IAyB3BC,SAtBJ,WACI,OAAIxB,GAAc9L,IAAI,SACX8L,GAAc7L,IAAI,SAElB,SAlFI,GCAnBsN,GAAgBzN,EADO,uBACwBiM,GAAcC,gBACjE/O,QAAQC,IAAI,wBAAyB6O,GAAcC,gBAEnD,IAmHewB,GAnHY,WAevB,SAASC,EAAiBC,GAClBA,IACAA,EAAQA,EAAMvK,QAAO,SAAAC,GAAC,OAAKA,EAAEnC,KAAK5B,WAAW,YAAyB,WAAX+D,EAAEnC,SAGjEsM,GAAczH,IAAI,OAAQ4H,GAsF9B,MAAO,CACHC,SArGJ,WACI,IAAID,EAAQH,GAActN,IAAI,QAC9B,OAAOyN,GAASA,EAAMlO,OAAS,GAoG/BiO,iBAAkBA,EAClBG,gBAlFJ,WACI,IAAIF,EAAQH,GAActN,IAAI,QAC9B,OAAKyN,EAEkBA,EAAMvK,QAAO,SAAAC,GAAC,QAiBjByK,EAjBoCzK,GAkBxCnC,KAAK6M,SAAS,MAAyB,SAAjBD,EAAQ3K,KADlD,IAAwB2K,KAhBIjI,KAAI,SAAAxC,GAAC,OAAIA,EAAEnC,QAHhB,IAiFnB8M,iBAvEJ,SAA0B9M,GACtB,IAAIyM,EAAQH,GAActN,IAAI,QAC9B,IAAKyN,EAAO,MAAO,GAEnB,IAAItG,EAAesG,EAAMvK,QAAO,SAAAC,GAAC,OASrC,SAAyByK,EAAS5M,GAC9B,IAAI+M,EAAcH,EAAQ5M,KAE1B,IAAK+M,EAAY3O,WAAW4B,GACxB,OAAO,GAGX+M,EAAcA,EAAYrO,QAAQsB,EAAM,KACxB5B,WAAW,OACvB2O,EAAcA,EAAY1O,UAAU,EAAG0O,EAAYxO,SAGvD,GAAIX,EAAY2B,cAAcwN,IAAgBA,EAAYF,SAAS,KAC/D,OAAO,EAEX,OAAO,EAxB8BG,CAAgB7K,EAAGnC,MACxD,OA0BJ,SAAwBiK,GACpB,IAAI9D,EAAe,GAanB,OAXA8D,EAAKlI,SAAQ,SAAA6K,GACT,IAAIK,EAAWL,EAAQ5M,KAAK8F,MAAM,KAE9BlB,EAAO,CACPjF,KAAMsN,EAASA,EAAS1O,OAAS,GACjCyB,KAAM4M,EAAQ5M,KACdiC,KAAuB,SAAjB2K,EAAQ3K,KAAkB,MAAQ,QAE5CkE,EAAY,uBAAOA,GAAP,CAAqBvB,OAG9BuB,EAxCA+G,CAAe/G,IAmEtBgH,mBAxBJ,SAA4BnN,EAAMoN,GAC9B,IAAIC,EAAcrN,EAAO,IACrByM,EAAQH,GAActN,IAAI,QACzByN,IAAOA,EAAQ,IAEpB,IAAIa,EAAUb,EAAMvK,QAAO,SAAAC,GAAC,OAAKA,EAAEnC,KAAK5B,WAAWiP,MACnDD,EAAYrL,SAAQ,SAAA6K,GAChBU,EAAQC,KAAK,CACTC,KAAM,GACNxN,KAAM4M,EAAQ5M,KACdQ,IAAK,GACLyB,KAAuB,QAAjB2K,EAAQ3K,KAAiB,OAAS,OACxCnH,IAAK,QAIb0R,EAAiBc,KAvGE,GCC3B,SAASG,GAAT,GAAqC,IAAb1U,EAAY,EAAZA,SAEpB,OACI,qBAAKC,UAAU,2BAAf,SACI,qBAAKA,UAAU,UAAUK,GAAG,KAA5B,SACKN,MA+DjB,SAAS2U,GAAT,GAA8E,IAAD,IAA9DlL,cAA8D,MAArD,CAAE7C,KAAM,GAAIK,KAAM,GAAIiC,KAAM,IAAyB,EAAnB0L,EAAmB,EAAnBA,gBAEhD5F,EAAgB3E,IAAM4E,OAAO,MAEnC,EAAoC5E,IAAMgF,SAAS,IAAnD,mBAAOwF,EAAP,KAAmBC,EAAnB,KACA,EAAoCzK,IAAMgF,SAAS5F,EAAOxC,MAA1D,mBAAO8N,EAAP,KAAmBC,EAAnB,KACA,EAAoC3K,IAAMgF,UAAS,GAAnD,mBAAO4F,EAAP,KAAmBC,EAAnB,KACMhB,EAAW7J,IAAM4E,OAAO,CAACxF,EAAOxC,OAatC,SAASkO,EAAalO,GAElB+H,EAAce,QAAU,IAAIC,gBAC5B,IAAIrO,EAASqN,EAAce,QAAQpO,OAEnCuT,GAAc,GACdhK,GAAckK,mBAAmBnO,GAAM/E,MAAK,SAAAN,GACxC,IAAID,EAAOuO,QAAX,CAEAjN,QAAQC,IAAI,WACZ,IAAImS,EA4GhB,SAAwBC,EAAaP,GACjC,IAAIF,EAAa,GACjB,IAAK,IAAMU,KAAYD,EACkB,kBAA1BA,EAAYC,IAAuC,aAAbA,IAC7CV,EAAU,uBAAOA,GAAP,CAAmB,CACzBjO,KAAM2O,EACNtO,KAAK,GAAD,OAAK8N,EAAL,YAAmBQ,GACvBrM,KAAM,UAKdoM,EAAYhI,UACZgI,EAAYhI,SAAStE,SAAQ,SAAA6C,GACzBA,EAAI,2BAAQA,GAAR,IAAc3C,KAAM,SACxB2L,EAAU,uBAAOA,GAAP,CAAmBhJ,OAGrC,OAAOgJ,EA9HgBW,CAAe5T,EAAMqF,GACpC+N,EAAc/N,GACd6N,EAAcO,GACdH,GAAc,GAEd1B,GAAkBY,mBAAmBnN,EAAMoO,OAC5C7S,OAAM,SAAAC,GACLQ,QAAQC,IAAI,sBAAuBT,GAE/Bd,EAAOuO,UACX4E,EAAc,IACdI,GAAc,OAItB,SAASO,EAASxO,GACd,IAAImF,EAAQ8H,EAASnE,QAAQ1D,QAAQpF,GACjCyO,EAAUxB,EAASnE,QAAQ5G,QAAO,SAAAC,GAAC,OAAI8K,EAASnE,QAAQ1D,QAAQjD,IAAMgD,KAC1E8H,EAASnE,QAAU2F,EACnBR,GAAc,GAEd,IAAI9H,EAAeoG,GAAkBO,iBAAiB9M,GAGlDA,IAAS8N,GAAsC,IAAxB3H,EAAa5H,QAIxCsP,EAAc1H,GACd4H,EAAc/N,GACdiO,GAAc,IALVC,EAAalO,GA6CrB,OA3FAoD,IAAMC,WAAU,WACZ0E,EAAce,QAAU,IAAIC,gBAC5B,IAAI5C,EAAeoG,GAAkBO,iBAAiBtK,EAAOxC,MAI7D,OAHA6N,EAAc1H,GACd8H,GAAc,GAEP,WACHlG,EAAce,QAAQkB,WAE3B,CAACxH,EAAOxC,OAmFP,qBAAIhH,UAAU,YAAd,UACI,oBACIA,UAAU,UACVQ,QAAS,kBAAMgV,EAASvB,EAASnE,QAAQmE,EAASnE,QAAQvK,OAAS,KAFvE,SAlCR,WACI,IAAImQ,EAAczB,EAASnE,QAAQnE,KAAI,SAAA3E,GAAI,OAAsBA,EA2F3C8F,MAAM,KACb6I,SA3Ff,OACI,mCACKD,EAAY/J,KAAI,SAACC,EAAMO,GAAP,OAAiB,sBAAMnM,UAAU,kBAE9CQ,QAAS,kBAAMgV,EAASvB,EAASnE,QAAQ3D,KAFX,SAG7BP,GAFIO,QA+BgEyJ,KAE7E,oBAAI5V,UAAU,UAAd,SAxBAgV,EACQ,qBACJ1D,OAAO,OACP1G,IAAI,yFACJE,IAAI,gBAIL8J,EAAWjJ,KAAI,SAACC,EAAMO,GAAP,OAAiB,cAAC5L,GAAD,CAEnCoG,KAAMiF,EAAKjF,KACXsC,KAAM2C,EAAK3C,KACXjC,KAAM4E,EAAK5E,KACX2N,gBAAiBA,EACjBkB,iBAAkB,SAAClP,GAAD,OAjC1B,SAA0BA,GACtBsN,EAASnE,QAAT,uBAAuBmE,EAASnE,SAAhC,CAAyCgF,EAAa,IAAMnO,IAC5D6O,EAASV,EAAa,IAAMnO,GA+BIkP,CAAiBlP,KALxCwF,WA0BjB,SAAS5L,GAAKgJ,GACV,GAAmB,SAAfA,EAAMN,KAAiB,CACvB,IAAIxI,EAAQ8I,EAAM5C,KAAKjB,QAAQ,MAAO,IACtC,OACI,mBACIlF,QAAS,kBAAM+I,EAAMoL,gBAAgBpL,EAAMvC,OAC3CvG,MAAOA,EAFX,SAGKA,IAIb,GAAmB,QAAf8I,EAAMN,KACN,OAAQ,sBACJzI,QAAS,kBAAM+I,EAAMsM,iBAAiBtM,EAAM5C,OAC5ClG,MAAM,GAFF,SAGH8I,EAAM5C,OAgCnB8N,GAAaqB,MA1Nb,SAAevM,GACX,MAAoCa,IAAMgF,SAAS,IAAnD,mBAAOwF,EAAP,KAAmBC,EAAnB,KAuCA,OArCAzK,IAAMC,WAAU,WACZ,IAAI8C,EAAeoG,GAAkBO,iBAAiBvK,EAAM5C,MAE5D,OADAkO,EAAc1H,GACP,eAER,CAAC5D,EAAM5C,OAiCN,qCACI,sBAAK3G,UAAU,gBAAf,UACI,oBAAIA,UAAU,KAAd,SAAoBuJ,EAAM5C,OAjCtC,WACI,IAAIoP,EAAUnB,EAAW1L,QAAO,SAAAC,GAAC,MAAe,QAAXA,EAAEF,QACnC+M,EAAWpB,EAAW1L,QAAO,SAAAC,GAAC,MAAe,SAAXA,EAAEF,QAExC,OACI,qCACK8M,EAAQpK,KAAI,SAACC,EAAMO,GAAP,OAAiB,cAACuI,GAAD,CAC1BC,gBAAiBpL,EAAMoL,gBAEvBnL,OAAQoC,GADHO,MAKL6J,EAASzQ,OAAS,EACd,oBAAIvF,UAAU,YAAd,SACKgW,EAASrK,KAAI,SAACC,EAAMO,GAAP,OAAiB,cAAC5L,GAAD,CAE3BoG,KAAMiF,EAAKjF,KACXsC,KAAM2C,EAAK3C,KACXjC,KAAM4E,EAAK5E,KACX2N,gBAAiBpL,EAAMoL,iBAJlBxI,QAQb,MAUP8J,MAEL,qBAAKjW,UAAU,oBA6KZyU,U,MC9OA,SAASyB,GAAU3M,GAC9B,MAA0Ba,IAAMgF,SAAS,MAAzC,mBAAO+G,EAAP,KAAcC,EAAd,KADqC,4CAoBrC,WAAwB3E,GAAxB,SAAA1P,EAAA,sDACS0P,GACDlI,EAAMM,SAAS4H,GAFvB,4CApBqC,sBA0BrC,OAvBArH,IAAMC,WAAU,WAKZ,OAJA+L,EAAS,CACLC,QAAS9M,EAAM8M,UAGZ,eAER,CAAC9M,EAAM8M,UAiBN,qBAAKnW,MAAOiW,EAAOnW,UAAU,mBAA7B,SACKuJ,EAAMC,OACH,cAAC,GAAD,CACIc,aAAW,EACXd,OAAQD,EAAMC,OACdK,SAhCqB,4CAiCrBW,QArBhB,WACIjB,EAAMiB,WAqBMD,OAlBhB,SAAgBjD,GACZiC,EAAMgB,OAAOjD,MAmBH6O,IAAUA,EAAMG,cAEd,qBACItW,UAAU,iBACVsR,OAAO,OACP1G,IAAI,yFACJE,IAAI,gBACH,KC/ClB,IAAMyL,GAAkB,SAACpJ,GAC5B,MAAO,CACHlE,KAAM,oBACNjB,QAASmF,ICSF,SAASqJ,GAAQjN,GAC5B,IAAM0F,EAAWC,cAEX/B,EAAehN,aAAY,SAAAC,GAAK,OAAIA,EAAMqW,YAAYtJ,gBAC5D,EAA4C/C,IAAMgF,SAAS,QAA3D,mBAAOsH,EAAP,KAAuBC,EAAvB,KACA,EAAgCvM,IAAMgF,SAAS,MAA/C,mBAAOwH,EAAP,KAAiBC,EAAjB,KACA,EAAoCzM,IAAMgF,UAAS,GAAnD,mBAAO4F,EAAP,KAAmBC,EAAnB,KANmC,4CAQnC,4CAAAlT,EAAA,6DAA8B+U,EAA9B,+BAAyC,aAAzC,kBAEiCrQ,EAAe,cAFhD,cAEYqC,EAFZ,gBAG0BrC,EAAgBqC,EAAe,mBAHzD,OAGY2K,EAHZ,OAIQqD,EAASrD,GAJjB,kDAOQlK,EAAMwN,SAAS,YAPvB,kEARmC,wBAiDnC,SAASpC,EAAgB3N,GACrB2P,EAAkB,SAClB1L,GAAca,kBAAkB9E,GAAM/E,MAAK,SAAAN,GACvCkV,EAAYlV,MAoCpB,OArEAyI,IAAMC,WAAU,WAAM,4CAClB,4CAAAtI,EAAA,6DAA2B+U,EAA3B,+BAAsC,aAAtC,kBAEiCrQ,EAAe,cAFhD,cAEYqC,EAFZ,gBAG0BrC,EAAgBqC,EAAe,mBAHzD,OAGY2K,EAHZ,OAIQqD,EAASrD,GAJjB,kDAOQlK,EAAMwN,SAAS,YAPvB,kEADkB,wBAabxD,GAAkBG,aACnBuB,GAAc,GAdC,WAAD,wBAed+B,EAAY,SAAUvD,GAElBF,GAAkBC,iBAAiBC,GACnCxE,EAASsH,GAAgBhD,GAAkBI,oBAC3CsB,GAAc,OAItB,IAAIgC,EAAmB1D,GAAkBI,kBAEzC,OADA1E,EAASsH,GAAgBU,IAClB,WACHJ,EAAY,SAEjB,CAAC5H,EAAU1F,IA0CV,sBAAKvJ,UAAU,kBAAf,UAZJ,WACI,GAAIgV,EACA,OACI,qBAAKhV,UAAU,mCAAmC6K,MAAM,OACpDD,IAAI,yFACJE,IAAI,UAQXoM,GACD,eAAC,EAAOnW,cAAR,WACI,uBACIP,QA9BhB,WACI+S,GAAkBC,iBAAiB,MACnCyB,GAAc,GACdhG,EAASsH,GAAgB,KAlEM,mCAmE/BY,EAAe,SAAU1D,GAErBzD,YAAW,WACPuD,GAAkBC,iBAAiBC,GACnCxE,EAASsH,GAAgBhD,GAAkBI,oBAC3CsB,GAAc,KACf,SAqBKjV,UAAU,sBAFd,6BAGqB8R,GAAckB,kBAHnC,eAKA,cAAC,GAAD,UACK7F,EAAaxB,KAAI,SAACyL,EAAcjL,GAAf,OAAyB,cAAC,GAAa2J,MAAd,CACvCnB,gBAAiBA,EAEjBhO,KAAMyQ,GADDjL,QAIb,qBAAKnM,UAAU,yBAAf,SACI,cAAC,GAAD,CACI6J,SAAU,SAAC4H,GAAD,OAAeA,EAAYkF,EAAkB,QAAUpN,EAAMwN,SAAS,aAChFxM,OAAQ,SAACjD,GAAD,OAAciC,EAAMgB,OAAOjD,IACnCkD,QApDpB,WACIwF,YAAW,WACP2G,EAAkB,UACnB,KACHE,EAAY,OAiDIrN,OAAQoN,EACRP,QAASK,Y,iCCtHlB,SAASW,GAAc9N,GAElC,IAAMwF,EAAgB3E,IAAM4E,OAAO,MAC7B9O,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAEnCoX,EAAYlN,IAAM4E,OAAO,IACzBuI,EAAenN,IAAM4E,OAAO,IAClC,EAAwC5E,IAAMgF,SAAS,IAAvD,mBAAOjC,EAAP,KAAqBoJ,EAArB,KACA,EAA4CnM,IAAMgF,SAAS,IAA3D,mBAAOoI,EAAP,KAAuBC,EAAvB,KACA,EAAoCrN,IAAMgF,UAAS,GAAnD,mBAAOsI,EAAP,KAAmBC,EAAnB,KACMC,EAAa,WACf,IAAIpK,EAAW,GAIf,OAHI+J,EAAazH,SAAWyH,EAAazH,QAAQvK,OAAS,IACtDiI,EAAW+J,EAAazH,QAAQnE,KAAI,SAACC,GAAD,OAAUA,EAAKjF,QAAMkR,KAAK,KAE3D,CAAErK,SAAUA,EAAU/M,MAAO6W,EAAUxH,QAAQrM,QAfjB,SA2D1BqU,EA3D0B,8EA2DzC,WAA+BnR,GAA/B,mCAAA5E,EAAA,yDAAqC+U,EAArC,+BAAgD,aAC/B,MAATnQ,IAAgBA,EAAKrB,SAAS,KADtC,wBAGYyS,EAAcP,EAAe7L,KAAI,SAACC,GAAD,OAAUA,EAAKjF,QAAMkR,KAAK,IAC3DhP,EAAU,CACVlC,KAAMA,EACNK,KAAM+Q,EAAcpR,EACpBqR,QAAS,IAEbT,EAAazH,QAAb,uBAA2ByH,EAAazH,SAAxC,CAAiDjH,IACjD4O,EAAkBF,EAAazH,SAC/BgH,GAAS,GAITa,GAAc,GACd5I,EAAce,QAAU,IAAIC,gBACxBrO,EAASqN,EAAce,QAAQpO,OAjB3C,UAkB4BuW,EAAmBvW,GAlB/C,WAkBY+T,EAlBZ,QAoBY/T,EAAOuO,QApBnB,mDAqBQsH,EAAazH,QAAU2F,EACvBgC,EAAkBhC,GAClBkC,GAAc,GAvBtB,wBAyBQb,IAzBR,4CA3DyC,iCAwF1BmB,EAxF0B,8EAwFzC,WAAkCvW,GAAlC,mBAAAK,EAAA,6DACQmW,EAAWX,EAAazH,QAAQqI,IAAI,GAD5C,SAG4BlN,GAAcmN,mBAAmBF,EAASlR,KAAMtF,GAH5E,cAGQ2W,EAHR,QAKQ5C,EALR,aAKsB8B,EAAazH,UACvB6F,MAERuC,EAAQ,2BAAQA,GAAR,IAAkBF,QAASK,IACnC5C,EAAQlB,KAAK2D,GATjB,kBAUWzC,GAVX,4CAxFyC,sBA2KzC,OAzJArL,IAAMC,WAAU,WACZ,SAASiO,EAAYrH,GACjB,GAAoB,IAAhBA,EAAK1L,OAAc,MAAO,GAE9B,IAAIyB,EAAO,GAIX,OAHAiK,EAAKlI,SAAQ,SAAAwP,GACTvR,GAAQuR,EAAG5R,QAERK,EAGXsQ,EAAUxH,QAAQrM,MAAQ8F,EAAMiP,aAEhC,IAAIC,EAAYlP,EAAMmP,gBAAgB5L,MAAM,KAC5C2L,EAAYA,EAAUvP,QAAO,SAAAC,GAAC,MAAU,KAANA,KAClC,IAAIwP,EAAmB,GACvBF,EAAU1P,SAAQ,SAAA6K,GACdA,EAAU,CAAEjN,KAAMiN,EAAU,KAC5BA,EAAO,2BAAQA,GAAR,IAAiB5M,KAAMsR,EAAYK,GAAoB/E,EAAQjN,OACtEiN,EAAO,2BAAQA,GAAR,IAAiBoE,QAAS,KACjCW,EAAiBpE,KAAKX,MAE1B2D,EAAazH,QAAU6I,EACvBlB,EAAkBkB,GAGlB5J,EAAce,QAAU,IAAIC,gBAC5B,IAAIrO,EAASqN,EAAce,QAAQpO,OASnC,OARAuJ,GAAcmN,mBAAmB,GAAI1W,GAAQO,MAAK,SAACN,GAE3CD,EAAOuO,SACXsG,EAAgB,aAAI5U,OACrBY,OAAM,SAAAC,GACLQ,QAAQC,IAAIT,MAGT,WACHuM,EAAce,QAAQkB,WAE3B,CAACzH,IAmHA,sBAAKrJ,MAAO,CAAE0Y,aAAc,GAAItH,OAAQ,IAAxC,UACI,sBAAKtR,UAAU,oBAAf,UACI,sBAAMA,UAAU,2BAAhB,eAECwX,EAAe7L,KAAI,SAACC,EAAMO,GAAP,OAChB,sBAAMnM,UAAU,2BAAhB,SACK4L,EAAKjF,MADsCwF,MAKpD,uBACIjM,MAAOA,EAAMgR,WACbE,YAAY,0CACZ1J,IAAK4P,EACLtX,UAAU,mBACV6Y,QAAS,SAACjJ,GAAD,OAtFzB,SAAwBA,GAEpB,GAA8B,MADpBA,EAAIkJ,OAASlJ,EAAImJ,SAAWnJ,EAAIoJ,WACNzB,EAAazH,QAAQvK,OAAS,EAAG,CAGjE,IAAIkQ,EAAO,aAAO8B,EAAazH,SAC/B2F,EAAQE,MACR4B,EAAazH,QAAU2F,EACvBgC,EAAkBF,EAAazH,cAE/BgI,EAAgBlI,EAAIO,OAAO1M,OAAO,WAA2B,0DAC5CmM,EAAIO,OAAO1M,MAAQ,IAChC8F,EAAM4H,SAASyG,QAIvBhI,EAAIO,OAAOQ,QAsEmBsI,CAAerJ,SAGzC,qBAAK5P,UAAU,mBAAmBE,MAAO,CAAEmR,UAAW,EAAGE,SAAU,YAAnE,SA9DR,WACI,IAAI2H,EAAiB,GACjBhB,EAAWV,EAAeW,IAAI,GAOlC,GALIe,EADA1B,EAAejS,OAAS,EACV,aAAO2S,EAASF,SAEb7K,EAGjBuK,EACA,OACI,qBAAKxX,MAAO,CAAEqR,SAAU,WAAYC,IAAK,EAAG2H,QAAS,EAAGC,MAAO,WAA/D,SACI,qBAAK9H,OAAO,OACR1G,IAAI,yFACJE,IAAI,kBAMpB,GAA8B,IAA1BoO,EAAe3T,OAAc,CAC7B,IAAIoB,EAAO,QAKX,OAJIuR,GAAYA,EAASvR,OACrBA,EAAO,OAASuR,EAASvR,MAIzB,sBAAKzG,MAAO,CAAEqR,SAAU,WAAYC,IAAK,EAAG2H,QAAS,EAAGC,MAAO,WAA/D,8BAA8FzS,KAItG,OAAOuS,EAAevN,KAAI,SAACC,EAAMO,GAAP,OACtB,sBACI3L,QAAS,kBAxCjBsX,EAwCyClM,EAxCnB,KAAK,WACvBrC,EAAM4H,SAASyG,aAGnBN,EAAUxH,QAAQa,SAqCV3Q,UAAU,qBAFd,SAKK4L,GAFIO,MA4BJkN,Q,WChMXC,GAAczT,EADF,wBA2EH0T,GAdJ,CACHC,SAzDJ,SAAkB/Y,GACd6Y,GAAYzN,IAAI,QAASpL,IAyDzBgZ,SAtDJ,WACI,IAAIhZ,EAAQ6Y,GAAYtT,IAAI,SAC5B,OAAKvF,GAAc,IAqDnBiZ,WAjDJ,SAAoBrS,GAChBiS,GAAYzN,IAAI,UAAWxE,IAiD3BsS,WA9CJ,WACI,IAAItS,EAAUiS,GAAYtT,IAAI,WAC9B,OAAKqB,GAAgB,IA6CrBuS,aAzCJ,WACIN,GAAYzN,IAAI,QAAS,IACzByN,GAAYzN,IAAI,UAAW,IAC3ByN,GAAYzN,IAAI,OAAQ,IACxByN,GAAYzN,IAAI,YAAY,IAsC5BgO,QAnCJ,SAAiB7S,GACbsS,GAAYzN,IAAI,OAAQ7E,IAmCxB8S,QAhCJ,WACI,IAAI9S,EAAOsS,GAAYtT,IAAI,QAC3B,OAAKgB,GAAa,IA+BlB+S,YA3BJ,WACI,IAAI/S,EAAOsS,GAAYtT,IAAI,QAC3B,OAAKgB,GAEAA,EAAK6M,SAAS,KAEZ7M,EAAKtB,QAAQ,eAAgB,IAJlB,IA0BlBsU,YAnBJ,SAAqBC,GACjBX,GAAYzN,IAAI,WAAYoO,IAmB5BA,SAhBJ,WACI,IAAIA,EAAWX,GAAYtT,IAAI,YAC/B,OAAKiU,IAAiB,IC3Cf,SAASC,GAAU3Q,GAE9B,IAAMwF,EAAgB3E,IAAM4E,OAAO,MAE7BmL,EAAW,IAAIC,KACrB,EAA8BhL,mBAAS,IAAvC,mBAAO/H,EAAP,KAAgBqS,EAAhB,KACA,EAAwCtK,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACM7O,EAAQuO,iBAAO,IACfxB,EAAWwB,iBAAO,IAGhBqL,EAAiB9Q,EAAjB8Q,aACAC,EAAyBD,EAAzBC,UAAWC,EAAcF,EAAdE,UACbC,EAAaxL,kBAAQsL,GAErBG,EAAazL,iBAAO,CACtBvO,MAAO,KACP+M,SAAU,KACVnG,QAAS,OAGPnH,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SArBJ,4CAyFrC,oCAAA6B,EAAA,yDACgD,KAAxC6C,EAAYlC,KAAKjC,EAAMqP,QAAS,IADxC,uBAEQnG,sBAAoB0B,MAAM,yBAFlC,6BAMmD,KAA3CzG,EAAYlC,KAAK8K,EAASsC,QAAS,IAN3C,uBAOQnG,sBAAoB0B,MAAM,6BAPlC,+BAW0C,KAAlCzG,EAAYlC,KAAK2E,EAAS,KAAczC,EAAYlC,KAAK2E,EAAS,IAAI9B,OAAS,IAXvF,uBAYQoE,sBAAoB0B,MAAM,6CAZlC,0BAkBQhL,GAAK,IAAI2D,MAAOC,UAChByW,EAA8Dja,EAAMqP,QAExExI,GADIA,EApBR,UAoBsBkG,EAASsC,QApB/B,YAoB0ClL,EAAY+V,eAAeD,EAAU,IApB/E,QAqBwBjY,WAAW,KAAM,KAGjCmY,EAAc,GAClBA,GAAW,QACXA,GAAW,cAAWva,EAAX,MACXua,GAAW,iBAAcna,EAAMqP,QAApB,MACX8K,GAAW,oBAAiBpN,EAASsC,QAA1B,MACX8K,GAAW,UACXA,GAAevT,EAEXwT,EAAYL,EAAW1K,QACrB,eAAiBtC,EAASsC,QAAU,IAAMlL,EAAY+V,eAAeD,EAAU,IAC/E,eAAiBJ,EAOvB5W,EALW,CACP0D,QAASyT,EACTxT,QAASzC,EAAYkW,aAAaF,IAG1BtT,GAzChB,6CAzFqC,+BAqItB5D,EArIsB,gFAqIrC,WAAqB/B,EAAM2F,GAA3B,eAAAvF,EAAA,yDACIuN,GAAgB,IACZkL,EAAW1K,QAFnB,gCAG6BiL,GAAWpZ,EAAM2F,GAH9C,QAGYpF,EAHZ,SAIwBA,EAAS+F,SACrB0B,sBAAoBC,KAAK1H,EAAS+F,OAAO+S,SAAU,WAAY,KAAM,WACjEvR,OAAOwR,KAAK/Y,EAAS+F,OAAO+S,SAAU,UAAUrK,WACjD,GACHrB,GAAgB,GAEhBiK,GAAmBK,gBAV/B,0BAaYnZ,EAAMqP,UAAY2K,EAAW3K,QAAQrP,OAClC+M,EAASsC,UAAY2K,EAAW3K,QAAQtC,SAdvD,wBAeYxK,QAAQC,IAAI,uBAfxB,UAgBkB8X,GAAS,OAAQT,EAAWhT,GAhB9C,WAmBYD,IAAYoT,EAAW3K,QAAQzI,QAnB3C,wBAoBYrE,QAAQC,IAAI,0BApBxB,UAqBkB8X,GAAWpZ,EAAM2F,GAAU/E,OAAM,SAAAC,GACnCmH,sBAAoB0B,MAAM7I,EAAM,OAtBhD,QAyBQ8M,GAAgB,GAChB3F,sBAAoBC,KAAK,WAEzB2P,GAAmBK,eA5B3B,6CArIqC,sBAuMrC,OAhLAxP,IAAMC,WAAU,WAEZ,IACM3F,EAAQmB,EADI,kBAEZK,EAAYxB,EAAMqB,IAAI,aAAerB,EAAMsB,IAAI,aAAe,GAEpE,IAAIpB,EAAY2B,cAAcL,GAA9B,CAKA,GAAIoU,IAAcf,GAAmBU,YAAcO,EAAW1K,QAM1D,OALArP,EAAMqP,QAAUyJ,GAAmBE,WACnCjM,EAASsC,QAAUyJ,GAAmBQ,cACtCL,EAAWH,GAAmBI,mBAE9Ba,EAAW1K,SAAWyJ,GAAmBU,YAK7CM,IACAhB,GAAmBS,aAAY,GAC/BT,GAAmBM,QAAQS,GAG3BvL,EAAce,QAAU,IAAIC,gBAC5B,IAAIrO,EAASqN,EAAce,QAAQpO,OAanC,OAZAuJ,GAAca,kBAAkBwO,EAAW5Y,GAAQO,MAAK,SAAAN,GAC/CA,IACLlB,EAAMqP,QAAUnO,EAAKlB,MACrB+M,EAASsC,QAAUnO,EAAK6L,SACxBiN,EAAW3K,QAAU,CACjBrP,MAAOkB,EAAKlB,MACZ+M,SAAU7L,EAAK6L,SACfiN,WAAY9Y,EAAK0F,SAErBqS,EAAW/X,EAAK0F,aAGb,WACH0H,EAAce,QAAQkB,SAlCtBzH,EAAMwN,SAAS,cAoCpB,CAACwD,EAAWD,EAAW/Q,IAsItB,qBAAKvJ,UAAU,kBAAf,SACI,eAAC,EAAOe,cAAR,WACI,qCACI,qBAAKb,MAAO,CAAE2K,MAAO,MAAOyG,OAAQ,GAAI4J,MAAO,QAA/C,SACI,cAAC7D,GAAD,CACImB,aAAc/X,EAAMqP,QACpB4I,gBAAiBlL,EAASsC,QAC1BqB,SA1CxB,WAAqE,IAAvC3H,EAAsC,uDAA7B,CAAEgE,SAAU,GAAI/M,MAAO,IAC1DA,EAAMqP,QAAUtG,EAAO/I,MACvB+M,EAASsC,QAAUtG,EAAOgE,SAG1B+L,GAAmBG,WAAWrS,GAC9BkS,GAAmBC,SAAShQ,EAAO/I,OAC9BmE,EAAY2B,cAAciD,EAAO/I,OAGlC8Y,GAAmBM,QAAQrQ,EAAOgE,UAFlC+L,GAAmBM,QAAQrQ,EAAOgE,SAAWhE,EAAO/I,MAAQ,YAsCpD,wBACIP,MAAK,2BAAOA,EAAMib,QAAb,IAAqBtQ,MAAO,KAAMyG,OAAQ,OAAQ4J,MAAO,QAASxQ,WAAY,IACnF1K,UAAU,qBACVQ,QAtNiB,2CAmNrB,SAIKga,EAAW1K,QAAU,SAAW,WAIhClL,EAAY2B,cAAcc,GAQrB,GANF,wBACInH,MAAK,2BAAOA,EAAMib,QAAb,IAAqBtQ,MAAO,KAAMyG,OAAQ,OAAQ4J,MAAO,QAASE,gBAAiB,YACxFpb,UAAU,qBACVQ,QArC5B,WACI+Y,GAAmBK,eACnBF,EAAW,eAEX1J,YAAW,WACPvP,EAAMqP,QAAU,GAChBtC,EAASsC,QAAU,GACnB0K,EAAW1K,SAAU,EACrB4J,EAAW,MACZ,MAyBiB,uBASZ,qBAAKxZ,MAAO,CAAEmR,UAAW,SACzB,cAAC,KAAD,CACI5N,MAAO4D,EACPgU,cArKhB,SAA2BC,EAAMxE,GAC7B,IAAMyE,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACZ,IAAIC,GAAW,IAAI1X,MAAOC,UAAY,IAAMqX,EAAK3U,KAMjDoU,GALW,CACP3T,QAAQ,eAAD,OAAiBsU,GACxBrU,QAASkU,EAAOzU,OAAO6U,OAAOJ,EAAOzU,OAAOsF,QAAQ,KAAO,IAG/D,iBAA2BsP,IAAYzZ,MAAK,SAAA2Z,GACpCA,GAAOA,EAAIvU,SAAWuU,EAAIvU,QAAQwU,cAClC/E,EAAS8E,EAAIvU,QAAQwU,kBAIjCN,EAAOO,cAAcR,IAuJTpb,MAAO,CAAEoR,OAAQ,qBAAsBzG,MAAO,QAC9CkR,WAAY,SAAAC,GAAI,OAAI7B,EAAS8B,OAAOD,IACpC7K,SAzDhB,YAA6C,EAAd+K,KAAe,IAATF,EAAQ,EAARA,KACjCtC,EAAWsC,GAGXzC,GAAmBG,WAAWsC,GAC9BzC,GAAmBC,SAAS/Y,EAAMqP,YAwDtBT,EACI,qBAAKrP,UAAU,iBAAf,SACI,qBAAKsR,OAAO,OACR1G,IAAI,yFACJE,IAAI,kBAIZ,Q,cCjQT,SAASqR,KACpB,IAAMC,EAAqBhS,IAAM4E,OAAO,MAClCqN,EAAoBjS,IAAM4E,OAAO,MACjCsN,EAAsBlS,IAAM4E,OAAO,MACnCuN,EAAiBnS,IAAM4E,OAAO,MAC9BwN,EAAgBpS,IAAM4E,OAAO,MAC7ByN,EAAarS,IAAM4E,OAAO,MAE1B9O,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SA+BzC,OA7BAkK,IAAMC,WAAU,WAOZ,OANA+R,EAAmBtM,QAAQrM,MAAQqO,GAAcI,mBACjDmK,EAAkBvM,QAAQrM,MAAQqO,GAAckB,kBAChDsJ,EAAoBxM,QAAQrM,MAAQqO,GAAcK,oBAClDoK,EAAezM,QAAQrM,MAAQqO,GAAcU,eAC7CgK,EAAc1M,QAAQrM,MAAQqO,GAAca,cAC5C8J,EAAW3M,QAAQrM,MAAQqO,GAAcgB,WAClC,eACR,IAsBC,qBAAK9S,UAAU,kBAAf,SACI,eAAC,EAAOe,cAAR,WACI,oBAAIf,UAAU,sBAAd,2BACA,uBACI0H,IAAK0U,EACLpc,UAAU,uBACVoR,YAAY,uBACZsL,aAAa,6CAEjB,sBACI1c,UAAU,gBADd,6EAKA,uBACA,uBACIiJ,KAAK,SACLvB,IAAK2U,EACLrc,UAAU,uBACVoR,YAAY,qBACZsL,aAAa,OAEjB,sBACI1c,UAAU,gBADd,gDAKA,uBACA,uBACIiJ,KAAK,SACLvB,IAAK4U,EACLtc,UAAU,uBACVoR,YAAY,0BACZsL,aAAa,SAEjB,sBACI1c,UAAU,gBADd,uDAKA,oBAAIA,UAAU,sBAAd,oCACA,uBACI0H,IAAK6U,EACLvc,UAAU,uBACVoR,YAAY,0CAEhB,uBACIpR,UAAU,gBADd,4BAGI,mBACImQ,OAAO,SACPwM,KAAK,qCACLC,IAAI,aAHR,mBAHJ,mDAUA,uBACA,uBACIlV,IAAK8U,EACLxc,UAAU,uBACVoR,YAAY,uBAEhB,sBACIpR,UAAU,gBADd,6BAKA,uBACA,uBACI0H,IAAK+U,EACLzc,UAAU,uBACVoR,YAAY,aAEhB,sBACIpR,UAAU,gBADd,kCAKA,uBACA,wBACIE,MAAOA,EAAMib,OACb3a,QApGhB,YACoD,KAA3CiJ,OAAOC,QAAQ,0BAIpBoI,GAAcM,iBAAiBgK,EAAmBtM,QAAQrM,OAC1DqO,GAAcE,mBAAmBqK,EAAkBvM,QAAQrM,OAC3DqO,GAAcQ,kBAAkBgK,EAAoBxM,QAAQrM,OAC5DqO,GAAcW,aAAa8J,EAAezM,QAAQrM,OAClDqO,GAAcc,YAAY4J,EAAc1M,QAAQrM,OAChDqO,GAAciB,SAAS0J,EAAW3M,QAAQrM,OAE1CkG,sBAAoBC,KAAK,6BACzBoG,YAAW,WACPvG,OAAOgH,SAASoM,WACjB,OAsFS7c,UAAU,wBAHd,uB,OCxHD,SAAS8c,KACpB,IAAM7N,EAAWC,cAEjB,SAAS6N,EAAY3D,GACjB,IAAI4D,EAAS,KACb,OAAQ5D,GACJ,IAAK,SACD4D,ECZL,CACH/T,KAAM,0BDYE6I,GAAcqB,SAAS,UACvBlE,EAAS+N,GACT,MACJ,IAAK,OACDA,ECXL,CACH/T,KAAM,wBDWE6I,GAAcqB,SAAS,QACvBlE,EAAS+N,GACT,MACJ,IAAK,SACDA,ECVL,CACH/T,KAAM,0BDUE6I,GAAcqB,SAAS,UACvBlE,EAAS+N,IAOrB,OACI,sBAAKhd,UAAU,oCAAf,UACI,sBAAMQ,QAAS,kBAAMuc,EAAY,aACjC,sBAAMvc,QAAS,kBAAMuc,EAAY,WACjC,sBAAMvc,QAAS,kBAAMuc,EAAY,gBEyF9BE,OA/Gf,WACI,IAAMC,EAAW,CAAC,SAAU,OAAQ,SAEpC,EAAwC9S,IAAMgF,SAAS8N,EAAS,IAAhE,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAiBjT,IAAM4E,OAAO,MAC9BsO,EAAWlT,IAAM4E,OAAO,MAKxBtK,EAAQ0F,IAAM4E,OAAOnJ,EADT,mBAEZoJ,EAAWC,cA6BjB,SAASqO,EAAgBC,IAlCC,SAACA,GAAUH,EAAevN,QAAU0N,EAmC1DC,CAAkBD,GAElBJ,EAAgBF,EAAS,IAG7B,SAASQ,EAAWpW,GAChBgW,EAASxN,QAAUxI,EACnB8V,EAAgBF,EAAS,IAnC7B9S,IAAMC,WAAU,YACZ,SAAqB+O,GACjB,IAAI4D,EAAS,KACb,OAAQ5D,GACJ,IAAK,SACD4D,ED/BT,CACH/T,KAAM,0BC+BM6I,GAAcqB,SAAS,UACvBlE,EAAS+N,GACT,MACJ,IAAK,OACDA,ED9BT,CACH/T,KAAM,wBC8BM6I,GAAcqB,SAAS,QACvBlE,EAAS+N,GACT,MACJ,IAAK,SACDA,ED7BT,CACH/T,KAAM,0BC6BM6I,GAAcqB,SAAS,QACvBlE,EAAS+N,IAOrBD,CAAYjL,GAAcuB,cAC3B,CAACpE,IAaJ,IAAMoL,EAAe,CACjBC,UAAWgD,EAASxN,QACpByK,UAAW,WACP+C,EAASxN,QAAU,OA4B3B,OACI,eAAC,EAAD,WACI,eAAC,EAAO7P,OAAR,WACI,cAAC,EAAOA,OAAOM,KAAf,CAEIG,SAAUyc,EACV3c,QAAS,SAACC,GAAD,OAAW2c,EAAgB3c,IACpCA,MAAM,YAHF,YAMPyc,EAASvR,KAAI,SAAAC,GAAI,MAAa,YAATA,EAClB,cAAC,EAAO3L,OAAOM,KAAf,CAEIG,SAAUyc,EACV3c,QAAS,SAACC,GAAD,OAAW2c,EAAgB3c,IACpCA,MAAOmL,GAHFA,GAKT,SAGR,cAAC,EAAO5K,YAAR,UA5CR,WACI,IAAIuC,EAAQmB,EAAMoL,QAAQtM,SAC1B,GAAIkB,EAAMoL,QAAQ1L,aAA6C,IAA9BkK,OAAOC,KAAKhL,GAAOgC,OAChD,OAAO,cAAC,GAAD,IAGX,OAAQ4X,GACJ,IAAK,SACD,OAAO,cAAC,GAAD,CAAgB5S,OAAQmT,EAAYC,YAAaN,EAAevN,UAC3E,IAAK,OACD,OAAO,cAAC0G,GAAD,CAASjM,OAAQmT,EAAY3G,SAAUqG,IAClD,IAAK,QACD,OAAO,cAAClD,GAAD,CACHG,aAAcA,EACduD,aAAcL,EACdxG,SAAUqG,IAElB,IAAK,WACD,OAAO,cAAC,GAAD,IACX,QACI,OAAO,cAAC,GAAD,KAyBNS,KAEL,cAAC,wBAAD,IACA,cAAC,GAAD,QC5GGC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/b,MAAK,YAAkD,IAA/Cgc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCPVO,GAAY,CAEZnR,aAAc,GAEdoR,iBAAkB,IAiBPC,GAdQ,WAAgC,IAA/Bpe,EAA8B,uDAAtBke,GAAWtB,EAAW,uCAClD,OAAQA,EAAO/T,MACX,IAAK,oBACD,IAAIwV,EAAe,aAAOzB,EAAOhV,SACjC,OAAO,2BAAK5H,GAAZ,IAAmB+M,aAAcsR,IAErC,IAAK,4BACD,IAAIC,EAAmB,eAAQ1B,EAAOhV,SACtC,OAAO,2BAAK5H,GAAZ,IAAmBme,iBAAkBG,IAEzC,QACI,OAAOte,IClBfke,GAAY,CACZvQ,UAAW,KACXE,iBAAkB,GAClBP,SAAU,KACViR,cAAe,IAmBJC,GAhBO,WAAgC,IAA/Bxe,EAA8B,uDAAtBke,GAAWtB,EAAW,uCACjD,OAAQA,EAAO/T,MACX,IAAK,4BACD,OAAO,2BAAK7I,GAAZ,IAAmBsN,SAAUsP,EAAOhV,UAExC,IAAK,6BACD,OAAO,2BAAK5H,GAAZ,IAAmB2N,UAAWiP,EAAOhV,UAEzC,IAAK,oCACD,IAAIiG,EAAgB,aAAO+O,EAAOhV,SAClC,OAAO,2BAAK5H,GAAZ,IAAmB6N,iBAAkBA,IAEzC,QACI,OAAO7N,ICpBbye,GAAc,CAChBve,WAAY,CACR8a,gBAAiB,UACjB0D,gBAAiB,oDAErBtR,SAAU,CAAE,WAAc,6NAC1B7M,aAAc,CACVoe,WAAY,UACZ3F,MAAO,mBAEXvY,eAAgB,CACZua,gBAAiB,WAErBlK,WAAY,CACR8N,OAAQ,oBAEZpR,gBAAiB,CACboR,OAAQ,+BACRC,UAAW,sCAEf9D,OAAQ,CACJC,gBAAiB,UACjBhC,MAAO,QAEX8F,MAAO,CACHC,QAAS,OACTH,OAAQ,qBAIVI,GAAY,CACd9e,WAAY,CACRye,WAAY,6FAEhBvR,SAAU,CAAE,WAAc,8OAC1B7M,aAAc,CACVoe,WAAY,UACZ3F,MAAO,mBAEXvY,eAAgB,CACZua,gBAAiB,WAErBlK,WAAY,CACR8N,OAAQ,qBAEZpR,gBAAiB,CACboR,OAAQ,oBACRC,UAAW,2BAEf9D,OAAQ,CACJC,gBAAiB,UACjBhC,MAAO,QAEX8F,MAAO,CACHC,QAAS,OACTH,OAAQ,qBAIVK,GAAc,CAChB/e,WAAY,CAAE,WAAc,6EAC5BkN,SAAU,CAAE,WAAc,uIAC1B7M,aAAc,CACVoe,WAAY,UACZ3F,MAAO,mBAEXvY,eAAgB,CACZua,gBAAiB,WAErBlK,WAAY,CACR8N,OAAQ,qBAEZpR,gBAAiB,CACboR,OAAQ,oBACRC,UAAW,2BAEf9D,OAAQ,CACJC,gBAAiB,UACjBhC,MAAO,QAEX8F,MAAO,CACHC,QAAS,OACTH,OAAQ,qBAmBDM,GAfM,WAAgC,IAA/Blf,EAA8B,uDAAtBgf,GAAWpC,EAAW,uCAChD,OAAQA,EAAO/T,MACX,IAAK,yBACD,OAAO4V,GAEX,IAAK,uBACD,OAAOO,GAEX,IAAK,yBACD,OAAOC,GAEX,QACI,OAAOjf,ICxFJmf,GALKC,aAAgB,CAChCtf,MAAOof,GACP7I,YAAa+H,GACbrP,WAAYyP,KCJDlb,GADD+b,aAAYF,ICK1BG,IAASzD,OACP,cAAC,IAAD,CAAUvY,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFqG,SAAS4V,eAAe,SAM1B7B,M","file":"static/js/main.3936c640.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport \"./Layout.css\";\r\n\r\nconst Layout = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_grid-container\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Header = ({ children }) => {\r\n    const style = useSelector(state => state.style);\r\n    return (\r\n        <div className=\"pg_mm_header\" id=\"pg_mm_header-menu\">\r\n            <ul style={style.headerMenu}>\r\n                {children}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst HeaderItem = ({ onClick, title, selected }) => {\r\n    const style = useSelector(state => state.style);\r\n\r\n    if (title === \"Settings\") {\r\n        return <p onClick={() => onClick(title)} className='pg_mm_settings_menu_item unselectable'>⚙</p>\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <span\r\n                className=\"unselectable\"\r\n                style={selected === title ? style.menuSelected : {}}\r\n                onClick={() => onClick(title)}>\r\n                {title}\r\n            </span>\r\n        </li>\r\n    );\r\n}\r\n\r\nHeader.Item = HeaderItem;\r\n\r\nconst SiderBar = ({ children }) => {\r\n    const style = useSelector(state => state.style);\r\n    return (\r\n        <div\r\n            style={style.leftBackground}\r\n            className=\"pg_mm_left pg_mm_scroll\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst RightContent = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_right pg_mm_scroll\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MiddleContent = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_mid pg_mm_scroll\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst FullContent = ({ children }) => {\r\n    return (\r\n        <div className=\"pg_mm_content_full\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Fooder = () => {\r\n\r\n}\r\n\r\nLayout.Header = Header;\r\nLayout.SiderBar = SiderBar;\r\nLayout.RightContent = RightContent;\r\nLayout.MiddleContent = MiddleContent;\r\nLayout.FullContent = FullContent;\r\nLayout.Fooder = Fooder;\r\nexport default Layout;\r\n","export const RequestAPI = (function () {\r\n    let baseUrl = null;\r\n    let timeout = 10000;\r\n    let headers = {};\r\n\r\n    function makeRequestConfig(inp) {\r\n        if (!inp) return {};\r\n\r\n        let configs = {\r\n            headers: headers,\r\n            method: inp.method\r\n        }\r\n\r\n        if (inp.signal) {\r\n            configs = { ...configs, signal: inp.signal };\r\n        }\r\n\r\n        if (inp.data) {\r\n            configs = { ...configs, body: inp.data };\r\n        }\r\n        return configs;\r\n    }\r\n\r\n    async function sendRequest(url, configs) {\r\n        let json = await fetch(url, configs, timeout).then(function (response) {\r\n            if (!response.ok) {\r\n                throw new Error(response.status);\r\n            } else {\r\n                return response.json();\r\n            }\r\n        }).catch(err => {\r\n            throw new Error(err);\r\n        });\r\n        return json;\r\n    }\r\n\r\n    function config(configs = { base_url: \"\", timeout: 10000, in_headers: {} }) {\r\n        baseUrl = configs.base_url;\r\n        timeout = configs.timeout;\r\n        headers = configs.in_headers;\r\n\r\n        console.log(\"Request config \", baseUrl, timeout);\r\n    }\r\n\r\n    async function request(inp) {\r\n        // Make config request\r\n        let url = baseUrl + inp.url.replaceAll(\"//\", \"/\");\r\n        url = url.trim();\r\n        url = encodeURI(url);\r\n        let requestConfig = makeRequestConfig(inp);\r\n\r\n        return await sendRequest(url, requestConfig);\r\n    }\r\n\r\n    return {\r\n        add_config: config,\r\n        exe: request\r\n    };\r\n})();","class CacheManager {\r\n    constructor(key, expire = null) {\r\n        this.key = key;\r\n        this.expire = expire;\r\n        this.items = this.getAll();\r\n    }\r\n\r\n    add(key, value) {\r\n        if (key) {\r\n            this.items = { ...this.items, [key]: value }\r\n            // console.log('[CacheManager] add: ', key, this.items);\r\n        }\r\n        this.store();\r\n    }\r\n\r\n    del(key) {\r\n        if (key) {\r\n            delete this.items[key];\r\n        }\r\n        this.store();\r\n    }\r\n\r\n    has(key) {\r\n        return this.items.hasOwnProperty(key);\r\n    }\r\n\r\n    store() {\r\n        localStorage.setItem(this.key, JSON.stringify(this.items));\r\n        localStorage.setItem(this.key + ':ts', new Date().getTime());\r\n    }\r\n\r\n    get(key) {\r\n        let all = this.getAll();\r\n        return all[key];\r\n    }\r\n\r\n    getAll() {\r\n        let stored = localStorage.getItem(this.key);\r\n        return (this.isExpired() || !stored) ?\r\n            {} :\r\n            JSON.parse(stored);\r\n    }\r\n\r\n    isExpired() {\r\n        let whenCached = localStorage.getItem(this.key + ':ts')\r\n        let age = (new Date().getTime() - whenCached);\r\n\r\n        if (this.expire && age > this.expire) {\r\n            this.clear();\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        localStorage.removeItem(this.key)\r\n        localStorage.removeItem(this.key + ':ts')\r\n    }\r\n}\r\n\r\n/**\r\n * Caches objects as singletons. Alternative, can ignore this.items and just load\r\n * always from localStorage.\r\n * @type {Object}\r\n */\r\n\r\nlet cache = {};\r\n/**\r\n * [getSingleton description]\r\n * @method getSingleton\r\n * @param  {string}     key           Key for localStorage\r\n * @param  {Number}     [expire=null] Expiration time in seconds\r\n * @param  {String}     [sep=',']     separator in case. Default: ,\r\n * @return {CacheManager}             A singleton of CacheCollection\r\n */\r\nfunction getSingleton(key, expire = null) {\r\n    if (!cache.hasOwnProperty(key)) {\r\n        cache[key] = new CacheManager(key, expire);\r\n    }\r\n    return cache[key];\r\n}\r\nexport { getSingleton, CacheManager };","import { Base64 } from 'js-base64';\r\n\r\nexport class StringUtils {\r\n    static EMPTY = \"\";\r\n\r\n    /**\r\n     * Check whether a string is null or empty.\r\n     * @param str value\r\n     * @returns true : if string is null or empty\r\n     */\r\n    static isNullOrEmpty(str) {\r\n        if (!str || str === null || str === StringUtils.EMPTY) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Encoding str to Base64\r\n     * @param str value\r\n     * @returns Base64 str\r\n     */\r\n    static base64Encode(str) {\r\n        if (!str || str === null) {\r\n            return null;\r\n        } else {\r\n            return Base64.encode(str);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Decode Base64 to str\r\n     * @param Base64 str\r\n     * @returns Value decode\r\n     */\r\n    static base64decode(str) {\r\n        if (!str || str === null) {\r\n            return null;\r\n        } else {\r\n            return Base64.decode(str);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Removes \" \", \"　\", and \\t from the beginning of the 'str'. Returns 'defaultStr' if 'str' is null\r\n     * or trimmed string is \"\".\r\n     *\r\n     * @param str\r\n     * @param defaultStr\r\n     * @return trimmed string\r\n     */\r\n    static trimL(str, defaultStr) {\r\n\r\n        let ret = str;\r\n\r\n        if (!ret || ret === null) {\r\n            ret = \"\";\r\n        }\r\n        // remove ' ', '　', '\\t'\r\n        while (ret.startsWith(\" \") || ret.startsWith(\"　\") || ret.startsWith(\"\\t\") || ret.startsWith(\"\\n\")) {\r\n            ret = ret.substring(1);\r\n        }\r\n\r\n        if (ret === \"\") {\r\n            ret = defaultStr;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Removes \" \", \"　\", and \\t from the end of the 'str'. Returns 'defaultStr' if 'str' is null or\r\n     * trimmed string is \"\".\r\n     *\r\n     * @param str\r\n     * @param defaultStr\r\n     * @return trimmed string\r\n     */\r\n    static trimR(str, defaultStr) {\r\n\r\n        let ret = str;\r\n\r\n        if (!ret || ret === null) {\r\n            ret = \"\";\r\n        }\r\n        // Delete \" \", \"　\", and \\t\r\n        while (ret.endsWith(\" \") || ret.endsWith(\"　\") || ret.endsWith(\"\\t\")) {\r\n            ret = ret.substring(0, ret.length() - 1);\r\n        }\r\n\r\n        if (ret === \"\") {\r\n            ret = defaultStr;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Removes \" \", \"　\", and \\t from both ends of the 'str'. Returns 'defaultStr' if 'str' is null or\r\n     * trimmed string is \"\".\r\n     *\r\n     * @param str\r\n     * @param defaultStr\r\n     * @return trimmed string\r\n     */\r\n    static trim(str, defaultStr) {\r\n\r\n        let ret = str;\r\n        // Delete \" \", \"　\", and \\t\r\n        ret = StringUtils.trimL(ret, defaultStr);\r\n        //ret = StringUtils.trimR(ret, defaultStr);\r\n\r\n        return ret;\r\n    }\r\n\r\n    static nonAccentVietnamese(str) {\r\n        str = str.toLowerCase();\r\n        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\r\n        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\r\n        str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\r\n        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\r\n        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\r\n        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\r\n        str = str.replace(/đ/g, \"d\");\r\n        // Some system encode vietnamese combining accent as individual utf-8 characters\r\n        str = str.replace(/\\u0300|\\u0301|\\u0303|\\u0309|\\u0323/g, \"\"); // Huyền sắc hỏi ngã nặng\r\n        str = str.replace(/\\u02C6|\\u0306|\\u031B/g, \"\"); // Â, Ê, Ă, Ơ, Ư\r\n        str = str.replace(/\\s/g, \"-\");\r\n        return str;\r\n    }\r\n\r\n    static truncateString(str, num) {\r\n        if (str.length > num) {\r\n            return str.slice(0, num) + \"...\";\r\n        } else {\r\n            return str;\r\n        }\r\n    }\r\n}","import { RequestAPI as request } from '../../Utils/RequestAPI';\r\nimport { getSingleton as LocalCache } from '../../Utils/CacheManager';\r\nimport { StringUtils } from '../../Utils/StringUtils';\r\n\r\nconst CACHE_KEY = \"pg_mm_settings\";\r\nconst cache = LocalCache(CACHE_KEY);\r\nconst REPOSITORY_SOURCE = cache.has(\"urlRepository\")\r\n    ? cache.get(\"urlRepository\").replaceAll(\"https://github.com/\", \"\")\r\n    : \"\";\r\n\r\nconst TIME_OUT = cache.has(\"requestTimeout\") ? \"Token \" + cache.get(\"requestTimeout\") : \"\";\r\nconst TOKEN_KEY = cache.has(\"accessKey\") ? cache.get(\"accessKey\") : \"\";\r\nconst USE_NAME = cache.has(\"userName\") ? \"Token \" + cache.get(\"userName\") : \"\";\r\nconst E_MAIL = cache.has(\"email\") ? \"Token \" + cache.get(\"email\") : \"\";\r\n\r\nlet config = {\r\n    base_url: \"https://api.github.com\",\r\n    timeout: TIME_OUT,\r\n    in_headers: {\r\n        Accept: \"application/vnd.github.v3+json\",\r\n    }\r\n};\r\n\r\nif (TOKEN_KEY && !StringUtils.isNullOrEmpty(TOKEN_KEY)) {\r\n    config = {\r\n        ...config,\r\n        in_headers: {\r\n            ...config.in_headers,\r\n            Authorization: \"Token \" + TOKEN_KEY\r\n        }\r\n    }\r\n}\r\nconsole.log(\"Config: \", config);\r\n\r\n// Request config\r\nrequest.add_config(config);\r\n\r\nconst author = {\r\n    name: USE_NAME,\r\n    email: E_MAIL\r\n}\r\n\r\n// Export API\r\n/**\r\n * Search file match keyword result from Github repository\r\n * @param {String} key Keyword for search code\r\n * @returns Object Search file and infomation file\r\n */\r\nexport async function searchFromGitHub(key, signal) {\r\n    let result = await request.exe({\r\n        url: `/search/code?q=${key}+repo:${REPOSITORY_SOURCE}`,\r\n        method: \"GET\",\r\n        signal: signal\r\n    }).catch(err => {\r\n        console.log(err);\r\n        return [];\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Get all infomation from path resource\r\n * @param {String} path Path to resource\r\n * @returns Object\r\n */\r\nexport async function readContentByPath(path, signal) {\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${path}`,\r\n        method: \"GET\",\r\n        signal: signal\r\n    }).catch(err => {\r\n        throw err;\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n *  Get user information from Github\r\n * @param username\r\n * @returns tree \r\n */\r\nexport async function getUser(username) {\r\n    var url = username ? '/users/' + username : '/user';\r\n    let result = await request.exe({\r\n        url: url,\r\n        method: \"GET\",\r\n    }).catch(err => {\r\n        return null;\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Save a file into Git repository\r\n * @param {Object} data Content of file, encode Base64 \r\n * @param {String} filePath Path to file location\r\n * @returns \r\n */\r\nexport function save(data = {\r\n    message: 'Add file',\r\n    content: 'KEVtcHR5KQ==', // (Empty)\r\n}, filePath) {\r\n    return request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${filePath}`,\r\n        method: \"PUT\",\r\n        data: JSON.stringify(data)\r\n    });\r\n}\r\n\r\n/**\r\n * Update content of file in Github\r\n * @param {Object} data Content of file, encode Base64 \r\n * @param {String} filePath Path to file location\r\n * @returns \r\n */\r\nexport function updateContent(data = {\r\n    message: 'Update content', // (Empty)\r\n    content: 'KEVtcHR5KQ==',\r\n    sha: ''\r\n}, filePath) {\r\n    return request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/contents/${filePath}`,\r\n        method: \"PUT\",\r\n        data: JSON.stringify(data)\r\n    });\r\n}\r\n\r\n/**\r\n * Get a particular reference\r\n * @param {*} ref heads/branch\r\n * @returns sha\r\n */\r\nexport async function getRef(ref = \"heads/main\") {\r\n    // repos/cuongphuong/memo_data/git/refs/heads/main\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/refs/${ref}`,\r\n        method: \"GET\"\r\n    });\r\n\r\n    return result.object.sha;\r\n};\r\n\r\n/**\r\n * Retrieve the tree a commit points to\r\n * @param {String} sha  ex: 76ba6ba67867c6069cbb9c377a0a2c909145c778?recursive=true\r\n * @returns tree \r\n */\r\nexport async function getTree(sha = \"\") {\r\n    // repos/cuongphuong/memo_data/git/trees/76ba6ba67867c6069cbb9c377a0a2c909145c778\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/trees/${sha}`,\r\n        method: \"GET\"\r\n    });\r\n\r\n    return result.tree;\r\n};\r\n\r\n/**\r\n *  Post a new tree object having a file path pointer replaced with a new blob SHA getting a tree SHA back\r\n * @param {Array} tree  Tree\r\n * @returns tree \r\n */\r\nexport async function postTree(tree, base_tree) {\r\n    if (!tree) return;\r\n\r\n    let payload = { tree: tree };\r\n\r\n    if (base_tree) payload = { ...payload, base_tree: base_tree }\r\n\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/trees`,\r\n        method: \"POST\",\r\n        data: JSON.stringify(payload)\r\n    });\r\n    return result.sha;\r\n};\r\n\r\n/**\r\n * Create a new commit object with the current commit SHA as the parent and the new tree SHA, getting a commit SHA back\r\n * \r\n */\r\nexport async function commit(parent, tree, message) {\r\n    let userData = getUser(author.name);\r\n    if (!userData) return;\r\n    let data = {\r\n        message: message,\r\n        author: author,\r\n        parents: [\r\n            parent\r\n        ],\r\n        tree: tree\r\n    }\r\n\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/commits`,\r\n        method: 'POST',\r\n        data: JSON.stringify(data)\r\n    }).catch(err => {\r\n        return null;\r\n    });\r\n    return result.sha;\r\n}\r\n\r\nexport async function updateHead(head, commit) {\r\n    let result = await request.exe({\r\n        url: `/repos/${REPOSITORY_SOURCE}/git/refs/heads/` + head,\r\n        method: 'PATCH',\r\n        data: JSON.stringify({\r\n            sha: commit\r\n        })\r\n    }).catch(err => {\r\n        return null;\r\n    });\r\n    return result;\r\n}\r\n","import * as request from \"../API/Github/Request\";\r\nimport { StringUtils } from \"./StringUtils\";\r\n\r\n/**\r\n * Get all infomation from path resource\r\n * @param {String} path Path to resource\r\n * @returns Object\r\n */\r\nexport function readContent(path) {\r\n    return request.readContentByPath(path);\r\n}\r\n\r\n/**\r\n * Save a file into Git repository\r\n * @param {Object} data Content of file, encode Base64\r\n * @param {String} filePath Path to file location\r\n * @returns\r\n */\r\nexport function create(data = {\r\n    message: 'Add file',\r\n    content: 'KEVtcHR5KQ==', // (Empty)\r\n}, filePath) {\r\n    return request.save(data, filePath);\r\n}\r\n\r\n/**\r\n * Update content of file in Github\r\n * @param {Object} data Content of file, encode Base64\r\n * @param {String} filePath Path to file location\r\n * @returns\r\n */\r\nexport async function update(data = {\r\n    message: 'Add file',\r\n    content: 'KEVtcHR5KQ==', // (Empty)\r\n}, filePath) {\r\n\r\n    // Get last SHA version on Github\r\n    let dataAPI = await request.readContentByPath(filePath);\r\n    if (dataAPI === null) return;\r\n    let lastSha = dataAPI.sha;\r\n    data.sha = lastSha;\r\n    return request.updateContent(data, filePath);\r\n}\r\n\r\n/**\r\n * Delete a file \r\n * @param {String} filePath path to file will delete\r\n */\r\nexport function deleteFile(filePath) {\r\n    return move(\"main\", filePath);\r\n}\r\n\r\n/**\r\n * Move || remove a file to a new location\r\n * @param {String} branch master \r\n * @param {String} path \r\n * @param {String} newPath not existed then remove path\r\n * @returns true if move successfully\r\n */\r\nexport async function move(branch = \"main\", path, newPath) {\r\n    // Get last SHA of main branch\r\n    let latestCommit = await request.getRef(\"heads/main\");\r\n    // Get tree by last SHA\r\n    let tree = await request.getTree(latestCommit + '?recursive=true');\r\n    // Update tree\r\n    tree.forEach(function (ref) {\r\n        if ((!newPath || StringUtils.isNullOrEmpty(newPath)) && ref.path === path) {\r\n            ref.isDeleted = true;\r\n        } else {\r\n            if (ref.path === path) ref.path = newPath;\r\n        }\r\n\r\n        if (ref.type === \"tree\") {\r\n            ref.isDeleted = true;\r\n        }\r\n    });\r\n\r\n    tree = tree.filter(p => !p.isDeleted);\r\n    // Post update tree to API\r\n    let rootTree = await request.postTree(tree);\r\n    // Create a commit\r\n    let commit_msg = (!newPath || StringUtils.isNullOrEmpty(newPath))\r\n        ? \"Remove \" + path\r\n        : \"Move \" + path + \" to \" + newPath;\r\n    let commit = await request.commit(latestCommit, rootTree, commit_msg);\r\n    // Update HEAD to new commit\r\n    let result = await request.updateHead(branch, commit);\r\n    return result != null;\r\n}","import React from 'react'\r\nimport { NotificationManager } from 'react-notifications';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport { deleteFile } from '../Utils/GithubCRUD';\r\nimport \"./Viewer.css\";\r\n\r\nexport default function Viewer(props) {\r\n\r\n    let { source } = props;\r\n\r\n    React.useEffect(() => {\r\n        return () => {\r\n        }\r\n    }, [props.isPopupView])\r\n\r\n    function onEdit() {\r\n        props.onEdit(props.source.filePath);\r\n    }\r\n\r\n    async function onDelete() {\r\n        if (!window.confirm(\"Do you want to delete \" + props.source.filePath) === true) {\r\n            return;\r\n        }\r\n        try {\r\n            await deleteFile(props.source.filePath);\r\n            NotificationManager.info(\"Deleted.\");\r\n            props.onDelete(true);\r\n        } catch (err) {\r\n            props.onDelete(false);\r\n        }\r\n    }\r\n\r\n    async function handleCopyLink() {\r\n        // Make link\r\n        let link = document.URL + \"?key=\" + source.id;\r\n\r\n        await navigator.clipboard.writeText(link);\r\n        NotificationManager.info(\"Copied: \" + link);\r\n    }\r\n\r\n    return (\r\n        <section className=\"section sec-html visible\">\r\n            <span onClick={onEdit} className=\"pg_mm_view_edit_button\">Edit [/]</span>\r\n            <span onClick={onDelete} className=\"pg_mm_view_delete_button\">Delete [#]</span>\r\n            {\r\n                props.isPopupView ?\r\n                    <span onClick={() => { props.onClose() }} className=\"pg_mm_view_cls_button\">Close [x]</span>\r\n                    :\r\n                    \"\"\r\n            }\r\n            <div className=\"section-container html-wrap\">\r\n                <div className=\"custom-html-style\">\r\n                    <h2 style={{ margin: '5px 0' }}>\r\n                        {source.title}\r\n                        <img onClick={handleCopyLink}\r\n                            style={{ marginLeft: 10, cursor: 'pointer' }}\r\n                            src='/memo/icon/copy.png'\r\n                            width={20}\r\n                            alt='copy'\r\n                        />\r\n                    </h2>\r\n                    {source.title ? <hr style={{ margin: '10px 0' }} /> : ''}\r\n                    <div className='pg_mm_view_content'>\r\n                        <ReactMarkdown children={source.content} remarkPlugins={[remarkGfm]} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import { searchFromGitHub, readContentByPath } from \"../API/Github/Request\";\r\nimport { StringUtils } from \"./StringUtils\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { NotificationManager } from 'react-notifications';\r\nexport class ContentRender {\r\n    // Delimiter between config and content\r\n    static DEFAULT_DELIMITER = \"---\";\r\n\r\n    /**\r\n     * Get content list from keyword search\r\n     * @param {String} str Keyword for search\r\n     * @returns List of content search\r\n     */\r\n    static async search(str, signal) {\r\n        if (StringUtils.isNullOrEmpty(str)) {\r\n            console.log(\"Search keyword is empty\");\r\n            return;\r\n        }\r\n\r\n        let apiResult\r\n        try {\r\n            apiResult = await searchFromGitHub(str, signal);\r\n            let totalCount = apiResult.total_count;\r\n\r\n            if (!totalCount) {\r\n                console.log(`No file mapping result key [${str}]`);\r\n                NotificationManager.info(`No file mapping result key [${str}]`);\r\n                return;\r\n            }\r\n        } catch (error) {\r\n            NotificationManager.console.warning(\"Not response data from API.\");\r\n            console.error(\"Not response data from API.\");\r\n            return;\r\n        }\r\n\r\n        let items = apiResult.items;\r\n        let pathFileList = new Set();\r\n        let postObjectList = [];\r\n\r\n        await Promise.all(items.map(async (item) => {\r\n            if (pathFileList.has(item.path)) {\r\n                return;\r\n            }\r\n\r\n            pathFileList.add(item.path);\r\n            let contentObject = await ContentRender.makeContentObject(item.path);\r\n            if (contentObject !== null) {\r\n                postObjectList = [...postObjectList, contentObject];\r\n            }\r\n        }));\r\n\r\n        return postObjectList;\r\n    }\r\n\r\n    /**\r\n     * Call to github content for get content file from file path\r\n     * @param {String} filePath Path to file on Github\r\n     * @returns Content object from JSON content\r\n     */\r\n    static async makeContentObject(filePath, signal) {\r\n        // Is invalid path\r\n        if (!filePath) {\r\n            return;\r\n        }\r\n\r\n        filePath = filePath.trim();\r\n        let apiContentResult = await readContentByPath(filePath, signal);\r\n        let contentObject = {};\r\n        if (apiContentResult && !StringUtils.isNullOrEmpty(apiContentResult.content)) {\r\n            let base64Content = apiContentResult.content;\r\n            let decodeContent = Base64.decode(base64Content);\r\n\r\n            // Get index of str delimiter config and content\r\n            let index = decodeContent.indexOf(ContentRender.DEFAULT_DELIMITER, 1);\r\n            if (index === -1) {\r\n                console.log(`Content file ${filePath} is invalid.`)\r\n                return null;\r\n            }\r\n            let cfgAreaStr = decodeContent.substring(0, index + ContentRender.DEFAULT_DELIMITER.length);\r\n            let contentAreaStr = decodeContent.substring(index + ContentRender.DEFAULT_DELIMITER.length);\r\n\r\n            let configs = ContentRender.makeConfigFromResult(cfgAreaStr);\r\n            let content = StringUtils.trim(contentAreaStr);\r\n            contentObject = { ...configs, content };\r\n            contentObject = { ...contentObject, filePath: filePath };\r\n\r\n            return contentObject;\r\n        } else {\r\n            console.log(\"Can't load data for \" + filePath);\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Make config object from content file result from API\r\n     * @param {Strng} str Config area from API result to objectt\r\n     * @returns Object configs\r\n     */\r\n    static makeConfigFromResult(str) {\r\n        const regex = /^[a-zA-Z]+:(.*)$/gm;\r\n        let m;\r\n\r\n        let configs = {};\r\n        while ((m = regex.exec(str)) !== null) {\r\n            if (m.index === regex.lastIndex) {\r\n                regex.lastIndex++;\r\n            }\r\n\r\n            let mathItems = m[0].split(\":\");\r\n            let configKey = StringUtils.trim(mathItems[0]);\r\n            let configValue = StringUtils.trim(mathItems[1]);\r\n\r\n            configs = { ...configs, [configKey]: configValue };\r\n        }\r\n        return configs;\r\n    }\r\n\r\n    /**\r\n     * Get on category level 1 on Github repository\r\n     * @param {String} path path to resource\r\n     * @returns Array All categorys on level 1\r\n     */\r\n    static async getAllCategoryList(path, signal) {\r\n        let result = await readContentByPath(path, signal);\r\n        if (!result || !Array.isArray(result) || result.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        let categoryList = [];\r\n        result.forEach(item => {\r\n            if (item.type === \"dir\" && !StringUtils.isNullOrEmpty(item.name)) {\r\n                categoryList = [...categoryList, item.name];\r\n            }\r\n        });\r\n\r\n        return categoryList;\r\n    }\r\n\r\n    /**\r\n     * Get file, dir from path resource in Git repository\r\n     * @param {String} path Path to resource for get data\r\n     * @returns Object File and Dir from resource\r\n     */\r\n    static async getAllItemFromPath(path) {\r\n        let result = await readContentByPath(path);\r\n\r\n        if (!result || !Array.isArray(result) || result.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        let resultObject = {\r\n            itemList: []\r\n        };\r\n\r\n        result.forEach(item => {\r\n            if (item.type === \"dir\" && !StringUtils.isNullOrEmpty(item.name)) {\r\n                resultObject = { ...resultObject, [item.name]: { hasContnent: false } }\r\n            }\r\n\r\n            if (item.type === \"file\" && !StringUtils.isNullOrEmpty(item.name)) {\r\n                resultObject = {\r\n                    ...resultObject, itemList: [...resultObject.itemList, {\r\n                        name: item.name,\r\n                        path: item.path\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n        return resultObject;\r\n    }\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction List({ children }) {\r\n    return (\r\n        <div className=\"pg_mm_list\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ListItem({ source = {\r\n    title: \"n/a\",\r\n    content: \"n/a\",\r\n    id: \"n/a\",\r\n    category: \"n/a\"\r\n}, handleChooseItem, activeId }) {\r\n    const style = useSelector(state => state.style);\r\n\r\n    function handleClick() {\r\n        handleChooseItem(source);\r\n    }\r\n\r\n    function isActive() {\r\n        if (activeId === source.id) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function truncPathListItem(strPath) {\r\n        // let tmpPathList = strPath.split(\"/\");\r\n        // tmpPathList = tmpPathList.filter(p => !StringUtils.isNullOrEmpty(p));\r\n        // return tmpPathList.pop();\r\n        return strPath;\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={isActive() ? style.borderLineHover : {}}\r\n            className={isActive() ? \"pg_mm_list_item pg_mm_list_item_active\" : \"pg_mm_list_item\"}\r\n            onClick={handleClick}\r\n        >\r\n            <h3 className=\"pg_mm_trunc\">{source.title}</h3>\r\n            <p className=\"pg_mm_trunc\">{source.content}</p>\r\n            <div className=\"pg_mm_list_item_info\">\r\n                {/* <span className=\"pg_mm_trunc\">{`${source.id}`}</span> */}\r\n                <span\r\n                    style={style.category}\r\n                    className=\"pg_mm_trunc\">{truncPathListItem(source.category)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nList.Item = ListItem;\r\nexport default List;","export const setActiveId = (activeId) => {\r\n    return {\r\n        type: \"SearchReducer/setActiveId\",\r\n        payload: activeId\r\n    }\r\n}\r\n\r\nexport const setMdContent = (mdContent) => {\r\n    return {\r\n        type: \"SearchReducer/setMdContent\",\r\n        payload: mdContent\r\n    }\r\n}\r\n\r\nexport const setSearchResultList = (searchResultList) => {\r\n    return {\r\n        type: \"SearchReducer/setSearchResultList\",\r\n        payload: searchResultList\r\n    }\r\n}","import { getSingleton as LocalCache } from \"./CacheManager\";\r\n\r\nconst SEARCH_CACHE_KEY = \"pg_mm_search\";\r\nconst searchCache = LocalCache(SEARCH_CACHE_KEY, null);\r\n\r\nconst SearchHistoryCache = (function () {\r\n    function getTopKeyWord() {\r\n        let allItem = searchCache.getAll();\r\n        let keysSorted = Object.keys(allItem).sort(function (a, b) {\r\n            return allItem[b] - allItem[a]\r\n        });\r\n        return keysSorted;\r\n    }\r\n\r\n    function insertKey(key) {\r\n        let allItem = searchCache.getAll();\r\n        if (Object.keys(allItem).length >= 10) {\r\n            removeMinItem(allItem);\r\n        }\r\n\r\n        if (searchCache.has(key)) {\r\n            let value = searchCache.get(key);\r\n            searchCache.add(key, ++value);\r\n        } else {\r\n            searchCache.add(key, 1);\r\n        }\r\n    }\r\n\r\n    function removeMinItem(allItem) {\r\n        let keysSorted = Object.keys(allItem).sort(function (a, b) {\r\n            return allItem[a] - allItem[b]\r\n        });\r\n        console.log(keysSorted[0]);\r\n        searchCache.del(keysSorted[0]);\r\n    }\r\n\r\n    return {\r\n        getTopKeyWord: getTopKeyWord,\r\n        insertKey: insertKey\r\n    };\r\n})();\r\n\r\nexport default SearchHistoryCache;","import React, { useState, useRef, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport Viewer from '../ViewComponents/Viewer';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\nimport List from '../ViewComponents/List';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setActiveId, setMdContent, setSearchResultList } from '../Actions/SearchReducer';\r\nimport SearchHistoryCache from '../Utils/SearchHistoryCache';\r\nimport { StringUtils } from '../Utils/StringUtils';\r\n\r\nfunction QuickSearchTab(props) {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    const style = useSelector(state => state.style);\r\n\r\n    // Logic state\r\n    const dispatch = useDispatch();\r\n    const searchResultList = useSelector(state => state.searchData.searchResultList);\r\n    const mdContent = useSelector(state => state.searchData.mdContent);\r\n    const activeId = useSelector(state => state.searchData.activeId);\r\n\r\n    // UI state\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [searchCacheList, setSearchCacheList] = useState([]);\r\n    const inputObj = useRef(null);\r\n    const typingTimer = useRef(null); // timer identifier \r\n    let doneTypingInterval = 600;  // time in ms (600ms)\r\n\r\n    useEffect(() => {\r\n        async function searchByPramater() {\r\n            const queryParams = new URLSearchParams(window.location.search);\r\n            let keyword = queryParams.get('key');\r\n\r\n            // Loại bỏ ID keyword\r\n            if (keyword && keyword.toUpperCase().startsWith(\"ID:\")) {\r\n                keyword = keyword.substring(3);\r\n            }\r\n\r\n            if (!StringUtils.isNullOrEmpty(keyword)) {\r\n                inputObj.current.value = \"ID:\" + keyword;\r\n            }\r\n\r\n            // Set Input\r\n            refController.current = new AbortController();\r\n            let signal = refController.current.signal;\r\n            // fetch API\r\n            setIsProcessing(true);\r\n            let apiResultContentList = await ContentRender.search(keyword, signal);\r\n            if (apiResultContentList && apiResultContentList.length > 0) {\r\n                SearchHistoryCache.insertKey(keyword);\r\n                dispatch(setSearchResultList(apiResultContentList));\r\n\r\n                if (apiResultContentList.length > 0) {\r\n                    dispatch(setActiveId(apiResultContentList[0].id));\r\n                    dispatch(setMdContent(apiResultContentList[0]));\r\n                }\r\n            }\r\n            setIsProcessing(false);\r\n        }\r\n\r\n        refController.current = new AbortController();\r\n        inputObj.current.focus();\r\n\r\n        // Load cache\r\n        let cacheKeywordList = SearchHistoryCache.getTopKeyWord();\r\n        setSearchCacheList(cacheKeywordList);\r\n\r\n        searchByPramater();\r\n\r\n        return () => {\r\n            window.history.replaceState(\"\", \"\", \"\");\r\n            refController.current.abort();\r\n        }\r\n    }, [dispatch])\r\n\r\n    function handleSearchChange(evt) {\r\n        clearTimeout(typingTimer.current);\r\n        //\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        typingTimer.current = setTimeout(function () {\r\n            if (signal.aborted) {\r\n                return;\r\n            }\r\n            dispatch(setSearchResultList([]));\r\n            doneTyping(evt.target.value)\r\n        }, doneTypingInterval);\r\n    }\r\n\r\n    async function doneTyping(keyword) {\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        // fetch API\r\n        setIsProcessing(true);\r\n        let apiResultContentList = await ContentRender.search(keyword, signal);\r\n        if (apiResultContentList && apiResultContentList.length > 0) {\r\n            SearchHistoryCache.insertKey(keyword);\r\n            dispatch(setSearchResultList(apiResultContentList));\r\n\r\n            if (apiResultContentList.length > 0) {\r\n                handleChooseItem(apiResultContentList[0]);\r\n            }\r\n        }\r\n        setIsProcessing(false);\r\n    }\r\n\r\n    function handleChooseItem(source) {\r\n        dispatch(setActiveId(source.id));\r\n        dispatch(setMdContent(source));\r\n    }\r\n\r\n    function onEdit(filePath) {\r\n        props.onEdit(filePath);\r\n    }\r\n\r\n    function onDelete(isSuccess) {\r\n        if (!isSuccess) {\r\n            alert(\"403 :((\");\r\n            return;\r\n        }\r\n\r\n        let newSearchList = searchResultList.filter(p => p.id !== mdContent.id);\r\n        dispatch(setMdContent(null));\r\n        dispatch(setSearchResultList(newSearchList));\r\n    }\r\n\r\n    function renderSearchList() {\r\n        return (\r\n            <>\r\n                {\r\n                    searchResultList.length > 0 ?\r\n                        <List>\r\n                            {searchResultList.map((item, index) => <List.Item activeId={activeId}\r\n                                handleChooseItem={handleChooseItem}\r\n                                key={index}\r\n                                source={item}\r\n                            />)}\r\n                        </List>\r\n                        :\r\n                        <img className='unselectable' width=\"100%\"\r\n                            src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/empty.png\"\r\n                            alt=\"empty\"\r\n                        />\r\n                }\r\n\r\n                {\r\n                    isProcessing ?\r\n                        <div className=\"pg_mm_search_loadding\">\r\n                            <img height=\"45px\"\r\n                                style={{ position: 'absolute', top: 110 }}\r\n                                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                                alt=\"loadding...\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                        ''\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            <Layout.SiderBar>\r\n                <input\r\n                    list=\"cacheList\"\r\n                    style={style.borderLine}\r\n                    ref={inputObj}\r\n                    onChange={(evt) => { handleSearchChange(evt) }}\r\n                    type=\"text\"\r\n                    className=\"pg_mm_search_input\"\r\n                    placeholder=\"Type for search...\"\r\n                />\r\n                <img onClick={() => inputObj.current.value = \"\"}\r\n                    src='/memo/icon/clear.png'\r\n                    width={25}\r\n                    alt='copy'\r\n                    className='pg_mm_fixed_clearinput'\r\n                />\r\n                <datalist id=\"cacheList\">\r\n                    {searchCacheList.map((item, index) => <option key={index} value={item} />)}\r\n                </datalist>\r\n                <div style={{ marginTop: '5px' }}></div>\r\n                {renderSearchList()}\r\n            </Layout.SiderBar>\r\n            <Layout.RightContent>\r\n                {\r\n                    mdContent !== null ?\r\n                        <Viewer\r\n                            onEdit={onEdit}\r\n                            onDelete={onDelete}\r\n                            source={mdContent}\r\n                        /> : \"\"\r\n                }\r\n\r\n                <div className='pg_mm_logo unselectable'>\r\n                    <img width=\"350px\"\r\n                        src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/logo.png\"\r\n                        alt=\"loadding...\"\r\n                    />\r\n                </div>\r\n            </Layout.RightContent>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(QuickSearchTab);","import { getSingleton as LocalCache } from \"./CacheManager\";\r\n\r\nconst CACHE_KEY = \"pg_mm_settings\";\r\nconst settingsCache = LocalCache(CACHE_KEY);\r\n\r\nconst SettingsCache = (function () {\r\n\r\n    function getCacheTime() {\r\n        if (settingsCache.has(\"cacheTime\"))\r\n            return settingsCache.get(\"cacheTime\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setCacheTimeMinute(cacheTime) {\r\n        settingsCache.add(\"cacheTime\", (cacheTime * 60000));\r\n    }\r\n\r\n    function getUrlRepository() {\r\n        if (settingsCache.has(\"urlRepository\"))\r\n            return settingsCache.get(\"urlRepository\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setUrlRepository(urlRepository) {\r\n        settingsCache.add(\"urlRepository\", urlRepository);\r\n    }\r\n\r\n    function getRequestTimeout() {\r\n        if (settingsCache.has(\"requestTimeout\"))\r\n            return settingsCache.get(\"requestTimeout\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setRequestTimeout(requestTimeout) {\r\n        settingsCache.add(\"requestTimeout\", requestTimeout);\r\n    }\r\n\r\n    function getAccessKey() {\r\n        if (settingsCache.has(\"accessKey\"))\r\n            return settingsCache.get(\"accessKey\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setAccessKey(accessKey) {\r\n        settingsCache.add(\"accessKey\", accessKey);\r\n    }\r\n\r\n    function getUserName() {\r\n        if (settingsCache.has(\"userName\"))\r\n            return settingsCache.get(\"userName\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setUserName(userName) {\r\n        settingsCache.add(\"userName\", userName);\r\n    }\r\n\r\n    function getEmail() {\r\n        if (settingsCache.has(\"email\"))\r\n            return settingsCache.get(\"email\");\r\n        else\r\n            return null;\r\n    }\r\n\r\n    function setEmail(email) {\r\n        settingsCache.add(\"email\", email);\r\n    }\r\n\r\n    function getCacheMinutes() {\r\n        let millis = getCacheTime();\r\n        if (!millis) return 0;\r\n        return (millis / 60000).toFixed();\r\n    }\r\n\r\n    function setTheme(theme) {\r\n        settingsCache.add(\"theme\", theme);\r\n    }\r\n\r\n    function getTheme() {\r\n        if (settingsCache.has(\"theme\"))\r\n            return settingsCache.get(\"theme\");\r\n        else\r\n            return \"blue\";\r\n    }\r\n\r\n    return {\r\n        getCacheTime: getCacheTime,\r\n        setCacheTimeMinute: setCacheTimeMinute,\r\n        getUrlRepository: getUrlRepository,\r\n        getRequestTimeout: getRequestTimeout,\r\n        setUrlRepository: setUrlRepository,\r\n        setRequestTimeout: setRequestTimeout,\r\n        getAccessKey: getAccessKey,\r\n        setAccessKey: setAccessKey,\r\n        getUserName: getUserName,\r\n        setUserName: setUserName,\r\n        getEmail: getEmail,\r\n        setEmail: setEmail,\r\n        getCacheMinutes: getCacheMinutes,\r\n        setTheme: setTheme,\r\n        getTheme: getTheme\r\n    };\r\n})();\r\n\r\nexport default SettingsCache;","import { getSingleton as LocalCache } from \"./CacheManager\";\r\nimport SettingsCache from \"./SettingsCache\";\r\nimport { StringUtils } from \"./StringUtils\";\r\n\r\nconst CATEGORY_CACHE_KEY = \"pg_mm_category_cache\";\r\nlet categoryCache = LocalCache(CATEGORY_CACHE_KEY, SettingsCache.getCacheTime());\r\nconsole.log(\"Category Cache Time: \", SettingsCache.getCacheTime());\r\n\r\nconst CategoryListCache = (function () {\r\n\r\n    /**\r\n     * Check category is cached\r\n     * @returns true if has item in cache\r\n     */\r\n    function isCached() {\r\n        let trees = categoryCache.get(\"tree\");\r\n        return trees && trees.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Store trees from Github API into cache\r\n     * @param {Arrays} trees Using fetch tree Github API\r\n     */\r\n    function setOrUpdateCache(trees) {\r\n        if (trees) {\r\n            trees = trees.filter(p => !p.path.startsWith(\"Images/\") && p.path !== \"Images\");\r\n        }\r\n\r\n        categoryCache.add(\"tree\", trees);\r\n    }\r\n\r\n    /**\r\n     * Make main category list (root) from trees list\r\n     * @returns {Arrays} mainCategoryList \r\n     */\r\n    function getMainCategory() {\r\n        let trees = categoryCache.get(\"tree\");\r\n        if (!trees) return [];\r\n\r\n        let mainCategoryList = trees.filter(p => isMainCategory(p));\r\n        return mainCategoryList.map(p => p.path);\r\n    }\r\n\r\n    /**\r\n   * Make category list from input path in trees list\r\n   * @returns {Arrays} categoryList \r\n   */\r\n    function getElementByPath(path) {\r\n        let trees = categoryCache.get(\"tree\");\r\n        if (!trees) return [];\r\n\r\n        let categoryList = trees.filter(p => isExistedInPath(p, path));\r\n        return makeOutputList(categoryList);\r\n    }\r\n\r\n    // Private method\r\n    function isMainCategory(element) {\r\n        return !element.path.includes(\"/\") && element.type === \"tree\";\r\n    }\r\n\r\n    function isExistedInPath(element, path) {\r\n        let elementPath = element.path;\r\n\r\n        if (!elementPath.startsWith(path)) {\r\n            return false;\r\n        }\r\n\r\n        elementPath = elementPath.replace(path, \"\");\r\n        if (elementPath.startsWith(\"/\")) {\r\n            elementPath = elementPath.substring(1, elementPath.length);\r\n        }\r\n\r\n        if (StringUtils.isNullOrEmpty(elementPath) || elementPath.includes(\"/\")) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function makeOutputList(list) {\r\n        let categoryList = [];\r\n\r\n        list.forEach(element => {\r\n            let pathList = element.path.split(\"/\");\r\n\r\n            let item = {\r\n                name: pathList[pathList.length - 1], // last item\r\n                path: element.path,\r\n                type: element.type === \"tree\" ? \"dir\" : \"file\"\r\n            }\r\n            categoryList = [...categoryList, item];\r\n        });\r\n\r\n        return categoryList;\r\n    }\r\n\r\n    function updateDataIntoPath(path, newDataList) {\r\n        let correctPath = path + \"/\";\r\n        let trees = categoryCache.get(\"tree\");\r\n        if (!trees) trees = [];\r\n\r\n        let newTree = trees.filter(p => !p.path.startsWith(correctPath));\r\n        newDataList.forEach(element => {\r\n            newTree.push({\r\n                mode: \"\",\r\n                path: element.path,\r\n                sha: \"\",\r\n                type: element.type === \"dir\" ? \"tree\" : \"blob\",\r\n                url: \"\"\r\n            });\r\n        });\r\n\r\n        setOrUpdateCache(newTree);\r\n    }\r\n\r\n    return {\r\n        isCached: isCached,\r\n        setOrUpdateCache: setOrUpdateCache,\r\n        getMainCategory: getMainCategory,\r\n        getElementByPath: getElementByPath,\r\n        updateDataIntoPath: updateDataIntoPath\r\n    };\r\n})();\r\n\r\nexport default CategoryListCache;","import React from 'react';\r\nimport \"./CategoryList.css\";\r\n// import * as request from \"../API/Github/Request\";\r\nimport CategoryListCache from '../Utils/CategoryListCache';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\n\r\n/**\r\n * CategoryList =====================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================\r\n */\r\nfunction CategoryList({ children }) {\r\n\r\n    return (\r\n        <div className=\"pg_mm_category_list_main\">\r\n            <div className=\"section\" id=\"J1\" >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * Blockr\n */\r\nfunction Block(props) {\r\n    const [renderList, setRenderList] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let categoryList = CategoryListCache.getElementByPath(props.name);\r\n        setRenderList(categoryList);\r\n        return () => {\r\n        }\r\n    }, [props.name])\r\n\r\n    function renderItem() {\r\n        let dirList = renderList.filter(p => p.type === \"dir\");\r\n        let fileList = renderList.filter(p => p.type === \"file\");\r\n\r\n        return (\r\n            <>\r\n                {dirList.map((item, index) => <Row\r\n                    handleItemClick={props.handleItemClick}\r\n                    key={index}\r\n                    source={item}\r\n                />)}\r\n\r\n                {\r\n                    fileList.length > 0 ?\r\n                        <dl className=\"link-list\">\r\n                            {fileList.map((item, index) => <Item\r\n                                key={index}\r\n                                name={item.name}\r\n                                type={item.type}\r\n                                path={item.path}\r\n                                handleItemClick={props.handleItemClick}\r\n                            />)}\r\n                        </dl>\r\n                        :\r\n                        \"\"\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"section-inner\">\r\n                <h3 className=\"hd\">{props.name}</h3>\r\n                {renderItem()}\r\n            </div>\r\n            <div className=\"clear_float\"></div>\r\n        </>\r\n    )\r\n}\r\n\r\n/**\r\n * Rowr\n */\r\nfunction Row({ source = { name: \"\", path: \"\", type: \"\" }, handleItemClick }) {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    //\r\n    const [renderList, setRenderList] = React.useState([]);\r\n    const [sourcePath, setSourcePath] = React.useState(source.path);\r\n    const [isLoadding, setIsLoadding] = React.useState(true);\r\n    const pathList = React.useRef([source.path]);\r\n\r\n    React.useEffect(() => {\r\n        refController.current = new AbortController();\r\n        let categoryList = CategoryListCache.getElementByPath(source.path);\r\n        setRenderList(categoryList);\r\n        setIsLoadding(false);\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        }\r\n    }, [source.path]);\r\n\r\n    function fetchFromAPI(path) {\r\n        // fetch API\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n\r\n        setIsLoadding(true);\r\n        ContentRender.getAllItemFromPath(path).then(data => {\r\n            if (signal.aborted) return;\r\n\r\n            console.log(\"updated\");\r\n            let dataList = makeRenderList(data, path);\r\n            setSourcePath(path);\r\n            setRenderList(dataList);\r\n            setIsLoadding(false);\r\n\r\n            CategoryListCache.updateDataIntoPath(path, dataList)\r\n        }).catch(err => {\r\n            console.log(\"Fail to fetch data.\", err);\r\n            // check unmount component\r\n            if (signal.aborted) return;\r\n            setRenderList([]);\r\n            setIsLoadding(false);\r\n        });\r\n    }\r\n\r\n    function gotoPath(path) {\r\n        let index = pathList.current.indexOf(path);\r\n        let tmpList = pathList.current.filter(p => pathList.current.indexOf(p) <= index);\r\n        pathList.current = tmpList;\r\n        setIsLoadding(true);\r\n        // load from cache\r\n        let categoryList = CategoryListCache.getElementByPath(path);\r\n\r\n        // request is reload or cache is empty\r\n        if (path === sourcePath || categoryList.length === 0) {\r\n            fetchFromAPI(path);\r\n            return;\r\n        }\r\n        setRenderList(categoryList);\r\n        setSourcePath(path);\r\n        setIsLoadding(false);\r\n    }\r\n\r\n    function onClickSubFolder(name) {\r\n        pathList.current = [...pathList.current, sourcePath + \"/\" + name];\r\n        gotoPath(sourcePath + \"/\" + name)\r\n    }\r\n\r\n    function renderPathList() {\r\n        let fixPathList = pathList.current.map(path => truncPathListItem(path));\r\n        return (\r\n            <>\r\n                {fixPathList.map((item, index) => <span className=\"pg_mm_path_item\"\r\n                    key={index}\r\n                    onClick={() => gotoPath(pathList.current[index])}>\r\n                    {item}\r\n                </span>)}\r\n            </>\r\n        )\r\n    }\r\n\r\n    function renderItem() {\r\n        if (isLoadding) {\r\n            return (<img\r\n                height=\"20px\"\r\n                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                alt=\"loadding...\"\r\n            />);\r\n        }\r\n\r\n        return renderList.map((item, index) => <Item\r\n            key={index}\r\n            name={item.name}\r\n            type={item.type}\r\n            path={item.path}\r\n            handleItemClick={handleItemClick}\r\n            onClickSubFolder={(name) => onClickSubFolder(name)}\r\n        />);\r\n    }\r\n\r\n    return (\r\n        <dl className=\"link-list\">\r\n            <dt\r\n                className=\"link-hd\"\r\n                onClick={() => gotoPath(pathList.current[pathList.current.length - 1])}>{renderPathList()}\r\n            </dt>\r\n            <dd className=\"link-bd\">\r\n                {renderItem()}\r\n            </dd>\r\n        </dl>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * Itemr\n */\r\nfunction Item(props) {\r\n    if (props.type === \"file\") {\r\n        let title = props.name.replace(\".md\", \"\");\r\n        return (\r\n            <p\r\n                onClick={() => props.handleItemClick(props.path)}\r\n                title={title} >\r\n                {title}\r\n            </p>);\r\n    }\r\n\r\n    if (props.type === \"dir\") {\r\n        return (<span\r\n            onClick={() => props.onClickSubFolder(props.name)}\r\n            title=\"\" >\r\n            {props.name}\r\n        </span>);\r\n    }\r\n}\r\n\r\n\r\nfunction makeRenderList(categoryObj, sourcePath) {\r\n    let renderList = [];\r\n    for (const property in categoryObj) {\r\n        if (typeof categoryObj[property] === \"object\" && property !== \"itemList\") {\r\n            renderList = [...renderList, {\r\n                name: property,\r\n                path: `${sourcePath}/${property}`,\r\n                type: \"dir\"\r\n            }]\r\n        }\r\n    }\r\n\r\n    if (categoryObj.itemList) {\r\n        categoryObj.itemList.forEach(item => {\r\n            item = { ...item, type: \"file\" }\r\n            renderList = [...renderList, item];\r\n        });\r\n    }\r\n    return renderList;\r\n}\r\n\r\nfunction truncPathListItem(strPath) {\r\n    let tmpPathList = strPath.split(\"/\");\r\n    return tmpPathList.pop();\r\n}\r\n\r\nCategoryList.Block = Block;\r\nexport default CategoryList;","import React from 'react';\r\nimport Viewer from '../ViewComponents/Viewer';\r\nimport \"./ViewPopup.css\";\r\n\r\nexport default function ViewPopup(props) {\r\n    const [stype, setStype] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        setStype({\r\n            display: props.display\r\n        });\r\n\r\n        return () => {\r\n        }\r\n    }, [props.display])\r\n\r\n    function onClosePopup() {\r\n        props.onClose();\r\n    }\r\n\r\n    function onEdit(filePath) {\r\n        props.onEdit(filePath);\r\n    }\r\n\r\n    async function onDelete(isSuccess) {\r\n        if (!isSuccess) {\r\n            props.onDelete(isSuccess);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={stype} className=\"pg_mm_view_popup\">\r\n            {props.source ?\r\n                <Viewer\r\n                    isPopupView\r\n                    source={props.source}\r\n                    onDelete={onDelete}\r\n                    onClose={onClosePopup}\r\n                    onEdit={onEdit}\r\n                />\r\n                : stype && !stype.animationName\r\n                    ?\r\n                    <img\r\n                        className=\"pg_mm_loadding\"\r\n                        height=\"50px\"\r\n                        src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                        alt=\"loadding...\"\r\n                    /> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n","export const setCategoryList = (categoryList) => {\r\n    return {\r\n        type: \"SET_CATEGORY_LIST\",\r\n        payload: categoryList\r\n    }\r\n}\r\n\r\nexport const setBlockCategoryObject = (categoryObject) => {\r\n    return {\r\n        type: \"SET_BLOCK_CATEGORY_OBJECT\",\r\n        payload: categoryObject\r\n    }\r\n}","import React from 'react';\r\nimport Layout from './Layout';\r\nimport CategoryList from '../ViewComponents/CategoryList';\r\nimport ViewPopup from './ViewPopup';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCategoryList } from '../Actions/ListTabReducer';\r\nimport CategoryListCache from '../Utils/CategoryListCache';\r\nimport * as request from '../API/Github/Request';\r\nimport SettingsCache from '../Utils/SettingsCache';\r\n\r\nexport default function ListTab(props) {\r\n    const dispatch = useDispatch();\r\n    //\r\n    const categoryList = useSelector(state => state.listTabData.categoryList);\r\n    const [isDisplayPopup, setIsDisplayPopup] = React.useState(\"none\");\r\n    const [dataView, setDataView] = React.useState(null);\r\n    const [isLoadding, setIsLoadding] = React.useState(false);\r\n\r\n    async function fetchTreesList(callback = function () { }) {\r\n        try {\r\n            let latestCommit = await request.getRef(\"heads/main\");\r\n            let trees = await request.getTree(latestCommit + '?recursive=true');\r\n            callback(trees);\r\n        } catch (err) {\r\n            // Redirect to Setting screen.\r\n            props.onFailed(\"Settings\");\r\n        };\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        async function getTreeList(callback = function () { }) {\r\n            try {\r\n                let latestCommit = await request.getRef(\"heads/main\");\r\n                let trees = await request.getTree(latestCommit + '?recursive=true');\r\n                callback(trees);\r\n            } catch (err) {\r\n                // Redirect to Setting screen.\r\n                props.onFailed(\"Settings\");\r\n            };\r\n        }\r\n\r\n        // Checking cache\r\n        if (!CategoryListCache.isCached()) {\r\n            setIsLoadding(true);\r\n            getTreeList(function (trees) {\r\n                // Re-update cache\r\n                CategoryListCache.setOrUpdateCache(trees);\r\n                dispatch(setCategoryList(CategoryListCache.getMainCategory()));\r\n                setIsLoadding(false);\r\n            });\r\n        }\r\n\r\n        let mainCategoryList = CategoryListCache.getMainCategory();\r\n        dispatch(setCategoryList(mainCategoryList));\r\n        return () => {\r\n            setDataView(null);\r\n        }\r\n    }, [dispatch, props]);\r\n\r\n    function handleItemClick(path) {\r\n        setIsDisplayPopup(\"block\");\r\n        ContentRender.makeContentObject(path).then(data => {\r\n            setDataView(data);\r\n        });\r\n    }\r\n\r\n    function handleClosePopups() {\r\n        setTimeout(function () {\r\n            setIsDisplayPopup(\"none\");\r\n        }, 100)\r\n        setDataView(null);\r\n    }\r\n\r\n    function handleReloadDataCache() {\r\n        CategoryListCache.setOrUpdateCache(null);\r\n        setIsLoadding(true);\r\n        dispatch(setCategoryList([]));\r\n        fetchTreesList(function (trees) {\r\n            // Re-update cache\r\n            setTimeout(function () {\r\n                CategoryListCache.setOrUpdateCache(trees);\r\n                dispatch(setCategoryList(CategoryListCache.getMainCategory()));\r\n                setIsLoadding(false);\r\n            }, 500);\r\n        });\r\n    }\r\n\r\n    function loadding() {\r\n        if (isLoadding) {\r\n            return (\r\n                <img className='pg_mm_list_loadding unselectable' width=\"50px\"\r\n                    src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                    alt=\"empty\"\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            {loadding()}\r\n            <Layout.MiddleContent >\r\n                <span\r\n                    onClick={handleReloadDataCache}\r\n                    className='pg_mm_reload_button'>\r\n                    Reload (Caching {SettingsCache.getCacheMinutes()} minutes)\r\n                </span>\r\n                <CategoryList>\r\n                    {categoryList.map((categoryName, index) => <CategoryList.Block\r\n                        handleItemClick={handleItemClick}\r\n                        key={index}\r\n                        name={categoryName}\r\n                    />)}\r\n                </CategoryList>\r\n                <div className=\"pg_mm_view_popup_block\">\r\n                    <ViewPopup\r\n                        onDelete={(isSuccess) => isSuccess ? setIsDisplayPopup(\"none\") : props.onFailed(\"Settings\")}\r\n                        onEdit={(filePath) => props.onEdit(filePath)}\r\n                        onClose={handleClosePopups}\r\n                        source={dataView}\r\n                        display={isDisplayPopup}\r\n                    />\r\n                </div>\r\n            </Layout.MiddleContent >\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ContentRender } from \"../Utils/ContentRender\";\r\n\r\nexport default function CategoryInput(props) {\r\n    // use for control sync process\r\n    const refController = React.useRef(null);\r\n    const style = useSelector(state => state.style);\r\n    //\r\n    const nameInput = React.useRef(\"\");\r\n    const pathDataList = React.useRef([]);\r\n    const [categoryList, setCategoryList] = React.useState([]);\r\n    const [pathRenderList, setPathRenderList] = React.useState([]);\r\n    const [isFetching, setIsFetching] = React.useState(false);\r\n    const makeReturn = () => {\r\n        let category = \"\";\r\n        if (pathDataList.current && pathDataList.current.length > 0) {\r\n            category = pathDataList.current.map((item) => item.name).join(\"\");\r\n        }\r\n        return { category: category, title: nameInput.current.value }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        function makePathStr(list) {\r\n            if (list.length === 0) return \"\";\r\n\r\n            let path = \"\";\r\n            list.forEach(el => {\r\n                path += el.name;\r\n            });\r\n            return path;\r\n        }\r\n        // Set default title\r\n        nameInput.current.value = props.defaultTitle;\r\n        // Set default category\r\n        let categorys = props.defaultCategory.split(\"/\");\r\n        categorys = categorys.filter(p => p !== \"\");\r\n        let categoryPathList = [];\r\n        categorys.forEach(element => {\r\n            element = { name: element + \"/\" };\r\n            element = { ...element, path: makePathStr(categoryPathList) + element.name }\r\n            element = { ...element, subList: [] }\r\n            categoryPathList.push(element);\r\n        });\r\n        pathDataList.current = categoryPathList;\r\n        setPathRenderList(categoryPathList);\r\n\r\n        // Make category list\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        ContentRender.getAllCategoryList(\"\", signal).then((data) => {\r\n            // check unmount component\r\n            if (signal.aborted) return;\r\n            setCategoryList([...data]);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        };\r\n    }, [props]);\r\n\r\n    async function makeNewCategory(name, callback = function () { }) {\r\n        if (name !== \"/\" && name.endsWith(\"/\")) {\r\n            // Fetch sublist\r\n            let currentPath = pathRenderList.map((item) => item.name).join(\"\");\r\n            let newPath = {\r\n                name: name,\r\n                path: currentPath + name,\r\n                subList: [],\r\n            };\r\n            pathDataList.current = [...pathDataList.current, newPath];\r\n            setPathRenderList(pathDataList.current);\r\n            callback(true);\r\n\r\n\r\n            // Update sub list from API\r\n            setIsFetching(true);\r\n            refController.current = new AbortController();\r\n            let signal = refController.current.signal;\r\n            let tmpList = await makeSubListFromAPI(signal);\r\n            // Component is unmount\r\n            if (signal.aborted) return;\r\n            pathDataList.current = tmpList;\r\n            setPathRenderList(tmpList);\r\n            setIsFetching(false);\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    async function makeSubListFromAPI(signal) {\r\n        let lastItem = pathDataList.current.at(-1);\r\n        // fetch API\r\n        let subDataList = await ContentRender.getAllCategoryList(lastItem.path, signal);\r\n        // Remove last item in list\r\n        let tmpList = [...pathDataList.current];\r\n        tmpList.pop();\r\n        //\r\n        lastItem = { ...lastItem, subList: subDataList }\r\n        tmpList.push(lastItem);\r\n        return tmpList\r\n    }\r\n\r\n    function handleKeyInput(evt) {\r\n        let key = evt.which || evt.keyCode || evt.charCode;\r\n        if (/*key === 8 || */ key === 46 && pathDataList.current.length > 0) {\r\n            // let lastItem = pathDataList.current.at(-1);\r\n            // evt.target.value = lastItem.name.substring(0, lastItem.name.length - 1);\r\n            let tmpList = [...pathDataList.current];\r\n            tmpList.pop();\r\n            pathDataList.current = tmpList;\r\n            setPathRenderList(pathDataList.current);\r\n        } else {\r\n            makeNewCategory(evt.target.value, function (success = false) {\r\n                if (success) evt.target.value = \"\";\r\n                props.onChange(makeReturn());\r\n            });\r\n        }\r\n\r\n        evt.target.focus();\r\n    }\r\n\r\n    function setNameInputValue(val) {\r\n        makeNewCategory(val + \"/\", function () {\r\n            props.onChange(makeReturn());\r\n        });\r\n        // nameInput.current.value = \"\";\r\n        nameInput.current.focus();\r\n    }\r\n\r\n    function renderSubCategoryList() {\r\n        let currentCtgList = [];\r\n        let lastItem = pathRenderList.at(-1);\r\n        if (pathRenderList.length > 0) {\r\n            currentCtgList = [...lastItem.subList];\r\n        } else {\r\n            currentCtgList = categoryList;\r\n        }\r\n\r\n        if (isFetching) {\r\n            return (\r\n                <div style={{ position: \"absolute\", top: 6, zIndex: -1, color: \"#cdcdcd\" }}>\r\n                    <img height=\"20px\"\r\n                        src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                        alt=\"loadding...\"\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (currentCtgList.length === 0) {\r\n            let name = \"root/\";\r\n            if (lastItem && lastItem.name) {\r\n                name = \".../\" + lastItem.name;\r\n            }\r\n\r\n            return (\r\n                <div style={{ position: \"absolute\", top: 6, zIndex: -1, color: \"#cdcdcd\" }}>No category from {name}</div>\r\n            )\r\n        }\r\n\r\n        return currentCtgList.map((item, index) => (\r\n            <span\r\n                onClick={() => setNameInputValue(item)}\r\n                className=\"pg_mm_sublist_item\"\r\n                key={index}\r\n            >\r\n                {item}\r\n            </span>\r\n        ));\r\n    }\r\n\r\n    // console.log(\"Re-render CategoryInput.\");\r\n    return (\r\n        <div style={{ marginBottom: 50, height: 30 }}>\r\n            <div className=\"pg_mm_path_parent\">\r\n                <span className=\"pg_mm_selected_path_item\">/</span>\r\n                {/* Render path */}\r\n                {pathRenderList.map((item, index) => (\r\n                    <span className=\"pg_mm_selected_path_item\" key={index}>\r\n                        {item.name}\r\n                    </span>\r\n                ))}\r\n                {/* Input path */}\r\n                <input\r\n                    style={style.borderLine}\r\n                    placeholder=\"Press [DEL] to back to previous folder.\"\r\n                    ref={nameInput}\r\n                    className=\"pg_mm_name_input\"\r\n                    onKeyUp={(evt) => handleKeyInput(evt)}\r\n                />\r\n            </div>\r\n            <div className=\"sub_list_redered\" style={{ marginTop: 5, position: \"relative\" }}>\r\n                {renderSubCategoryList()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { getSingleton as LocalCache } from \"./CacheManager\";\r\n\r\nconst CACHE_KEY = \"pg_mm_content_writer\";\r\nconst writerCache = LocalCache(CACHE_KEY);\r\n\r\nconst ContentWriterCache = (function () {\r\n\r\n    function setTitle(title) {\r\n        writerCache.add(\"title\", title);\r\n    }\r\n\r\n    function getTitle() {\r\n        let title = writerCache.get(\"title\");\r\n        if (!title) return \"\";\r\n        return title;\r\n    }\r\n\r\n    function setContent(content) {\r\n        writerCache.add(\"content\", content);\r\n    }\r\n\r\n    function getContent() {\r\n        let content = writerCache.get(\"content\");\r\n        if (!content) return \"\";\r\n        return content;\r\n    }\r\n\r\n    function releaseCache() {\r\n        writerCache.add(\"title\", \"\");\r\n        writerCache.add(\"content\", \"\");\r\n        writerCache.add(\"path\", \"\");\r\n        writerCache.add(\"isUpdate\", false);\r\n    }\r\n\r\n    function setPath(path) {\r\n        writerCache.add(\"path\", path);\r\n    }\r\n\r\n    function getPath() {\r\n        let path = writerCache.get(\"path\");\r\n        if (!path) return \"\";\r\n        return path;\r\n    }\r\n\r\n    function getCategory() {\r\n        let path = writerCache.get(\"path\");\r\n        if (!path) return \"\";\r\n\r\n        if (!path.includes(\"/\")) return \"\";\r\n\r\n        return path.replace(/\\/[^/]+.md/gm, \"\");\r\n    }\r\n\r\n    function setIsUpdate(isUpdate) {\r\n        writerCache.add(\"isUpdate\", isUpdate);\r\n    }\r\n\r\n    function isUpdate() {\r\n        let isUpdate = writerCache.get(\"isUpdate\");\r\n        if (!isUpdate) return false;\r\n        return isUpdate;\r\n    }\r\n\r\n    return {\r\n        setTitle: setTitle,\r\n        getTitle: getTitle,\r\n        setContent: setContent,\r\n        getContent: getContent,\r\n        releaseCache: releaseCache,\r\n        setPath: setPath,\r\n        getPath: getPath,\r\n        getCategory: getCategory,\r\n        setIsUpdate: setIsUpdate,\r\n        isUpdate: isUpdate\r\n    };\r\n})();\r\n\r\nexport default ContentWriterCache;","import React, { useState, useRef } from 'react';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport Layout from './Layout';\r\nimport * as hub from '../Utils/GithubCRUD';\r\nimport { StringUtils } from '../Utils/StringUtils';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport CategoryInput from '../ViewComponents/CategoryInput';\r\nimport { getSingleton as LocalCache } from '../Utils/CacheManager';\r\n// import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport { ContentRender } from '../Utils/ContentRender';\r\nimport { useSelector } from 'react-redux';\r\nimport ContentWriterCache from '../Utils/ContentWriterCache';\r\n// var fs = require('fs');\r\n\r\nexport default function WriterTab(props) {\r\n    // Use for control sync process\r\n    const refController = React.useRef(null);\r\n    // Use for store data\r\n    const mdParser = new MarkdownIt();\r\n    const [content, setContent] = useState(\"\");\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const title = useRef(\"\");\r\n    const category = useRef(\"\");\r\n\r\n    // Use for update file\r\n    const { updateAction } = props;\r\n    const { inputPath, clearPath } = updateAction;\r\n    const isCreateed = useRef(!inputPath);\r\n\r\n    const originData = useRef({\r\n        title: null,\r\n        category: null,\r\n        content: null\r\n    });\r\n\r\n    const style = useSelector(state => state.style);\r\n\r\n    React.useEffect(() => {\r\n        // Check settings\r\n        const CACHE_KEY = \"pg_mm_settings\";\r\n        const cache = LocalCache(CACHE_KEY);\r\n        const TOKEN_KEY = cache.has(\"accessKey\") ? cache.get(\"accessKey\") : \"\";\r\n\r\n        if (StringUtils.isNullOrEmpty(TOKEN_KEY)) {\r\n            props.onFailed(\"Settings\");\r\n            return;\r\n        }\r\n\r\n        if (inputPath === ContentWriterCache.isUpdate() || isCreateed.current) {\r\n            title.current = ContentWriterCache.getTitle();\r\n            category.current = ContentWriterCache.getCategory();\r\n            setContent(ContentWriterCache.getContent());\r\n\r\n            isCreateed.current = !ContentWriterCache.isUpdate();\r\n            return;\r\n        }\r\n\r\n        // For update data\r\n        clearPath();\r\n        ContentWriterCache.setIsUpdate(true);\r\n        ContentWriterCache.setPath(inputPath);\r\n\r\n        // fetch API\r\n        refController.current = new AbortController();\r\n        let signal = refController.current.signal;\r\n        ContentRender.makeContentObject(inputPath, signal).then(data => {\r\n            if (!data) return;\r\n            title.current = data.title;\r\n            category.current = data.category;\r\n            originData.current = {\r\n                title: data.title,\r\n                category: data.category,\r\n                originData: data.content\r\n            }\r\n            setContent(data.content);\r\n        });\r\n\r\n        return () => {\r\n            refController.current.abort();\r\n        }\r\n    }, [clearPath, inputPath, props])\r\n\r\n    function handleImageUpload(file, callback) {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            let fileName = new Date().getTime() + \"_\" + file.name;\r\n            let data = {\r\n                message: `Upload file ${fileName}`,\r\n                content: reader.result.substr(reader.result.indexOf(',') + 1)\r\n            }\r\n\r\n            hub.create(data, `Images/${fileName}`).then(res => {\r\n                if (res && res.content && res.content.download_url) {\r\n                    callback(res.content.download_url)\r\n                }\r\n            });\r\n        }\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    /**\r\n     * After click button submit collect data from form and call API\r\n     */\r\n    async function handleSubmit() {\r\n        if (StringUtils.trim(title.current, \"\") === \"\") {\r\n            NotificationManager.error(\"Please input title!!!\");\r\n            return;\r\n        }\r\n\r\n        if (StringUtils.trim(category.current, \"\") === \"\") {\r\n            NotificationManager.error(\"Please select category!!!\");\r\n            return;\r\n        }\r\n\r\n        if (StringUtils.trim(content, \"\") === \"\" || StringUtils.trim(content, \"\").length < 50) {\r\n            NotificationManager.error(\"Please input content than 50 charactor!!!\");\r\n            return;\r\n        }\r\n\r\n        // correct data\r\n        // make data from form data for API body\r\n        let id = new Date().getTime();\r\n        let titleFix = /*StringUtils.nonAccentVietnamese(title.current);*/title.current;\r\n        let filePath = `${category.current}/${StringUtils.truncateString(titleFix, 25)}.md`;\r\n        filePath = filePath.replaceAll(\"//\", \"/\");\r\n\r\n        // content of file md\r\n        let fileContent = \"\";\r\n        fileContent += `---\\n`;\r\n        fileContent += `id: ${id}\\n`;\r\n        fileContent += `title: ${title.current}\\n`;\r\n        fileContent += `category: ${category.current}\\n`;\r\n        fileContent += `---\\n\\n`;\r\n        fileContent += content;\r\n\r\n        let commitMsg = isCreateed.current\r\n            ? \"Create file \" + category.current + \"/\" + StringUtils.truncateString(titleFix, 25)\r\n            : \"Update file \" + inputPath;\r\n\r\n        let data = {\r\n            message: commitMsg,\r\n            content: StringUtils.base64Encode(fileContent)\r\n        }\r\n\r\n        store(data, filePath);\r\n    }\r\n\r\n    async function store(data, filePath) {\r\n        setIsProcessing(true);\r\n        if (isCreateed.current) {\r\n            let response = await hub.create(data, filePath);\r\n            if (response && response.commit) {\r\n                NotificationManager.info(response.commit.html_url, \"Commited\", 5000, function () {\r\n                    window.open(response.commit.html_url, '_blank').focus();\r\n                }, false);\r\n                setIsProcessing(false);\r\n                // release cache\r\n                ContentWriterCache.releaseCache();\r\n            }\r\n        } else {\r\n            if (title.current !== originData.current.title\r\n                || category.current !== originData.current.category) {\r\n                console.log(\"update path send...\")\r\n                await hub.move(\"main\", inputPath, filePath);\r\n            }\r\n\r\n            if (content !== originData.current.content) {\r\n                console.log(\"update content send...\")\r\n                await hub.update(data, filePath).catch(err => {\r\n                    NotificationManager.error(err + \"\");\r\n                });\r\n            }\r\n            setIsProcessing(false);\r\n            NotificationManager.info(\"Updated\");\r\n            // release cache\r\n            ContentWriterCache.releaseCache();\r\n        }\r\n    }\r\n\r\n    function handleChangeCategory(source = { category: \"\", title: \"\" }) {\r\n        title.current = source.title;\r\n        category.current = source.category;\r\n\r\n        //cache\r\n        ContentWriterCache.setContent(content);\r\n        ContentWriterCache.setTitle(source.title);\r\n        if (!StringUtils.isNullOrEmpty(source.title)) {\r\n            ContentWriterCache.setPath(source.category + source.title + \".md\");\r\n        } else {\r\n            ContentWriterCache.setPath(source.category);\r\n        }\r\n    }\r\n\r\n    function handleChangeConetnt({ html, text }) {\r\n        setContent(text)\r\n\r\n        //cache\r\n        ContentWriterCache.setContent(text);\r\n        ContentWriterCache.setTitle(title.current);\r\n    }\r\n\r\n    function handleClearForm() {\r\n        ContentWriterCache.releaseCache();\r\n        setContent(\"Loadding...\");\r\n\r\n        setTimeout(function () {\r\n            title.current = \"\";\r\n            category.current = \"\";\r\n            isCreateed.current = true;\r\n            setContent(\"\");\r\n        }, 500)\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            <Layout.MiddleContent>\r\n                <>\r\n                    <div style={{ width: \"85%\", height: 90, float: 'left' }}>\r\n                        <CategoryInput\r\n                            defaultTitle={title.current}\r\n                            defaultCategory={category.current}\r\n                            onChange={handleChangeCategory}\r\n                        />\r\n                    </div>\r\n                    {/* Save button  */}\r\n                    <button\r\n                        style={{ ...style.button, width: '9%', height: '40px', float: 'right', marginLeft: 2 }}\r\n                        className='pg_mm_write_button'\r\n                        onClick={handleSubmit}>\r\n                        {isCreateed.current ? \"Create\" : \"Update\"}\r\n                    </button>\r\n\r\n                    {\r\n                        !StringUtils.isNullOrEmpty(content)\r\n                            ?\r\n                            <button\r\n                                style={{ ...style.button, width: '5%', height: '40px', float: 'right', backgroundColor: '#dcdcdc' }}\r\n                                className='pg_mm_write_button'\r\n                                onClick={handleClearForm}>\r\n                                Cancel\r\n                            </button>\r\n                            : \"\"\r\n                    }\r\n                </>\r\n                <div style={{ marginTop: '5px' }}></div>\r\n                <MdEditor\r\n                    value={content}\r\n                    onImageUpload={handleImageUpload}\r\n                    style={{ height: 'calc(100vh - 160px', width: '100%' }}\r\n                    renderHTML={text => mdParser.render(text)}\r\n                    onChange={handleChangeConetnt}\r\n                />\r\n\r\n                {\r\n                    isProcessing ?\r\n                        <div className=\"pg_mm_loadding\">\r\n                            <img height=\"45px\"\r\n                                src=\"https://raw.githubusercontent.com/cuongphuong/memo/master/public/icon/blue_loading.gif\"\r\n                                alt=\"loadding...\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                        ''\r\n                }\r\n\r\n            </Layout.MiddleContent>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Layout from './Layout';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport './SettingsTab.css';\r\nimport { useSelector } from 'react-redux';\r\nimport SettingsCache from '../Utils/SettingsCache';\r\n\r\nexport default function SettingsTab() {\r\n    const urlRepositoryInput = React.useRef(null);\r\n    const cacheTimeDayInput = React.useRef(null);\r\n    const requestTimeoutInput = React.useRef(null);\r\n    const accessKeyInput = React.useRef(null);\r\n    const userNameInput = React.useRef(null);\r\n    const emailInput = React.useRef(null);\r\n\r\n    const style = useSelector(state => state.style);\r\n\r\n    React.useEffect(() => {\r\n        urlRepositoryInput.current.value = SettingsCache.getUrlRepository();\r\n        cacheTimeDayInput.current.value = SettingsCache.getCacheMinutes();\r\n        requestTimeoutInput.current.value = SettingsCache.getRequestTimeout();\r\n        accessKeyInput.current.value = SettingsCache.getAccessKey();\r\n        userNameInput.current.value = SettingsCache.getUserName();\r\n        emailInput.current.value = SettingsCache.getEmail();\r\n        return () => { }\r\n    }, [])\r\n\r\n\r\n    function handleSave() {\r\n        if (!window.confirm(\"Do you want to save?\") === true) {\r\n            return;\r\n        }\r\n\r\n        SettingsCache.setUrlRepository(urlRepositoryInput.current.value);\r\n        SettingsCache.setCacheTimeMinute(cacheTimeDayInput.current.value);\r\n        SettingsCache.setRequestTimeout(requestTimeoutInput.current.value);\r\n        SettingsCache.setAccessKey(accessKeyInput.current.value);\r\n        SettingsCache.setUserName(userNameInput.current.value);\r\n        SettingsCache.setEmail(emailInput.current.value);\r\n\r\n        NotificationManager.info(\"Success, reload after 2s.\");\r\n        setTimeout(function () {\r\n            window.location.reload();\r\n        }, 2000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pg_mm_amination\">\r\n            <Layout.MiddleContent >\r\n                <h3 className='pg_mm_settings_area'>Data settings</h3>\r\n                <input\r\n                    ref={urlRepositoryInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='URL to repository...'\r\n                    defaultValue=\"https://github.com/cuongphuong/memo_data\"\r\n                />\r\n                <span\r\n                    className='pg_mm_example'>\r\n                    Repo for save data ex: https://github.com/cuongphuong/memo_data\r\n                </span>\r\n\r\n                <br />\r\n                <input\r\n                    type=\"number\"\r\n                    ref={cacheTimeDayInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Cache time (ms)...'\r\n                    defaultValue=\"10\"\r\n                />\r\n                <span\r\n                    className='pg_mm_example'>\r\n                    Cache time (minutes) ex: 5 minutes\r\n                </span>\r\n\r\n                <br />\r\n                <input\r\n                    type=\"number\"\r\n                    ref={requestTimeoutInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Request timeout (ms)...'\r\n                    defaultValue=\"5000\"\r\n                />\r\n                <span\r\n                    className='pg_mm_example'>\r\n                    Request timeout (ms) ex: 5000 (5 seconds)\r\n                </span>\r\n\r\n                <h3 className='pg_mm_settings_area'>Github account setting</h3>\r\n                <input\r\n                    ref={accessKeyInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Access key (if private repository)...'\r\n                />\r\n                <span\r\n                    className='pg_mm_example'>\r\n                    Access key, get\r\n                    <a\r\n                        target=\"_blank\"\r\n                        href='https://github.com/settings/tokens'\r\n                        rel=\"noreferrer\"> here\r\n                    </a> ex: ghp_ILEBZ7OZbzmnMd33z8MwStkSvp6zQq1MDYHQ\r\n                </span>\r\n\r\n                <br />\r\n                <input\r\n                    ref={userNameInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Username github...'\r\n                />\r\n                <span\r\n                    className='pg_mm_example'>\r\n                    Github Username\r\n                </span>\r\n\r\n                <br />\r\n                <input\r\n                    ref={emailInput}\r\n                    className='pg_mm_settings_input'\r\n                    placeholder='Email...'\r\n                />\r\n                <span\r\n                    className='pg_mm_example'>\r\n                    Email: xxx@gmail.com\r\n                </span>\r\n\r\n                <br />\r\n                <button\r\n                    style={style.button}\r\n                    onClick={handleSave}\r\n                    className='pg_mm_settings_submit'>\r\n                    Save\r\n                </button>\r\n            </Layout.MiddleContent>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as ReducerAction from '../Actions/StyleReducer';\r\nimport \"./StyleSettings.css\";\r\nimport SettingsCache from '../Utils/SettingsCache';\r\n\r\nexport default function StyleSettings() {\r\n    const dispatch = useDispatch();\r\n\r\n    function changeStyle(color) {\r\n        let action = null;\r\n        switch (color) {\r\n            case \"tomato\":\r\n                action = ReducerAction.changeToTomatoStyle();\r\n                SettingsCache.setTheme(\"tomato\");\r\n                dispatch(action);\r\n                break;\r\n            case \"blue\":\r\n                action = ReducerAction.changeToBlueStyle();\r\n                SettingsCache.setTheme(\"blue\");\r\n                dispatch(action);\r\n                break;\r\n            case \"violet\":\r\n                action = ReducerAction.changeToVioletStyle();\r\n                SettingsCache.setTheme(\"violet\");\r\n                dispatch(action);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='pg_mm_style_settings unselectable'>\r\n            <span onClick={() => changeStyle(\"tomato\")}></span>\r\n            <span onClick={() => changeStyle(\"blue\")}></span>\r\n            <span onClick={() => changeStyle(\"violet\")}></span>\r\n        </div>\r\n    )\r\n}\r\n","export const changeToTomatoStyle = () => {\r\n    return {\r\n        type: \"CHANGE_TO_TOMATO_STYLE\"\r\n    }\r\n}\r\n\r\nexport const changeToBlueStyle = () => {\r\n    return {\r\n        type: \"CHANGE_TO_BLUE_STYLE\"\r\n    }\r\n}\r\n\r\nexport const changeToVioletStyle = () => {\r\n    return {\r\n        type: \"CHANGE_TO_VIOLET_STYLE\"\r\n    }\r\n}","import React from 'react'\nimport Layout from './LayoutComponents/Layout';\nimport QuickSearchTab from './LayoutComponents/QuickSearchTab';\nimport ListTab from './LayoutComponents/ListTab';\nimport WriterTab from './LayoutComponents/WriterTab';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport SettingsTab from './LayoutComponents/SettingsTab';\nimport { getSingleton as LocalCache } from \"./Utils/CacheManager.js\";\nimport StyleSettings from './ViewComponents/StyleSettings';\nimport SettingsCache from './Utils/SettingsCache';\nimport { useDispatch } from 'react-redux';\nimport * as ReducerAction from './Actions/StyleReducer';\n\nfunction App() {\n    const menuList = [\"Search\", \"List\", \"Write\"];\n    // state\n    const [selectedMenu, setSelectedMenu] = React.useState(menuList[0]);\n    const viewContentObj = React.useRef(null);\n    const editPath = React.useRef(null);\n    const setViewContentObj = (obj) => { viewContentObj.current = obj; }\n\n    // Cache\n    const CACHE_KEY = \"pg_mm_settings\";\n    const cache = React.useRef(LocalCache(CACHE_KEY));\n    const dispatch = useDispatch();\n\n    React.useEffect(() => {\n        function changeStyle(color) {\n            let action = null;\n            switch (color) {\n                case \"tomato\":\n                    action = ReducerAction.changeToTomatoStyle();\n                    SettingsCache.setTheme(\"tomato\");\n                    dispatch(action);\n                    break;\n                case \"blue\":\n                    action = ReducerAction.changeToBlueStyle();\n                    SettingsCache.setTheme(\"blue\");\n                    dispatch(action);\n                    break;\n                case \"violet\":\n                    action = ReducerAction.changeToVioletStyle();\n                    SettingsCache.setTheme(\"blue\");\n                    dispatch(action);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        changeStyle(SettingsCache.getTheme());\n    }, [dispatch]);\n\n    function onSubmitSuccess(obj) {\n        setViewContentObj(obj);\n        // Back to search component\n        setSelectedMenu(menuList[0]);\n    }\n\n    function onEditFile(filePath) {\n        editPath.current = filePath;\n        setSelectedMenu(menuList[2]);\n    }\n\n    const updateAction = {\n        inputPath: editPath.current,\n        clearPath: function () {\n            editPath.current = null;\n        }\n    }\n\n    function rederTabView() {\n        let items = cache.current.getAll();\n        if (cache.current.isExpired() || Object.keys(items).length === 0) {\n            return <SettingsTab />;\n        }\n\n        switch (selectedMenu) {\n            case \"Search\":\n                return <QuickSearchTab onEdit={onEditFile} defaultPost={viewContentObj.current} />;\n            case \"List\":\n                return <ListTab onEdit={onEditFile} onFailed={setSelectedMenu} />;\n            case \"Write\":\n                return <WriterTab\n                    updateAction={updateAction}\n                    actionSubmit={onSubmitSuccess}\n                    onFailed={setSelectedMenu}\n                />\n            case \"Settings\":\n                return <SettingsTab />;\n            default:\n                return <QuickSearchTab />;\n        }\n    }\n\n    return (\n        <Layout>\n            <Layout.Header>\n                <Layout.Header.Item\n                    key=\"Settings\"\n                    selected={selectedMenu}\n                    onClick={(title) => setSelectedMenu(title)}\n                    title=\"Settings\"\n                />\n\n                {menuList.map(item => item !== \"Setting\" ? (\n                    <Layout.Header.Item\n                        key={item}\n                        selected={selectedMenu}\n                        onClick={(title) => setSelectedMenu(title)}\n                        title={item}\n                    />\n                ) : \"\")}\n            </Layout.Header>\n\n            <Layout.FullContent>\n                {rederTabView()}\n            </Layout.FullContent>\n            <NotificationContainer />\n            <StyleSettings />\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initState = {\r\n    // ListTab.js\r\n    categoryList: [],\r\n    // CategoryList.Block.js\r\n    blockCategoryObj: {}\r\n}\r\n\r\nconst ListTabReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CATEGORY_LIST': {\r\n            let newCategoryList = [...action.payload];\r\n            return { ...state, categoryList: newCategoryList };\r\n        }\r\n        case 'SET_BLOCK_CATEGORY_OBJECT': {\r\n            let newBlockCategoryObj = { ...action.payload };\r\n            return { ...state, blockCategoryObj: newBlockCategoryObj };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default ListTabReducer;","let initState = {\r\n    mdContent: null, // Content for show on view\r\n    searchResultList: [], // Search result API\r\n    activeId: null, // ActiveId\r\n    searchKeyWord: \"\"\r\n}\r\n\r\nconst SearchReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"SearchReducer/setActiveId\": {\r\n            return { ...state, activeId: action.payload };\r\n        }\r\n        case \"SearchReducer/setMdContent\": {\r\n            return { ...state, mdContent: action.payload };\r\n        }\r\n        case \"SearchReducer/setSearchResultList\": {\r\n            let searchResultList = [...action.payload];\r\n            return { ...state, searchResultList: searchResultList };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default SearchReducer;","const orangeStyle = {\r\n    headerMenu: {\r\n        backgroundColor: \"#eec0c6\",\r\n        backgroundImage: \"linear-gradient(315deg, #eec0c6 0%, #e58c8a 74%)\"\r\n    },\r\n    category: { \"background\": \"linear-gradient(102deg, rgba(2,0,36,1) 0%, rgba(102,228,210,1) 0%, rgba(255,157,135,0.8434971400669643) 0%, rgba(244,123,58,0.35890330253195024) 100%, rgba(244,124,60,0.5157660476299895) 100%, rgba(80,193,184,1) 100%)\" },\r\n    menuSelected: {\r\n        background: \"#ffd6d6\",\r\n        color: \"#333 !important\"\r\n    },\r\n    leftBackground: {\r\n        backgroundColor: \"#f0edd9\"\r\n    },\r\n    borderLine: {\r\n        border: \"solid tomato 1px\"\r\n    },\r\n    borderLineHover: {\r\n        border: \"solid 1px rgb(252, 139, 119)\",\r\n        boxShadow: \"1px 1px 5px 1px rgb(252, 139, 119)\"\r\n    },\r\n    button: {\r\n        backgroundColor: \"#e58c8a\",\r\n        color: \"#fff\"\r\n    },\r\n    input: {\r\n        outline: \"none\",\r\n        border: \"solid tomato 1px\"\r\n    }\r\n}\r\n\r\nconst blueStyle = {\r\n    headerMenu: {\r\n        background: \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(102,228,210,1) 0%, rgba(80,193,184,1) 98%)\"\r\n    },\r\n    category: { \"background\": \"linear-gradient(102deg, rgba(2,0,36,1) 0%, rgba(84,203,204,0.8519005014115021) 0%, rgba(90,204,195,0.4149257114955357) 100%, rgba(244,123,58,0.35890330253195024) 100%, rgba(244,124,60,0.5157660476299895) 100%, rgba(71,217,196,1) 100%)\" },\r\n    menuSelected: {\r\n        background: \"#b0f4e9\",\r\n        color: \"#333 !important\"\r\n    },\r\n    leftBackground: {\r\n        backgroundColor: \"#e5f2f0\"\r\n    },\r\n    borderLine: {\r\n        border: \"solid #84d9cc 1px\"\r\n    },\r\n    borderLineHover: {\r\n        border: \"solid 1px #3dab9b\",\r\n        boxShadow: \"1px 1px 5px 1px #3dab9b\"\r\n    },\r\n    button: {\r\n        backgroundColor: \"#3dab9b\",\r\n        color: \"#fff\"\r\n    },\r\n    input: {\r\n        outline: \"none\",\r\n        border: \"solid tomato 1px\"\r\n    }\r\n}\r\n\r\nconst violetStyle = {\r\n    headerMenu: { \"background\": \"radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%)\" },\r\n    category: { \"background\": \"radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(235,174,203,0.5493794930081408) 0%, rgba(148,187,233,0.4989593249409139) 100%)\" },\r\n    menuSelected: {\r\n        background: \"#ebaecb\",\r\n        color: \"#333 !important\"\r\n    },\r\n    leftBackground: {\r\n        backgroundColor: \"#e5f2f0\"\r\n    },\r\n    borderLine: {\r\n        border: \"solid #ebaecb 1px\"\r\n    },\r\n    borderLineHover: {\r\n        border: \"solid 1px #ebaecb\",\r\n        boxShadow: \"1px 1px 5px 1px #ebaecb\"\r\n    },\r\n    button: {\r\n        backgroundColor: \"#ebaecb\",\r\n        color: \"#fff\"\r\n    },\r\n    input: {\r\n        outline: \"none\",\r\n        border: \"solid tomato 1px\"\r\n    }\r\n}\r\n\r\nconst StyleReducer = (state = blueStyle, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_TO_TOMATO_STYLE': {\r\n            return orangeStyle;\r\n        }\r\n        case 'CHANGE_TO_BLUE_STYLE': {\r\n            return blueStyle;\r\n        }\r\n        case 'CHANGE_TO_VIOLET_STYLE': {\r\n            return violetStyle;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default StyleReducer;","import { combineReducers } from \"redux\";\r\nimport ListTabReducer from \"./ListTabReducer\";\r\nimport SearchReducer from \"./SearchReducer\";\r\nimport StyleReducer from \"./StyleReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    style: StyleReducer,\r\n    listTabData: ListTabReducer,\r\n    searchData: SearchReducer\r\n});\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}